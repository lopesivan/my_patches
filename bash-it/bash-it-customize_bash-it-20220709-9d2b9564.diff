From 9d2b9564ec883f47687aa427debbcb7dfa2c56a7 Mon Sep 17 00:00:00 2001
From: Ivan Lopes <lopesivan.ufrj@gmail.com>
Date: Sat, 9 Jul 2022 20:32:56 -0300
Subject: [PATCH] customize bash-it

---
 .gitignore                                    |    6 -
 aliases/available/ag.aliases.bash             |    2 +-
 aliases/available/ansible.aliases.bash        |    2 +-
 aliases/available/apt.aliases.bash            |    6 +-
 aliases/available/atom.aliases.bash           |    2 +-
 aliases/available/bash-it.aliases.bash        |    2 +-
 aliases/available/bolt.aliases.bash           |    2 +-
 aliases/available/bundler.aliases.bash        |    2 +-
 aliases/available/clipboard.aliases.bash      |    1 +
 aliases/available/composer.aliases.bash       |    2 +-
 aliases/available/curl.aliases.bash           |   28 +-
 aliases/available/developer.aliases.bash      |   78 +
 aliases/available/dnf.aliases.bash            |    1 +
 aliases/available/docker-compose.aliases.bash |    2 +-
 aliases/available/docker.aliases.bash         |   44 +-
 aliases/available/emacs.aliases.bash          |   24 +-
 aliases/available/fuck.aliases.bash           |    6 +-
 aliases/available/general.aliases.bash        |   74 +-
 aliases/available/git.aliases.bash            |    4 +-
 aliases/available/gitsvn.aliases.bash         |    2 +-
 aliases/available/heroku.aliases.bash         |    2 +-
 aliases/available/hg.aliases.bash             |    2 +-
 aliases/available/homebrew-cask.aliases.bash  |    6 +-
 aliases/available/homebrew.aliases.bash       |    6 +-
 aliases/available/homesick.aliases.bash       |    3 +-
 aliases/available/jitsu.aliases.bash          |    2 +-
 aliases/available/kubectl.aliases.bash        |   35 +-
 aliases/available/laravel.aliases.bash        |    4 +-
 aliases/available/maven.aliases.bash          |    2 +-
 aliases/available/msys2.aliases.bash          |    7 +-
 aliases/available/mutt.aliases.bash           |   11 +
 aliases/available/node.aliases.bash           |    2 +-
 aliases/available/npm.aliases.bash            |    2 +-
 aliases/available/osx.aliases.bash            |   42 +-
 aliases/available/phoenix.aliases.bash        |    2 +-
 aliases/available/puppet.aliases.bash         |    2 +-
 aliases/available/pyrocms.aliases.bash        |  180 +-
 aliases/available/rails.aliases.bash          |    6 +-
 aliases/available/redis.aliases.bash          |   23 +
 aliases/available/svn.aliases.bash            |    2 +-
 aliases/available/systemd.aliases.bash        |   36 +-
 aliases/available/terraform.aliases.bash      |    6 +-
 aliases/available/terragrunt.aliases.bash     |    6 +-
 aliases/available/textmate.aliases.bash       |   12 +-
 aliases/available/tmux.aliases.bash           |    2 +-
 aliases/available/todo.txt-cli.aliases.bash   |   12 +-
 aliases/available/uuidgen.aliases.bash        |   12 +-
 aliases/available/vagrant.aliases.bash        |    2 +-
 aliases/available/vault.aliases.bash          |    2 +-
 aliases/available/vim.aliases.bash            |   47 +-
 aliases/available/wine.aliases.bash           |    6 +
 aliases/available/xclip.aliases.bash          |   44 +
 aliases/available/yarn.aliases.bash           |    2 +-
 completion/available/awscli.completion.bash   |    3 +-
 completion/available/bash-it.completion.bash  |  221 ++-
 completion/available/brew.completion.bash     |   25 +-
 completion/available/cht.completion.bash      |   49 +
 completion/available/defaults.completion.bash |  178 +-
 completion/available/flutter.completion.bash  |    4 +-
 completion/available/iprj.completion.bash     |    9 +
 completion/available/knife.completion.bash    |    4 +-
 completion/available/pipenv.completion.bash   |    2 +-
 completion/available/svn.completion.bash      | 1546 ++++++++++++++++-
 completion/available/system.completion.bash   |   77 +-
 completion/available/tldr.completion.bash     |   43 +
 .../available/tmuxinator.completion.bash      |   25 +
 completion/available/ttjava.completion.bash   |    7 +
 completion/available/wd.completion.bash       |  163 ++
 completion/available/xp.completion.bash       |   34 +
 custom/cd.bash.DEPRECATED                     |   32 +
 custom/conan.bash                             |    8 +
 custom/environment.bash                       |   27 +
 custom/funcoeszz.bash                         |    8 +
 custom/man.bash                               |   19 +
 custom/mpv-shot0001.jpg                       |  Bin 0 -> 128500 bytes
 custom/mpv-shot0002.jpg                       |  Bin 0 -> 128500 bytes
 custom/mpv-shot0003.jpg                       |  Bin 0 -> 128500 bytes
 custom/mpv-shot0004.jpg                       |  Bin 0 -> 128500 bytes
 custom/tp.bash                                |   35 +
 custom/xfile.bash                             |    9 +
 .../available/alias-completion.plugin.bash    |  106 +-
 plugins/available/android.plugin.bash         |   12 +
 plugins/available/arduino.plugin.bash         |   18 +
 plugins/available/autojump.plugin.bash        |    3 +-
 plugins/available/bangsh.plugin.bash          |    4 +
 plugins/available/base.plugin.bash            |   37 +-
 plugins/available/battery.plugin.bash         |  251 +--
 plugins/available/blesh.plugin.bash           |    2 +-
 plugins/available/brew.plugin.bash            |   27 +
 plugins/available/cabal.plugin.bash           |   26 +
 .../available/cmd-returned-notify.plugin.bash |   20 +-
 plugins/available/dart.plugin.bash            |    7 +
 plugins/available/dirs.plugin.bash            |  123 +-
 plugins/available/fzf.plugin.bash             |    5 +-
 plugins/available/ghcup.plugin.bash           |   10 +
 plugins/available/gif.plugin.bash             |  585 +++----
 plugins/available/git-subrepo.plugin.bash     |    9 +-
 plugins/available/goenv.plugin.bash           |    4 +
 plugins/available/gradle.plugin.bash          |   21 +-
 plugins/available/groovy.plugin.bash          |   10 +
 plugins/available/history-search.plugin.bash  |    1 +
 .../history-substring-search.plugin.bash      |    1 +
 plugins/available/history.plugin.bash         |   29 +-
 plugins/available/java.plugin.bash            |   12 +-
 plugins/available/jbang.plugin.bash           |   10 +
 plugins/available/jekyll.plugin.bash          |  625 ++++---
 plugins/available/keycode.plugin.bash         |   52 +
 plugins/available/latex.plugin.bash           |   24 +-
 plugins/available/luaenv.plugin.bash          |   12 +
 plugins/available/man.plugin.bash             |   20 +-
 plugins/available/ndenv.plugin.bash           |   12 +
 plugins/available/nginx.plugin.bash           |   91 +-
 plugins/available/osx-timemachine.plugin.bash |  121 +-
 plugins/available/osx.plugin.bash             |  230 ++-
 plugins/available/pandoc.plugin.bash          |   11 +
 plugins/available/perl5.plugin.bash           |   16 +
 plugins/available/plenv.plugin.bash           |   18 +-
 plugins/available/projects.plugin.bash        |  126 +-
 plugins/available/proxy.plugin.bash           |  175 +-
 plugins/available/pyenv.plugin.bash           |   33 +-
 plugins/available/python.plugin.bash          |   45 +-
 plugins/available/rakudobrew.plugin.bash      |    9 +
 plugins/available/roo.plugin.bash             |    9 +
 plugins/available/rustup.plugin.bash          |   18 +
 plugins/available/todo.plugin.bash            |   12 +-
 plugins/available/xterm.plugin.bash           |    6 +-
 themes/.nvimlog                               |    0
 themes/90210/90210.theme.bash                 |   19 +-
 themes/atomic/atomic.theme.bash               |  266 ++-
 themes/bakke/bakke.theme.bash                 |   20 +-
 themes/barbuk/barbuk.theme.bash               |  167 +-
 themes/base.theme.bash                        |  552 +++---
 themes/bira/bira.theme.bash                   |   22 +-
 themes/bobby-python/bobby-python.theme.bash   |   29 +-
 themes/bobby/bobby.theme.bash                 |   41 +-
 themes/brunton/brunton.theme.bash             |   31 +-
 themes/candy/candy.theme.bash                 |   10 +-
 themes/codeword/codeword.theme.bash           |   26 +-
 themes/colors.theme.bash                      |  272 +++
 themes/command_duration.theme.bash            |   69 +
 .../doubletime_multiline.theme.bash           |    2 +-
 .../doubletime_multiline_pyonly.theme.bash    |    2 +-
 themes/easy/easy.theme.bash                   |   25 +-
 themes/essential/essential.theme.bash         |  137 +-
 themes/githelpers.theme.bash                  |  255 +--
 themes/gitline/powerline.base.bash            |    2 +
 themes/norbu/norbu.theme.bash                 |   30 +-
 themes/p4helpers.theme.bash                   |   20 +-
 themes/pete/pete.theme.bash                   |   17 +-
 .../powerline-plain/powerline-plain.base.bash |    2 +-
 .../powerline-plain.theme.bash                |   19 +-
 themes/powerline/powerline.base.bash          |   37 +-
 themes/pure/pure.theme.bash                   |   42 +-
 themes/purity/purity.theme.bash               |   46 +-
 154 files changed, 5829 insertions(+), 2677 deletions(-)
 create mode 100644 aliases/available/developer.aliases.bash
 create mode 100644 aliases/available/mutt.aliases.bash
 create mode 100644 aliases/available/redis.aliases.bash
 create mode 100644 aliases/available/wine.aliases.bash
 create mode 100644 aliases/available/xclip.aliases.bash
 create mode 100644 completion/available/cht.completion.bash
 create mode 100644 completion/available/iprj.completion.bash
 create mode 100644 completion/available/tldr.completion.bash
 create mode 100755 completion/available/tmuxinator.completion.bash
 create mode 100644 completion/available/ttjava.completion.bash
 create mode 100644 completion/available/wd.completion.bash
 create mode 100644 completion/available/xp.completion.bash
 create mode 100644 custom/cd.bash.DEPRECATED
 create mode 100644 custom/conan.bash
 create mode 100644 custom/environment.bash
 create mode 100644 custom/funcoeszz.bash
 create mode 100644 custom/man.bash
 create mode 100644 custom/mpv-shot0001.jpg
 create mode 100644 custom/mpv-shot0002.jpg
 create mode 100644 custom/mpv-shot0003.jpg
 create mode 100644 custom/mpv-shot0004.jpg
 create mode 100644 custom/tp.bash
 create mode 100644 custom/xfile.bash
 create mode 100644 plugins/available/android.plugin.bash
 create mode 100644 plugins/available/arduino.plugin.bash
 create mode 100644 plugins/available/bangsh.plugin.bash
 create mode 100644 plugins/available/brew.plugin.bash
 create mode 100644 plugins/available/cabal.plugin.bash
 create mode 100644 plugins/available/dart.plugin.bash
 create mode 100644 plugins/available/ghcup.plugin.bash
 create mode 100644 plugins/available/groovy.plugin.bash
 create mode 100644 plugins/available/jbang.plugin.bash
 create mode 100644 plugins/available/keycode.plugin.bash
 create mode 100644 plugins/available/luaenv.plugin.bash
 create mode 100644 plugins/available/ndenv.plugin.bash
 create mode 100644 plugins/available/pandoc.plugin.bash
 create mode 100644 plugins/available/perl5.plugin.bash
 create mode 100644 plugins/available/rakudobrew.plugin.bash
 create mode 100644 plugins/available/roo.plugin.bash
 create mode 100644 plugins/available/rustup.plugin.bash
 create mode 100644 themes/.nvimlog
 create mode 100644 themes/colors.theme.bash
 create mode 100644 themes/command_duration.theme.bash

diff --git a/.gitignore b/.gitignore
index 8e6f12a1..9f3a6c70 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,13 +1,7 @@
 .atom-build.json
-*/enabled/*
 .DS_Store
-custom/*
 !custom/example.bash
 .rvmrc
-aliases/custom.aliases.bash
-completion/custom.completion.bash
-lib/custom.bash
-plugins/custom.plugins.bash
 *.swp
 .*.un~
 bats
diff --git a/aliases/available/ag.aliases.bash b/aliases/available/ag.aliases.bash
index 7f9af7da..e3157f94 100644
--- a/aliases/available/ag.aliases.bash
+++ b/aliases/available/ag.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'the silver searcher (ag) aliases'
 
 ## Summary for args to less:
diff --git a/aliases/available/ansible.aliases.bash b/aliases/available/ansible.aliases.bash
index 04c5d280..1c53a88e 100644
--- a/aliases/available/ansible.aliases.bash
+++ b/aliases/available/ansible.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'ansible abbreviations'
 
 alias ans=ansible
diff --git a/aliases/available/apt.aliases.bash b/aliases/available/apt.aliases.bash
index 1d43ffac..b7ef274c 100644
--- a/aliases/available/apt.aliases.bash
+++ b/aliases/available/apt.aliases.bash
@@ -6,8 +6,10 @@ cite 'about-alias'
 about-alias 'Apt and dpkg aliases for Ubuntu and Debian distros.'
 
 # set apt aliases
-function _set_pkg_aliases() {
-	if _command_exists apt; then
+function _set_pkg_aliases()
+{
+	if _command_exists apt
+	then
 		alias apts='apt-cache search'
 		alias aptshow='apt-cache show'
 		alias aptinst='sudo apt-get install -V'
diff --git a/aliases/available/atom.aliases.bash b/aliases/available/atom.aliases.bash
index 6868e2cc..8d70cffa 100644
--- a/aliases/available/atom.aliases.bash
+++ b/aliases/available/atom.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'Atom.io editor abbreviations'
 
 alias a='atom'
diff --git a/aliases/available/bash-it.aliases.bash b/aliases/available/bash-it.aliases.bash
index 1f16638b..d2975667 100644
--- a/aliases/available/bash-it.aliases.bash
+++ b/aliases/available/bash-it.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite about-alias
 about-alias 'Aliases for the bash-it command (these aliases are automatically included with the "general" aliases)'
 
 # Common misspellings of bash-it
diff --git a/aliases/available/bolt.aliases.bash b/aliases/available/bolt.aliases.bash
index 556dd7fe..8490f710 100644
--- a/aliases/available/bolt.aliases.bash
+++ b/aliases/available/bolt.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'puppet bolt aliases'
 
 # Aliases
diff --git a/aliases/available/bundler.aliases.bash b/aliases/available/bundler.aliases.bash
index 1eb00862..fc20f4ff 100644
--- a/aliases/available/bundler.aliases.bash
+++ b/aliases/available/bundler.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'ruby bundler'
 
 # Bundler Commands
diff --git a/aliases/available/clipboard.aliases.bash b/aliases/available/clipboard.aliases.bash
index 2a5c3e8c..4c7e6f5b 100644
--- a/aliases/available/clipboard.aliases.bash
+++ b/aliases/available/clipboard.aliases.bash
@@ -1,4 +1,5 @@
 # shellcheck shell=bash
+cite 'about-alias'
 about-alias 'xclip shortcuts'
 
 alias pbcopy="xclip -selection clipboard"
diff --git a/aliases/available/composer.aliases.bash b/aliases/available/composer.aliases.bash
index 85401abb..5ccb2e24 100644
--- a/aliases/available/composer.aliases.bash
+++ b/aliases/available/composer.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'common composer abbreviations'
 
 # Aliases
diff --git a/aliases/available/curl.aliases.bash b/aliases/available/curl.aliases.bash
index a270e416..a6b2b344 100644
--- a/aliases/available/curl.aliases.bash
+++ b/aliases/available/curl.aliases.bash
@@ -1,19 +1,23 @@
-# shellcheck shell=bash
+#!/bin/bash
+
+cite 'about-alias'
 about-alias 'Curl aliases for convenience.'
 
 # set apt aliases
-function _set_pkg_aliases() {
-	if _command_exists curl; then
+function _set_pkg_aliases()
+{
+	if _command_exists curl
+	then
 		# follow redirects
-		alias cl='curl -L'
-		# follow redirects, download as original name
-		alias clo='curl -L -O'
-		# follow redirects, download as original name, continue
-		alias cloc='curl -L -C - -O'
-		# follow redirects, download as original name, continue, retry 5 times
-		alias clocr='curl -L -C - -O --retry 5'
-		# follow redirects, fetch banner
-		alias clb='curl -L -I'
+                alias cl='curl -L'
+                # follow redirects, download as original name
+                alias clo='curl -L -O'
+                # follow redirects, download as original name, continue
+                alias cloc='curl -L -C - -O'
+                # follow redirects, download as original name, continue, retry 5 times
+                alias clocr='curl -L -C - -O --retry 5'
+                # follow redirects, fetch banner
+                alias clb='curl -L -I'
 		# see only response headers from a get request
 		alias clhead='curl -D - -so /dev/null'
 	fi
diff --git a/aliases/available/developer.aliases.bash b/aliases/available/developer.aliases.bash
new file mode 100644
index 00000000..a0624c2f
--- /dev/null
+++ b/aliases/available/developer.aliases.bash
@@ -0,0 +1,78 @@
+cite 'about-alias'
+about-alias 'developer aliases'
+
+alias matlab='/opt/R2020b/bin/matlab'
+alias manview='groff -Tascii -man'
+alias less='less -r'                                   # raw control characters
+alias whence='type -a'                                 # where, of a sort
+alias grep='grep --color'                              # show differences in colour
+#alias http-server='python -m SimpleHTTPServer 8000'
+#alias odoc='evince'
+alias odoc='zathura'
+alias oimg='sxiv'
+alias docs='DISPLAY=:0.0 zeal'
+# alias img='LD_LIBRARY_PATH=/usr/local/lib img2sixel'
+alias pst="env PS_ARGS=%cpu,%mem,lstart pst"
+alias calc='bc -l ~/.config/bc/*'
+alias brilho='PYENV_VERSION=system brightness-controller'
+
+alias workspace.restart='sudo systemctl restart workspace.service'
+alias sdcv='sdcv -c -2 $HOME/.config/nvim/dictionary/sdcv'
+alias pt-en='sdcv -u "Portuguese - English"'
+alias en-pt='sdcv -u "English-Portuguese"'
+alias ls-mem='ps axch -o cmd:15,%mem --sort=-%mem'
+alias ls-cpu='ps axch -o cmd:15,%cpu --sort=-%cpu'
+alias game='mednafen'
+alias git.nvim='/usr/bin/git --git-dir=$HOME/developer/dotfiles/.nvim --work-tree=$HOME/.config/nvim'
+
+# commands
+reload-keynav() { killall keynav ; keynav daemonize ;}
+ekeynav() { nvim ~/.keynavrc ;}
+ekeynav-macros() { nvim ~/.keynav_macros ;}
+egit() { nvim ~/.gitconfig ;}
+
+# Some shortcuts for different directory listings
+alias ls='ls -hF --color=tty'                          # classify files in colour
+alias dir='ls -d */'
+alias vdir='ls --color=auto --format=long'
+alias ll='ls -l'                                       # long list
+alias la='ls -A'                                       # all but . and ..
+alias l='ls -CF'                                       #
+alias lspermissions='stat -c "%a %n"'
+
+alias logout-gnome='gnome-session-quit --logout'
+alias desliga='systemctl enable poweroff.target'
+#                sudo service lightdm restart
+alias x.restart='sudo service lightdm restart'
+#alias asciiflow="google-chrome file:///${HOME}/developer/asciiflow2/index.html"
+
+alias slide='lookatme --no-ext-warn'
+# alias nf='iprj new file --list'
+
+alias rec='arecord -c 1 -r 48000 -f S16_LE -D "hw:CARD=Loopback,DEV=1,SUBDEV=0"'
+alias mic.server='sudo micclient-ubuntu-x86_64 -t wifi 192.168.2.104'
+alias ei3='vim ~/.config/i3/config'
+alias egit='vim ~/.gitconfig'
+alias xevkb="xev -event keyboard"
+alias ccat="highlight --out-format=ansi" # Color cat - print file with syntax highlighting.
+
+alias scanner='scangearmp'
+alias nw="i3-msg workspace $(wmctrl -d | rev | cut -c 1 | awk -v RS='\\s+' '{ a[$1] } END { for(i = 1; i in a; ++i); print i }')"
+#alias r='ranger --cmd "set show_hidden=true"'
+alias mvi='mpv -profile image'
+#xhost +
+#alias vp='xhost +; sudo su visualparadigm -c /opt/visualparadigm/Visual_Paradigm_14.2/bin/Visual_Paradigm'
+alias mux='tmuxinator'
+alias audio-hdmi='pacmd set-card-profile 0 "output:hdmi-stereo"'
+alias audio-analog='pacmd set-card-profile 0 "output:analog-stereo"'
+alias audio-lx3000='pacmd set-card-profile 1 "output:analog-stereo"'
+
+alias xopen='xdg-open'
+alias vp='/opt/Visual_Paradigm_16.2/bin/Visual_Paradigm'
+
+alias godarwin='GOOS=darwin GOARCH=amd64 go'
+alias golinux='GOOS=linux GOARCH=amd64 go'
+alias goraspbian='GOOS=linux GOARCH=arm GOARM=7 go'
+#alias terminal="rxvt -fn \"xft:InconsolataGo Nerd Font Mono:size=31:hinting=true:hintstyle=Regular:minspace=False\" -fb \"xft:InconsolataGo Nerd Font Mono:size=31:hinting=true:hintstyle=Bold\""
+alias terminal="rxvt -fn \"xft:DroidSansMono Nerd Font Mono:pixelsize=31:hinting=true:hintstyle=Book\""
+# vi:set nu nowrap:
diff --git a/aliases/available/dnf.aliases.bash b/aliases/available/dnf.aliases.bash
index 25007c23..9d9f0267 100644
--- a/aliases/available/dnf.aliases.bash
+++ b/aliases/available/dnf.aliases.bash
@@ -1,4 +1,5 @@
 # shellcheck shell=bash
+cite 'about-alias'
 about-alias 'dnf aliases for fedora 22+ distros'
 
 alias dnfl="dnf list"            # List packages
diff --git a/aliases/available/docker-compose.aliases.bash b/aliases/available/docker-compose.aliases.bash
index a2f637c0..3583be8f 100644
--- a/aliases/available/docker-compose.aliases.bash
+++ b/aliases/available/docker-compose.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'docker-compose abbreviations'
 
 alias dco="docker-compose"
diff --git a/aliases/available/docker.aliases.bash b/aliases/available/docker.aliases.bash
index 1c49207f..9f005aa7 100644
--- a/aliases/available/docker.aliases.bash
+++ b/aliases/available/docker.aliases.bash
@@ -1,32 +1,32 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'docker abbreviations'
 
 alias dk='docker'
-alias dklc='docker ps -l'                                                            # List last Docker container
-alias dklcid='docker ps -l -q'                                                       # List last Docker container ID
-alias dklcip='docker inspect -f "{{.NetworkSettings.IPAddress}}" $(docker ps -l -q)' # Get IP of last Docker container
-alias dkps='docker ps'                                                               # List running Docker containers
-alias dkpsa='docker ps -a'                                                           # List all Docker containers
-alias dki='docker images'                                                            # List Docker images
-alias dkrmac='docker rm $(docker ps -a -q)'                                          # Delete all Docker containers
+alias dklc='docker ps -l'  # List last Docker container
+alias dklcid='docker ps -l -q'  # List last Docker container ID
+alias dklcip='docker inspect -f "{{.NetworkSettings.IPAddress}}" $(docker ps -l -q)'  # Get IP of last Docker container
+alias dkps='docker ps'  # List running Docker containers
+alias dkpsa='docker ps -a'  # List all Docker containers
+alias dki='docker images'  # List Docker images
+alias dkrmac='docker rm $(docker ps -a -q)'  # Delete all Docker containers
 
 case $OSTYPE in
-	darwin* | *bsd* | *BSD*)
-		alias dkrmui='docker images -q -f dangling=true | xargs docker rmi' # Delete all untagged Docker images
-		;;
-	*)
-		alias dkrmui='docker images -q -f dangling=true | xargs -r docker rmi' # Delete all untagged Docker images
-		;;
+  darwin*|*bsd*|*BSD*)
+    alias dkrmui='docker images -q -f dangling=true | xargs docker rmi'  # Delete all untagged Docker images
+    ;;
+  *)
+    alias dkrmui='docker images -q -f dangling=true | xargs -r docker rmi'  # Delete all untagged Docker images
+    ;;
 esac
 
-if _bash-it-component-item-is-enabled plugin docker; then
-	# Function aliases from docker plugin:
-	alias dkrmlc='docker-remove-most-recent-container' # Delete most recent (i.e., last) Docker container
-	alias dkrmall='docker-remove-stale-assets'         # Delete all untagged images and exited containers
-	alias dkrmli='docker-remove-most-recent-image'     # Delete most recent (i.e., last) Docker image
-	alias dkrmi='docker-remove-images'                 # Delete images for supplied IDs or all if no IDs are passed as arguments
-	alias dkideps='docker-image-dependencies'          # Output a graph of image dependencies using Graphiz
-	alias dkre='docker-runtime-environment'            # List environmental variables of the supplied image ID
+if [ ! -z "$(command ls "${BASH_IT}/enabled/"{[0-9][0-9][0-9]${BASH_IT_LOAD_PRIORITY_SEPARATOR}docker,docker}.plugin.bash 2>/dev/null | head -1)" ]; then
+# Function aliases from docker plugin:
+    alias dkrmlc='docker-remove-most-recent-container'  # Delete most recent (i.e., last) Docker container
+    alias dkrmall='docker-remove-stale-assets'  # Delete all untagged images and exited containers
+    alias dkrmli='docker-remove-most-recent-image'  # Delete most recent (i.e., last) Docker image
+    alias dkrmi='docker-remove-images'  # Delete images for supplied IDs or all if no IDs are passed as arguments
+    alias dkideps='docker-image-dependencies'  # Output a graph of image dependencies using Graphiz
+    alias dkre='docker-runtime-environment'  # List environmental variables of the supplied image ID
 fi
 alias dkelc='docker exec -it $(dklcid) bash --login' # Enter last container (works with Docker 1.3 and above)
 alias dkrmflast='docker rm -f $(dklcid)'
diff --git a/aliases/available/emacs.aliases.bash b/aliases/available/emacs.aliases.bash
index a4e4111a..f8e1259b 100644
--- a/aliases/available/emacs.aliases.bash
+++ b/aliases/available/emacs.aliases.bash
@@ -1,16 +1,16 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'emacs editor'
 
 case $OSTYPE in
-	linux*)
-		alias em='emacs'
-		alias en='emacs -nw'
-		alias e='emacsclient -n'
-		alias et='emacsclient -t'
-		alias ed='emacs --daemon'
-		alias E='SUDO_EDITOR=emacsclient sudo -e'
-		;;
-	darwin*)
-		alias em='open -a emacs'
-		;;
+  linux*)
+    alias em='emacs'
+    alias en='emacs -nw'
+    alias e='emacsclient -n'
+    alias et='emacsclient -t'
+    alias ed='emacs --daemon'
+    alias E='SUDO_EDITOR=emacsclient sudo -e'
+    ;;
+  darwin*)
+    alias em='open -a emacs'
+    ;;
 esac
diff --git a/aliases/available/fuck.aliases.bash b/aliases/available/fuck.aliases.bash
index 4cfa52d8..495ea851 100644
--- a/aliases/available/fuck.aliases.bash
+++ b/aliases/available/fuck.aliases.bash
@@ -1,9 +1,9 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'fuck/please to retry last command with sudo'
 
 # Play nicely with 'thefuck' plugin
-if ! _command_exists fuck; then
-	alias fuck='sudo $(fc -ln -1)'
+if ! _command_exists fuck ; then
+    alias fuck='sudo $(fc -ln -1)'
 fi
 alias please=fuck
 alias plz=please
diff --git a/aliases/available/general.aliases.bash b/aliases/available/general.aliases.bash
index b4934489..f4ebcafb 100644
--- a/aliases/available/general.aliases.bash
+++ b/aliases/available/general.aliases.bash
@@ -1,45 +1,50 @@
-# shellcheck shell=bash
+cite about-alias
 about-alias 'general aliases'
 
-if command ls --color -d . &> /dev/null; then
-	alias ls='ls --color=auto'
-	# BSD `ls` doesn't need an argument (`-G`) when `$CLICOLOR` is set.
+if ls --color -d . &> /dev/null
+then
+  alias ls="ls --color=auto"
+elif ls -G -d . &> /dev/null
+then
+  alias ls='ls -G'        # Compact view, show colors
 fi
 
 # List directory contents
 alias sl=ls
-alias la='ls -AF' # Compact view, show hidden
+alias la='ls -AF'       # Compact view, show hidden
 alias ll='ls -al'
 alias l='ls -a'
 alias l1='ls -1'
-alias lf='ls -F'
 
-alias _='sudo'
+alias _="sudo"
 
 # Shortcuts to edit startup files
-alias vbrc='${VISUAL:-vim} ~/.bashrc'
-alias vbpf='${VISUAL:-vim} ~/.bash_profile'
+alias vbrc="vim ~/.bashrc"
+alias vbpf="vim ~/.bash_profile"
 
 # colored grep
 # Need to check an existing file for a pattern that will be found to ensure
 # that the check works when on an OS that supports the color option
-if command grep --color=auto "a" "${BASH_IT?}"/*.md &> /dev/null; then
-	alias grep='grep --color=auto'
+if grep --color=auto "a" "${BASH_IT}/"*.md &> /dev/null
+then
+  alias grep='grep --color=auto'
 fi
 
-if _command_exists gshuf; then
-	alias shuf=gshuf
+if which gshuf &> /dev/null
+then
+  alias shuf=gshuf
 fi
 
-alias c='clear'
-alias cls='clear'
+# alias c='clear'
+# alias k='clear'
+# alias cls='clear'
 
-alias edit='${EDITOR:-${ALTERNATE_EDITOR:-nano}}'
-alias pager='${PAGER:=less}'
+alias edit="$EDITOR"
+alias pager="$PAGER"
 
-alias q='exit'
+# alias q='exit'
 
-alias irc='${IRC_CLIENT:=irc}'
+alias irc="${IRC_CLIENT:=irc}"
 
 # Language aliases
 alias rb='ruby'
@@ -48,7 +53,7 @@ alias ipy='ipython'
 
 # Pianobar can be found here: http://github.com/PromyLOPh/pianobar/
 
-alias piano='pianobar'
+# alias piano='pianobar'
 
 alias ..='cd ..'         # Go up one directory
 alias cd..='cd ..'       # Common misspelling for going up one directory
@@ -60,8 +65,9 @@ alias -- -='cd -'        # Go back
 alias h='history'
 
 # Tree
-if ! _command_exists tree; then
-	alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
+if [ ! -x "$(which tree 2>/dev/null)" ]
+then
+  alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
 fi
 
 # Directory
@@ -69,21 +75,21 @@ alias md='mkdir -p'
 alias rd='rmdir'
 
 # Shorten extract
-alias xt='extract'
+alias xt="extract"
 
 # sudo editors
-alias svim='sudo ${VISUAL:-vim}'
-alias snano='sudo nano'
+alias svim="sudo vim"
+# alias snano="sudo nano"
 
 # Display whatever file is regular file or folder
-function catt() {
-	for i in "$@"; do
-		if [[ -d "$i" ]]; then
-			ls "$i"
-		else
-			cat "$i"
-		fi
-	done
+catt() {
+  for i in "$@"; do
+    if [ -d "$i" ]; then
+      ls "$i"
+    else
+      cat "$i"
+    fi
+  done
 }
 
 # The Bash-it aliases were moved to the `bash-it.aliases.bash` file. The intent of this
@@ -92,5 +98,5 @@ function catt() {
 # aliases and enable just the ones for Bash-it explicitly:
 # bash-it disable alias general
 # bash-it enable alias bash-it
-# shellcheck source-path=SCRIPTDIR
+# shellcheck source=./bash-it.aliases.bash
 source "$BASH_IT/aliases/available/bash-it.aliases.bash"
diff --git a/aliases/available/git.aliases.bash b/aliases/available/git.aliases.bash
index 507037e1..8cafa82b 100644
--- a/aliases/available/git.aliases.bash
+++ b/aliases/available/git.aliases.bash
@@ -1,4 +1,5 @@
 # shellcheck shell=bash
+cite 'about-alias'
 about-alias 'common git abbreviations'
 
 alias g='git'
@@ -130,7 +131,6 @@ alias grb='git rebase'
 alias grbc='git rebase --continue'
 alias grm='git rebase $(get_default_branch)'
 alias grmi='git rebase $(get_default_branch) -i'
-alias grma='GIT_SEQUENCE_EDITOR=: git rebase  $(get_default_branch) -i --autosquash'
 alias gprom='git fetch origin $(get_default_branch) && git rebase origin/$(get_default_branch) && git update-ref refs/heads/$(get_default_branch) origin/$(get_default_branch)' # Rebase with latest remote
 
 # reset
@@ -199,7 +199,7 @@ function gdv() {
 }
 
 function get_default_branch() {
-	if git branch | grep -q '^. main\s*$'; then
+	if git branch | grep -q main; then
 		echo main
 	else
 		echo master
diff --git a/aliases/available/gitsvn.aliases.bash b/aliases/available/gitsvn.aliases.bash
index 3c578445..feb608be 100644
--- a/aliases/available/gitsvn.aliases.bash
+++ b/aliases/available/gitsvn.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'common git-svn abbreviations'
 
 # Aliases
diff --git a/aliases/available/heroku.aliases.bash b/aliases/available/heroku.aliases.bash
index 4c822594..a749d424 100644
--- a/aliases/available/heroku.aliases.bash
+++ b/aliases/available/heroku.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'heroku task abbreviations'
 
 # heroku
diff --git a/aliases/available/hg.aliases.bash b/aliases/available/hg.aliases.bash
index d9101a03..eea819ff 100644
--- a/aliases/available/hg.aliases.bash
+++ b/aliases/available/hg.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'mercurial abbreviations'
 
 alias hs='hg status'
diff --git a/aliases/available/homebrew-cask.aliases.bash b/aliases/available/homebrew-cask.aliases.bash
index 43d206d4..57d8161c 100644
--- a/aliases/available/homebrew-cask.aliases.bash
+++ b/aliases/available/homebrew-cask.aliases.bash
@@ -1,5 +1,7 @@
-# shellcheck shell=bash
-about-alias 'Some aliases for Homebrew Cask'
+# Some aliases for Homebrew Cask
+
+cite 'about-alias'
+about-alias 'homebrew-cask abbreviations'
 
 alias bcin='brew cask install'
 alias bcrm='brew cask uninstall'
diff --git a/aliases/available/homebrew.aliases.bash b/aliases/available/homebrew.aliases.bash
index f35a38d3..15907518 100644
--- a/aliases/available/homebrew.aliases.bash
+++ b/aliases/available/homebrew.aliases.bash
@@ -1,5 +1,7 @@
-# shellcheck shell=bash
-about-alias 'Some aliases for Homebrew'
+# Some aliases for Homebrew
+
+cite 'about-alias'
+about-alias 'homebrew abbreviations'
 
 alias bup='brew update && brew upgrade'
 alias bout='brew outdated'
diff --git a/aliases/available/homesick.aliases.bash b/aliases/available/homesick.aliases.bash
index 00101eed..548efc3b 100644
--- a/aliases/available/homesick.aliases.bash
+++ b/aliases/available/homesick.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'homesick aliases'
 
 # Aliases
@@ -19,5 +19,6 @@ alias sikpsh="homesick push dotfiles"
 alias sikrc="homesick rc dotfiles"
 alias sikpth="homesick show_path dotfiles"
 alias sikst="homesick status dotfiles"
+alias siktrk="homesick track $1 dotfiles"
 alias sikulnk="homesick unlink dotfiles"
 alias sikv="homesick version"
diff --git a/aliases/available/jitsu.aliases.bash b/aliases/available/jitsu.aliases.bash
index f056e749..91e96849 100644
--- a/aliases/available/jitsu.aliases.bash
+++ b/aliases/available/jitsu.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'jitsu task abbreviations'
 
 # jitsu
diff --git a/aliases/available/kubectl.aliases.bash b/aliases/available/kubectl.aliases.bash
index aaca4ca2..440a9041 100644
--- a/aliases/available/kubectl.aliases.bash
+++ b/aliases/available/kubectl.aliases.bash
@@ -1,20 +1,25 @@
-# shellcheck shell=bash
+#!/bin/bash
+#
+# -binaryanomaly
+
+cite 'about-alias'
 about-alias 'kubectl aliases'
 
-function _set_pkg_aliases() {
-	if _command_exists kubectl; then
-		alias kc='kubectl'
-		alias kcgp='kubectl get pods'
-		alias kcgd='kubectl get deployments'
-		alias kcgn='kubectl get nodes'
-		alias kcdp='kubectl describe pod'
-		alias kcdd='kubectl describe deployment'
-		alias kcdn='kubectl describe node'
-		alias kcgpan='kubectl get pods --all-namespaces'
-		alias kcgdan='kubectl get deployments --all-namespaces'
-		# launches a disposable netshoot pod in the k8s cluster
-		alias kcnetshoot='kubectl run netshoot-$(date +%s) --rm -i --tty --image nicolaka/netshoot -- /bin/bash'
-	fi
+function _set_pkg_aliases()
+{
+  if _command_exists kubectl; then
+    alias kc='kubectl'
+    alias kcgp='kubectl get pods'
+    alias kcgd='kubectl get deployments'
+    alias kcgn='kubectl get nodes'
+    alias kcdp='kubectl describe pod'
+    alias kcdd='kubectl describe deployment'
+    alias kcdn='kubectl describe node'
+    alias kcgpan='kubectl get pods --all-namespaces'
+    alias kcgdan='kubectl get deployments --all-namespaces'
+    # launches a disposable netshoot pod in the k8s cluster
+    alias kcnetshoot='kubectl run netshoot-$(date +%s) --rm -i --tty --image nicolaka/netshoot -- /bin/bash'
+  fi
 }
 
 _set_pkg_aliases
diff --git a/aliases/available/laravel.aliases.bash b/aliases/available/laravel.aliases.bash
index 50a9749f..75a51a01 100644
--- a/aliases/available/laravel.aliases.bash
+++ b/aliases/available/laravel.aliases.bash
@@ -1,9 +1,9 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'laravel artisan abbreviations'
 
 # A list of useful laravel aliases
 
-alias laravel='${HOME?}/.composer/vendor/bin/laravel'
+alias laravel="${HOME}/.composer/vendor/bin/laravel"
 # asset
 alias a:apub='php artisan asset:publish'
 
diff --git a/aliases/available/maven.aliases.bash b/aliases/available/maven.aliases.bash
index 737826eb..f8a44a1c 100644
--- a/aliases/available/maven.aliases.bash
+++ b/aliases/available/maven.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'maven abbreviations'
 
 alias mci='mvn clean install'
diff --git a/aliases/available/msys2.aliases.bash b/aliases/available/msys2.aliases.bash
index da41cc82..a309a5b2 100644
--- a/aliases/available/msys2.aliases.bash
+++ b/aliases/available/msys2.aliases.bash
@@ -1,4 +1,6 @@
-# shellcheck shell=bash
+#!/bin/bash
+
+cite 'about-alias'
 about-alias 'MSYS2 aliases'
 
 LS_COMMON="-hG"
@@ -7,8 +9,7 @@ LS_COMMON="$LS_COMMON -I NTUSER.DAT\* -I ntuser.dat\*"
 
 # alias
 # setup the main ls alias if we've established common args
-alias ls='command ls ${LS_COMMON:-}'
+test -n "$LS_COMMON" && alias ls="command ls $LS_COMMON"
 alias ll="ls -l"
 alias la="ls -a"
 alias lal="ll -a"
-alias lf="ls -F"
diff --git a/aliases/available/mutt.aliases.bash b/aliases/available/mutt.aliases.bash
new file mode 100644
index 00000000..0e0cb818
--- /dev/null
+++ b/aliases/available/mutt.aliases.bash
@@ -0,0 +1,11 @@
+cite 'about-alias'
+about-alias 'mutt aliases'
+
+alias email='EMAILBOX=uff neomutt'
+alias email.ufrj='EMAILBOX=ufrj neomutt'
+alias email.del='EMAILBOX=del neomutt'
+alias email.poli='EMAILBOX=poli neomutt'
+alias email.hilda='EMAILBOX=hilda neomutt'
+alias email.uerj='EMAILBOX=uerj neomutt'
+
+# vi:set nu nowrap:
diff --git a/aliases/available/node.aliases.bash b/aliases/available/node.aliases.bash
index a9e29743..a1408f26 100644
--- a/aliases/available/node.aliases.bash
+++ b/aliases/available/node.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'the Node.js environment aliases'
 
 # alias to setup nodejs development environment
diff --git a/aliases/available/npm.aliases.bash b/aliases/available/npm.aliases.bash
index 27cf5c9f..bd742d5d 100644
--- a/aliases/available/npm.aliases.bash
+++ b/aliases/available/npm.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'common npm abbreviations'
 
 # Aliases
diff --git a/aliases/available/osx.aliases.bash b/aliases/available/osx.aliases.bash
index 0a16c06f..5e30bc7c 100644
--- a/aliases/available/osx.aliases.bash
+++ b/aliases/available/osx.aliases.bash
@@ -1,28 +1,27 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'osx-specific aliases'
 
 # Desktop Programs
-alias fireworks='open -a "/Applications/Adobe Fireworks CS3/Adobe Fireworks CS3.app"'
-alias photoshop='open -a "/Applications/Adobe Photoshop CS3/Adobe Photoshop.app"'
-alias preview='open -a "${PREVIEW?}"'
-alias xcode='open -a "/Applications/XCode.app"'
-alias filemerge='open -a "/Developer/Applications/Utilities/FileMerge.app"'
-alias safari='open -a safari'
-alias firefox='open -a firefox'
-alias chrome='open -a "Google Chrome"'
-alias chromium='open -a chromium'
-alias brave='open -a "Brave Browser"'
-alias dashcode='open -a dashcode'
+alias fireworks="open -a '/Applications/Adobe Fireworks CS3/Adobe Fireworks CS3.app'"
+alias photoshop="open -a '/Applications/Adobe Photoshop CS3/Adobe Photoshop.app'"
+alias preview="open -a '$PREVIEW'"
+alias xcode="open -a '/Applications/XCode.app'"
+alias filemerge="open -a '/Developer/Applications/Utilities/FileMerge.app'"
+alias safari="open -a safari"
+alias firefox="open -a firefox"
+alias chrome="open -a google\ chrome"
+alias chromium="open -a chromium"
+alias dashcode="open -a dashcode"
 alias f='open -a Finder '
 alias fh='open -a Finder .'
 alias textedit='open -a TextEdit'
 alias hex='open -a "Hex Fiend"'
 alias skype='open -a Skype'
 alias mou='open -a Mou'
-alias subl='open -a "Sublime Text"'
+alias subl='open -a Sublime\ Text'
 
-if [[ -s /usr/bin/firefox ]]; then
-	unalias firefox
+if [ -s /usr/bin/firefox ] ; then
+  unalias firefox
 fi
 
 # Requires growlnotify, which can be found in the Growl DMG under "Extras"
@@ -38,20 +37,19 @@ alias whotunes='lsof -r 2 -n -P -F n -c iTunes -a -i TCP@`hostname`:3689'
 alias flush='dscacheutil -flushcache'
 
 # Show/hide hidden files (for Mac OS X Mavericks)
-alias showhidden='defaults write com.apple.finder AppleShowAllFiles TRUE'
-alias hidehidden='defaults write com.apple.finder AppleShowAllFiles FALSE'
+alias showhidden="defaults write com.apple.finder AppleShowAllFiles TRUE"
+alias hidehidden="defaults write com.apple.finder AppleShowAllFiles FALSE"
 
 # From http://apple.stackexchange.com/questions/110343/copy-last-command-in-terminal
-# shellcheck disable=SC2142 # The quoting confuses `shellcheck`...
-alias copyLastCmd="fc -ln -1 | awk '{\$1=\$1}1' ORS='' | pbcopy"
+alias copyLastCmd='fc -ln -1 | awk '\''{$1=$1}1'\'' ORS='\'''\'' | pbcopy'
 
 # Use Finder's Quick Look on a file (^C or space to close)
 alias ql='qlmanage -p 2>/dev/null'
 
 # Mute/Unmute the system volume. Plays nice with all other volume settings.
-alias mute='osascript -e "set volume output muted true"'
-alias unmute='osascript -e "set volume output muted false"'
+alias mute="osascript -e 'set volume output muted true'"
+alias unmute="osascript -e 'set volume output muted false'"
 
 # Pin to the tail of long commands for an audible alert after long processes
 ## curl http://downloads.com/hugefile.zip; lmk
-alias lmk='say "Process complete."'
+alias lmk="say 'Process complete.'"
diff --git a/aliases/available/phoenix.aliases.bash b/aliases/available/phoenix.aliases.bash
index 08cef4f4..64728a2e 100644
--- a/aliases/available/phoenix.aliases.bash
+++ b/aliases/available/phoenix.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'phoenix abbreviations'
 
 # Phoenix Commands
diff --git a/aliases/available/puppet.aliases.bash b/aliases/available/puppet.aliases.bash
index c92d13b1..15b69923 100644
--- a/aliases/available/puppet.aliases.bash
+++ b/aliases/available/puppet.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'puppet aliases'
 
 # Aliases
diff --git a/aliases/available/pyrocms.aliases.bash b/aliases/available/pyrocms.aliases.bash
index 77865a23..d19dff91 100644
--- a/aliases/available/pyrocms.aliases.bash
+++ b/aliases/available/pyrocms.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'pyrocms abbreviations'
 
 ###
@@ -7,146 +7,146 @@ about-alias 'pyrocms abbreviations'
 ###
 
 # general
-alias a:cl="php artisan clear-compiled" # Remove the compiled class file
-alias a:d="php artisan down"            # Put the application into maintenance mode
-alias a:e="php artisan env"             # Display the current framework environment
-alias a:h="php artisan help"            # Displays help for a command
-alias a:i="php artisan install"         # Install the Streams Platform.
-alias a:ls="php artisan list"           # Lists commands
-alias a:mg="php artisan migrate"        # Run the database migrations
-alias a:op="php artisan optimize"       # Optimize the framework for better performance (deprecated)
-alias a:pr="php artisan preset"         # Swap the front-end scaffolding for the application
-alias a:s="php artisan serve"           # Serve the application on the PHP development server
-alias a:u="php artisan up"              # Bring the application out of maintenance mode
+alias a:cl="php artisan clear-compiled"          # Remove the compiled class file
+alias a:d="php artisan down"                     # Put the application into maintenance mode
+alias a:e="php artisan env"                      # Display the current framework environment
+alias a:h="php artisan help"                     # Displays help for a command
+alias a:i="php artisan install"                  # Install the Streams Platform.
+alias a:ls="php artisan list"                    # Lists commands
+alias a:mg="php artisan migrate"                 # Run the database migrations
+alias a:op="php artisan optimize"                # Optimize the framework for better performance (deprecated)
+alias a:pr="php artisan preset"                  # Swap the front-end scaffolding for the application
+alias a:s="php artisan serve"                    # Serve the application on the PHP development server
+alias a:u="php artisan up"                       # Bring the application out of maintenance mode
 
 # addon
-alias a:ad:i="php artisan addon:install"   # Install an addon.
-alias a:ad:p="php artisan addon:publish"   # Publish an the configuration and translations for an addon.
-alias a:ad:r="php artisan addon:reinstall" # Reinstall an addon.
-alias a:ad:u="php artisan addon:uninstall" # Uninstall an addon.
+alias a:ad:i="php artisan addon:install"         # Install an addon.
+alias a:ad:p="php artisan addon:publish"         # Publish an the configuration and translations for an addon.
+alias a:ad:r="php artisan addon:reinstall"       # Reinstall an addon.
+alias a:ad:u="php artisan addon:uninstall"       # Uninstall an addon.
 
 # app
-alias a:ap:n="php artisan app:name"    # Set the application namespace
-alias a:ap:p="php artisan app:publish" # Publish general application override files.
+alias a:ap:n="php artisan app:name"              # Set the application namespace
+alias a:ap:p="php artisan app:publish"           # Publish general application override files.
 
 # assets
-alias a:as:cl="php artisan assets:clear" # Clear compiled public assets.
+alias a:as:cl="php artisan assets:clear"         # Clear compiled public assets.
 
 # auth
-alias a:au:clrs="php artisan auth:clear-resets" # Flush expired password reset tokens
+alias a:au:clrs="php artisan auth:clear-resets"  # Flush expired password reset tokens
 
 # cache
-alias a:ca:cl="php artisan cache:clear" # Flush the application cache
-alias a:ca:f="php artisan cache:forget" # Remove an item from the cache
-alias a:ca:t="php artisan cache:table"  # Create a migration for the cache database table
+alias a:ca:cl="php artisan cache:clear"          # Flush the application cache
+alias a:ca:f="php artisan cache:forget"          # Remove an item from the cache
+alias a:ca:t="php artisan cache:table"           # Create a migration for the cache database table
 
 # config
-alias a:co:ca="php artisan config:cache" # Create a cache file for faster configuration loading
-alias a:co:cl="php artisan config:clear" # Remove the configuration cache file
+alias a:co:ca="php artisan config:cache"         # Create a cache file for faster configuration loading
+alias a:co:cl="php artisan config:clear"         # Remove the configuration cache file
 
 # db
-alias a:db:s="php artisan db:seed" # Seed the database with records
+alias a:db:s="php artisan db:seed"               # Seed the database with records
 
 # env
-alias a:en:s="php artisan env:set" # Set an environmental value.
+alias a:en:s="php artisan env:set"               # Set an environmental value.
 
 # event
-alias a:ev:g="php artisan event:generate" # Generate the missing events and listeners based on registration
+alias a:ev:g="php artisan event:generate"        # Generate the missing events and listeners based on registration
 
 # extension
-alias a:ex:i="php artisan extension:install"   # Install a extension.
-alias a:ex:r="php artisan extension:reinstall" # Reinstall a extension.
-alias a:ex:u="php artisan extension:uninstall" # Uninstall a extension.
+alias a:ex:i="php artisan extension:install"     # Install a extension.
+alias a:ex:r="php artisan extension:reinstall"   # Reinstall a extension.
+alias a:ex:u="php artisan extension:uninstall"   # Uninstall a extension.
 
 # files
-alias a:fi:cl="php artisan files:clean" # Clean missing files from the files table.
+alias a:fi:cl="php artisan files:clean"          # Clean missing files from the files table.
 
 # key
-alias a:ke:g="php artisan key:generate" # Set the application key
+alias a:ke:g="php artisan key:generate"          # Set the application key
 
 # make
-alias a:mk:ad="php artisan make:addon"        # Create a new addon.
-alias a:mk:au="php artisan make:auth"         # Scaffold basic login and registration views and routes
-alias a:mk:cm="php artisan make:command"      # Create a new Artisan command
-alias a:mk:ct="php artisan make:controller"   # Create a new controller class
-alias a:mk:ev="php artisan make:event"        # Create a new event class
-alias a:mk:fa="php artisan make:factory"      # Create a new model factory
-alias a:mk:j="php artisan make:job"           # Create a new job class
-alias a:mk:li="php artisan make:listener"     # Create a new event listener class
-alias a:mk:ma="php artisan make:mail"         # Create a new email class
-alias a:mk:mw="php artisan make:middleware"   # Create a new middleware class
-alias a:mk:mg="php artisan make:migration"    # Create a new migration file
-alias a:mk:md="php artisan make:model"        # Create a new Eloquent model class
-alias a:mk:no="php artisan make:notification" # Create a new notification class
-alias a:mk:po="php artisan make:policy"       # Create a new policy class
-alias a:mk:pr="php artisan make:provider"     # Create a new service provider class
-alias a:mk:rq="php artisan make:request"      # Create a new form request class
-alias a:mk:rs="php artisan make:resource"     # Create a new resource
-alias a:mk:rl="php artisan make:rule"         # Create a new validation rule
-alias a:mk:sd="php artisan make:seeder"       # Create a new seeder class
-alias a:mk:st="php artisan make:stream"       # Make a streams entity namespace.
-alias a:mk:ts="php artisan make:test"         # Create a new test class
+alias a:mk:ad="php artisan make:addon"           # Create a new addon.
+alias a:mk:au="php artisan make:auth"            # Scaffold basic login and registration views and routes
+alias a:mk:cm="php artisan make:command"         # Create a new Artisan command
+alias a:mk:ct="php artisan make:controller"      # Create a new controller class
+alias a:mk:ev="php artisan make:event"           # Create a new event class
+alias a:mk:fa="php artisan make:factory"         # Create a new model factory
+alias a:mk:j="php artisan make:job"              # Create a new job class
+alias a:mk:li="php artisan make:listener"        # Create a new event listener class
+alias a:mk:ma="php artisan make:mail"            # Create a new email class
+alias a:mk:mw="php artisan make:middleware"      # Create a new middleware class
+alias a:mk:mg="php artisan make:migration"       # Create a new migration file
+alias a:mk:md="php artisan make:model"           # Create a new Eloquent model class
+alias a:mk:no="php artisan make:notification"    # Create a new notification class
+alias a:mk:po="php artisan make:policy"          # Create a new policy class
+alias a:mk:pr="php artisan make:provider"        # Create a new service provider class
+alias a:mk:rq="php artisan make:request"         # Create a new form request class
+alias a:mk:rs="php artisan make:resource"        # Create a new resource
+alias a:mk:rl="php artisan make:rule"            # Create a new validation rule
+alias a:mk:sd="php artisan make:seeder"          # Create a new seeder class
+alias a:mk:st="php artisan make:stream"          # Make a streams entity namespace.
+alias a:mk:ts="php artisan make:test"            # Create a new test class
 
 # migrate
-alias a:mg:fr="php artisan migrate:fresh"    # Drop all tables and re-run all migrations
-alias a:mg:i="php artisan migrate:install"   # Create the migration repository
-alias a:mg:rf="php artisan migrate:refresh"  # Reset and re-run all migrations
-alias a:mg:rs="php artisan migrate:reset"    # Rollback all database migrations
-alias a:mg:rl="php artisan migrate:rollback" # Rollback the last database migration
-alias a:mg:st="php artisan migrate:status"   # Show the status of each migration
+alias a:mg:fr="php artisan migrate:fresh"        # Drop all tables and re-run all migrations
+alias a:mg:i="php artisan migrate:install"       # Create the migration repository
+alias a:mg:rf="php artisan migrate:refresh"      # Reset and re-run all migrations
+alias a:mg:rs="php artisan migrate:reset"        # Rollback all database migrations
+alias a:mg:rl="php artisan migrate:rollback"     # Rollback the last database migration
+alias a:mg:st="php artisan migrate:status"       # Show the status of each migration
 
 # module
-alias a:mo:i="php artisan module:install"   # Install a module.
-alias a:mo:r="php artisan module:reinstall" # Reinstall a module.
-alias a:mo:u="php artisan module:uninstall" # Uninstall a module.
+alias a:mo:i="php artisan module:install"        # Install a module.
+alias a:mo:r="php artisan module:reinstall"      # Reinstall a module.
+alias a:mo:u="php artisan module:uninstall"      # Uninstall a module.
 
 # notifications
-alias a:no:tb="php artisan notifications:table" # Create a migration for the notifications table
+alias a:no:tb="php artisan notifications:table"  # Create a migration for the notifications table
 
 # package
-alias a:pk:d="php artisan package:discover" # Rebuild the cached package manifest
+alias a:pk:d="php artisan package:discover"      # Rebuild the cached package manifest
 
 # queue
-alias a:qu:fa="php artisan queue:failed"       # List all of the failed queue jobs
-alias a:qu:ft="php artisan queue:failed-table" # Create a migration for the failed queue jobs database table
-alias a:qu:fl="php artisan queue:flush"        # Flush all of the failed queue jobs
-alias a:qu:fg="php artisan queue:forget"       # Delete a failed queue job
-alias a:qu:li="php artisan queue:listen"       # Listen to a given queue
-alias a:qu:rs="php artisan queue:restart"      # Restart queue worker daemons after their current job
-alias a:qu:rt="php artisan queue:retry"        # Retry a failed queue job
-alias a:qu:tb="php artisan queue:table"        # Create a migration for the queue jobs database table
-alias a:qu:w="php artisan queue:work"          # Start processing jobs on the queue as a daemon
+alias a:qu:fa="php artisan queue:failed"         # List all of the failed queue jobs
+alias a:qu:ft="php artisan queue:failed-table"   # Create a migration for the failed queue jobs database table
+alias a:qu:fl="php artisan queue:flush"          # Flush all of the failed queue jobs
+alias a:qu:fg="php artisan queue:forget"         # Delete a failed queue job
+alias a:qu:li="php artisan queue:listen"         # Listen to a given queue
+alias a:qu:rs="php artisan queue:restart"        # Restart queue worker daemons after their current job
+alias a:qu:rt="php artisan queue:retry"          # Retry a failed queue job
+alias a:qu:tb="php artisan queue:table"          # Create a migration for the queue jobs database table
+alias a:qu:w="php artisan queue:work"            # Start processing jobs on the queue as a daemon
 
 # route
-alias a:ro:ca="php artisan route:cache" # Create a route cache file for faster route registration
-alias a:ro:cl="php artisan route:clear" # Remove the route cache file
-alias a:ro:ls="php artisan route:list"  # List all registered routes
+alias a:ro:ca="php artisan route:cache"          # Create a route cache file for faster route registration
+alias a:ro:cl="php artisan route:clear"          # Remove the route cache file
+alias a:ro:ls="php artisan route:list"           # List all registered routes
 
 # schedule
-alias a:sc:r="php artisan schedule:run" # Run the scheduled commands
+alias a:sc:r="php artisan schedule:run"          # Run the scheduled commands
 
 # scout
-alias a:su:fl="php artisan scout:flush"  # Flush all of the model's records from the index
-alias a:su:im="php artisan scout:import" # Import the given model into the search index
+alias a:su:fl="php artisan scout:flush"          # Flush all of the model's records from the index
+alias a:su:im="php artisan scout:import"         # Import the given model into the search index
 
 # session
-alias a:se:tb="php artisan session:table" # Create a migration for the session database table
+alias a:se:tb="php artisan session:table"        # Create a migration for the session database table
 
 # storage
-alias a:sg:l="php artisan storage:link" # Create a symbolic link from "public/storage" to "storage/app/public"
+alias a:sg:l="php artisan storage:link"          # Create a symbolic link from "public/storage" to "storage/app/public"
 
 # streams
-alias a:st:cl="php artisan streams:cleanup" # Cleanup streams entry models.
-alias a:st:co="php artisan streams:compile" # Compile streams entry models.
-alias a:st:d="php artisan streams:destroy"  # Destroy a namespace.
-alias a:st:p="php artisan streams:publish"  # Publish configuration and translations for streams.
-alias a:st:r="php artisan streams:refresh"  # Refresh streams generated components.
+alias a:st:cl="php artisan streams:cleanup"      # Cleanup streams entry models.
+alias a:st:co="php artisan streams:compile"      # Compile streams entry models.
+alias a:st:d="php artisan streams:destroy"       # Destroy a namespace.
+alias a:st:p="php artisan streams:publish"       # Publish configuration and translations for streams.
+alias a:st:r="php artisan streams:refresh"       # Refresh streams generated components.
 
 # tntsearch
-alias a:tn:im="php artisan tntsearch:import" # Import the given model into the search index
+alias a:tn:im="php artisan tntsearch:import"     # Import the given model into the search index
 
 # vendor
-alias a:ve:p="php artisan vendor:publish" # Publish any publishable assets from vendor packages
+alias a:ve:p="php artisan vendor:publish"        # Publish any publishable assets from vendor packages
 
 # view
-alias a:vi:cl="php artisan view:clear" # Clear all compiled view files
+alias a:vi:cl="php artisan view:clear"           # Clear all compiled view files
diff --git a/aliases/available/rails.aliases.bash b/aliases/available/rails.aliases.bash
index 4de4faff..c776660e 100644
--- a/aliases/available/rails.aliases.bash
+++ b/aliases/available/rails.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'rails abbreviations'
 
 # Rails Commands
@@ -14,9 +14,9 @@ alias rd='rails destroy'
 alias dbm='rake db:migrate'
 
 alias ss='script/server'
-alias ts="thin start" # thin server
+alias ts="thin start"     # thin server
 alias sc='script/console'
 alias restartapp='touch tmp/restart.txt'
-alias restart='touch tmp/restart.txt' # restart passenger
+alias restart='touch tmp/restart.txt'  # restart passenger
 alias devlog='tail -f log/development.log'
 alias taild='tail -f log/development.log' # tail dev log
diff --git a/aliases/available/redis.aliases.bash b/aliases/available/redis.aliases.bash
new file mode 100644
index 00000000..2b1f0cbe
--- /dev/null
+++ b/aliases/available/redis.aliases.bash
@@ -0,0 +1,23 @@
+cite 'about-alias'
+about-alias 'redis aliases'
+
+_redis_list(){
+	redis-cli ZRANGE $1 0 -1
+}
+_redis_zram(){
+	db=$1
+	shift
+	redis-cli zadd $db 1 $1
+}
+
+alias redis.list='_redis_list'
+alias redis.keys='redis-cli KEYS \*'
+alias redis.get='redis-bash-cli get'
+alias redis.set='redis-bash-cli set'
+alias redis.del='redis-bash-cli del'
+alias redis.zadd='_redis_zram'
+
+alias last.list='redis-cli ZRANGE vimmru 0 -1'
+alias last.clean='redis-cli DEL vimmru'
+
+# vi:set nu nowrap:
diff --git a/aliases/available/svn.aliases.bash b/aliases/available/svn.aliases.bash
index 4d3de464..3d6d263e 100644
--- a/aliases/available/svn.aliases.bash
+++ b/aliases/available/svn.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'common svn abbreviations'
 
 # Aliases
diff --git a/aliases/available/systemd.aliases.bash b/aliases/available/systemd.aliases.bash
index 57351ae0..19b0eae6 100644
--- a/aliases/available/systemd.aliases.bash
+++ b/aliases/available/systemd.aliases.bash
@@ -1,22 +1,22 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'systemd service'
 
 case $OSTYPE in
-	linux*)
-		# Improve aliases by bringing the common root `sc|scd` + `sre` for action + `u` for user
-		alias sc='systemctl'
-		alias scu='systemctl --user'
-		alias scdr='systemctl daemon-reload'
-		alias scdru='systemctl --user daemon-reload'
-		alias scr='systemctl restart'
-		alias scru='systemctl --user restart'
-		alias sce='systemctl stop'
-		alias sceu='systemctl --user stop'
-		alias scs='systemctl start'
-		alias scsu='systemctl --user start'
-		# Keeping previous aliases for a non-breaking change.
-		alias scue='sceu'
-		alias scus='scsu'
-		alias scur='scdru'
-		;;
+    linux*)
+# Improve aliases by bringing the common root `sc|scd` + `sre` for action + `u` for user
+	alias sc='systemctl'
+	alias scu='systemctl --user'
+	alias scdr='systemctl daemon-reload'
+	alias scdru='systemctl --user daemon-reload'
+	alias scr='systemctl restart'
+	alias scru='systemctl --user restart'
+	alias sce='systemctl stop'
+	alias sceu='systemctl --user stop'
+	alias scs='systemctl start'
+	alias scsu='systemctl --user start'
+# Keeping previous aliases for a non-breaking change.
+	alias scue='sceu'
+	alias scus='scsu'
+	alias scur='scdru'
+    ;;
 esac
diff --git a/aliases/available/terraform.aliases.bash b/aliases/available/terraform.aliases.bash
index baa9b0c7..09380868 100644
--- a/aliases/available/terraform.aliases.bash
+++ b/aliases/available/terraform.aliases.bash
@@ -1,5 +1,7 @@
-# shellcheck shell=bash
-about-alias 'Aliases for Terraform and Terragrunt'
+# Aliases for Terraform and Terragrunt
+
+cite 'about-alias'
+about-alias 'Terraform abbreviations'
 
 alias tf='terraform'
 alias tfv='terraform validate'
diff --git a/aliases/available/terragrunt.aliases.bash b/aliases/available/terragrunt.aliases.bash
index 94892901..9395b351 100644
--- a/aliases/available/terragrunt.aliases.bash
+++ b/aliases/available/terragrunt.aliases.bash
@@ -1,5 +1,7 @@
-# shellcheck shell=bash
-about-alias 'Aliases for Terraform and Terragrunt'
+# Aliases for Terraform and Terragrunt
+
+cite 'about-alias'
+about-alias 'Terragrunt abbreviations'
 
 alias tg='terragrunt'
 alias tgv='terragrunt validate'
diff --git a/aliases/available/textmate.aliases.bash b/aliases/available/textmate.aliases.bash
index e53eed1a..f0f69e43 100644
--- a/aliases/available/textmate.aliases.bash
+++ b/aliases/available/textmate.aliases.bash
@@ -1,10 +1,10 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'textmate abbreviations'
 
 case $OSTYPE in
-	darwin*)
-		# Textmate
-		alias e='mate . &'
-		alias et='mate app config db lib public script test spec config.ru Gemfile Rakefile README &'
-		;;
+  darwin*)
+    # Textmate
+    alias e='mate . &'
+    alias et='mate app config db lib public script test spec config.ru Gemfile Rakefile README &'
+    ;;
 esac
diff --git a/aliases/available/tmux.aliases.bash b/aliases/available/tmux.aliases.bash
index 192db5b5..1b07f149 100644
--- a/aliases/available/tmux.aliases.bash
+++ b/aliases/available/tmux.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'Tmux terminal multiplexer'
 
 alias txl='tmux ls'
diff --git a/aliases/available/todo.txt-cli.aliases.bash b/aliases/available/todo.txt-cli.aliases.bash
index 359321a4..5bf35d0d 100644
--- a/aliases/available/todo.txt-cli.aliases.bash
+++ b/aliases/available/todo.txt-cli.aliases.bash
@@ -1,8 +1,8 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'todo.txt-cli abbreviations'
 
-alias tls='"${TODO?}" ls'
-alias ta='"${TODO?}" a'
-alias trm='"${TODO?}" rm'
-alias tdo='"${TODO?}" do'
-alias tpri='"${TODO?}" pri'
+alias tls="$TODO ls"
+alias ta="$TODO a"
+alias trm="$TODO rm"
+alias tdo="$TODO do"
+alias tpri="$TODO pri"
diff --git a/aliases/available/uuidgen.aliases.bash b/aliases/available/uuidgen.aliases.bash
index 45c36820..aada05fb 100644
--- a/aliases/available/uuidgen.aliases.bash
+++ b/aliases/available/uuidgen.aliases.bash
@@ -1,11 +1,11 @@
-# shellcheck shell=bash
+cite 'uuid-alias'
 about-alias 'uuidgen aliases'
 
 if _command_exists uuid; then # Linux
-	alias uuidu="uuid | tr '[:lower:]' '[:upper:]'"
-	alias uuidl=uuid
+  alias uuidu="uuid | tr '[:lower:]' '[:upper:]'"
+  alias uuidl=uuid
 elif _command_exists uuidgen; then # macOS/BSD
-	alias uuidu="uuidgen"
-	alias uuid="uuidgen | tr '[:upper:]' '[:lower:]'" # because upper case is like YELLING
-	alias uuidl=uuid
+  alias uuidu="uuidgen"
+  alias uuid="uuidgen | tr '[:upper:]' '[:lower:]'" # because upper case is like YELLING
+  alias uuidl=uuid
 fi
diff --git a/aliases/available/vagrant.aliases.bash b/aliases/available/vagrant.aliases.bash
index a949cbb3..d479fb2b 100644
--- a/aliases/available/vagrant.aliases.bash
+++ b/aliases/available/vagrant.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'vagrant aliases'
 
 # Aliases
diff --git a/aliases/available/vault.aliases.bash b/aliases/available/vault.aliases.bash
index 4d083fb6..d2ad8e74 100644
--- a/aliases/available/vault.aliases.bash
+++ b/aliases/available/vault.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'vault aliases'
 
 # Aliases
diff --git a/aliases/available/vim.aliases.bash b/aliases/available/vim.aliases.bash
index f8068764..562bb766 100644
--- a/aliases/available/vim.aliases.bash
+++ b/aliases/available/vim.aliases.bash
@@ -1,14 +1,41 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'vim abbreviations'
 
-_command_exists vim || return
 
-alias v='vim'
-# open the vim help in fullscreen incorporated from
-# https://stackoverflow.com/a/4687513
-alias vimh='vim -c ":h | only"'
+case $OSTYPE in
+  linux*)
+     # VIM=$(command -v vim)
+    NVIM=$(command -v nvim)
+    # NODE=$(command -v node)
+    # XCLIP=$(command -v xclip)
+    NANO=$(command -v nano)
+    EMACS=$(command -v emacs)
+
+    [[ $EMACS ]] && {
+      alias e='emacs -nw';
+      alias emacs='emacs -nw';
+    }
+
+    [[ $NVIM ]] && {
+      alias vim-plug-install="$NVIM +PlugInstall +qall";
+      alias vim-rplug-install="$NVIM +UpdateRemotePlugins +qall";
+      # alias vim-cheetah="$NVIM -c:Cheetah";
+      # alias vc="$NVIM -c:Cheetah";
+      # alias e='nvr --nostart --servername /tmp/nvim.sock';
+      alias v='NVIM_LISTEN_ADDRESS=/tmp/nvim.sock nvim'
+      # alias e="nvim $(redis-cli ZRANGE vimmru -1 -1 | awk '{print $1}')";
+    }
+
+    # [[ $XCLIP ]] && {
+    #   alias vim-xclip='vim "$(xclip -selection clipboard -o)"';
+    #   alias vim-xclip-p='vim "$(xclip -selection primary -o)"';
+    #   alias vim-xclip-s='vim "$(xclip -selection secundary -o)"';
+    # }
+
+    [[ -n $NANO ]] &&
+      { alias nano='nano -licgmLD -T4 '; }
+
+  ;;
+
+esac
 
-# open vim in new tab is taken from
-# http://stackoverflow.com/questions/936501/let-gvim-always-run-a-single-instancek
-_command_exists mvim && function mvimt { command mvim --remote-tab-silent "$@" || command mvim "$@"; }
-_command_exists gvim && function gvimt { command gvim --remote-tab-silent "$@" || command gvim "$@"; }
diff --git a/aliases/available/wine.aliases.bash b/aliases/available/wine.aliases.bash
new file mode 100644
index 00000000..d46176ef
--- /dev/null
+++ b/aliases/available/wine.aliases.bash
@@ -0,0 +1,6 @@
+cite 'about-alias'
+about-alias 'Wine commands aliases'
+
+alias sketchup='wine64 "C://Program Files//SketchUp//SketchUp 2019//SketchUp.exe"'
+
+alias gk2='wine "C://GK2//SIERRA.EXE"'
diff --git a/aliases/available/xclip.aliases.bash b/aliases/available/xclip.aliases.bash
new file mode 100644
index 00000000..9ecd71ed
--- /dev/null
+++ b/aliases/available/xclip.aliases.bash
@@ -0,0 +1,44 @@
+cite 'about-alias'
+about-alias 'xclip and xpaste shortcuts to linux'
+
+case $OSTYPE in
+  linux*)
+    XCLIP=$(command -v xclip)
+    if [[ $XCLIP ]]; then
+      s=clipboard
+      alias xcopy="$XCLIP -selection $s" &&
+        alias xpaste="$XCLIP -selection $s -o"
+
+      s=primary
+      alias xcopy-p="$XCLIP -selection $s" &&
+        alias xpaste-p="$XCLIP -selection $s -o"
+
+      s=secondary
+      alias xcopy-s="$XCLIP -selection $s" &&
+        alias xpaste-s="$XCLIP -selection $s -o"
+
+      alias  xpwd='pwd|xclip -selection secondary'
+      alias  xcd='cd $(xclip -selection secondary -o)'
+
+      xcp()
+      {
+        if [[ $# -eq 0 ]]; then
+          echo 1>&2 'Sintaxe: xcp [files]'
+        else
+          echo cp $* $(xclip -selection secondary -o)
+        fi
+      }
+
+    fi
+    ;;
+esac
+
+#alias xcopy='xclip -sel clip'
+# to use it just install xclip on your distribution and it would work like:
+# $ echo "hello" | pbcopy
+# $ pbpaste
+# hello
+
+# very useful for things like:
+# cat ~/.ssh/id_rsa.pub | pbcopy
+# have fun!
diff --git a/aliases/available/yarn.aliases.bash b/aliases/available/yarn.aliases.bash
index a2fb6d0d..b50535b9 100644
--- a/aliases/available/yarn.aliases.bash
+++ b/aliases/available/yarn.aliases.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite 'about-alias'
 about-alias 'yarn package manager aliases'
 
 # Aliases
diff --git a/completion/available/awscli.completion.bash b/completion/available/awscli.completion.bash
index 6b2c90ff..a3041837 100644
--- a/completion/available/awscli.completion.bash
+++ b/completion/available/awscli.completion.bash
@@ -1,5 +1,6 @@
 # shellcheck shell=bash
 
-if _command_exists aws_completer; then
+if _command_exists aws_completer
+then
 	complete -C "$(command -v aws_completer)" aws
 fi
diff --git a/completion/available/bash-it.completion.bash b/completion/available/bash-it.completion.bash
index 2259e37b..4fdd72d6 100644
--- a/completion/available/bash-it.completion.bash
+++ b/completion/available/bash-it.completion.bash
@@ -1,95 +1,140 @@
-# shellcheck shell=bash
+#!/usr/bin/env bash
 
-function _compreply_candidates() {
-	local IFS=$'\n'
+_bash-it-comp-enable-disable()
+{
+  local enable_disable_args="alias completion plugin"
+  COMPREPLY=( $(compgen -W "${enable_disable_args}" -- ${cur}) )
+}
+
+_bash-it-comp-list-available-not-enabled()
+{
+  subdirectory="$1"
+
+  local available_things
+
+  available_things=$(for f in `compgen -G "${BASH_IT}/$subdirectory/available/*.bash" | sort -d`;
+    do
+      file_entity=$(basename $f)
+
+      typeset enabled_component=$(command ls "${BASH_IT}/$subdirectory/enabled/"{[0-9]*$BASH_IT_LOAD_PRIORITY_SEPARATOR$file_entity,$file_entity} 2>/dev/null | head -1)
+      typeset enabled_component_global=$(command ls "${BASH_IT}/enabled/"[0-9]*$BASH_IT_LOAD_PRIORITY_SEPARATOR$file_entity 2>/dev/null | head -1)
+
+      if [ -z "$enabled_component" ] && [ -z "$enabled_component_global" ]
+      then
+        basename $f | sed -e 's/\(.*\)\..*\.bash/\1/g'
+      fi
+    done)
+
+  COMPREPLY=( $(compgen -W "all ${available_things}" -- ${cur}) )
+}
+
+_bash-it-comp-list-enabled()
+{
+  local subdirectory="$1"
+  local suffix enabled_things
 
-	read -d '' -ra COMPREPLY < <(compgen -W "${candidates[*]}" -- "${cur}")
+  suffix=$(echo "$subdirectory" | sed -e 's/plugins/plugin/g')
+
+  enabled_things=$(for f in `sort -d <(compgen -G "${BASH_IT}/$subdirectory/enabled/*.${suffix}.bash") <(compgen -G "${BASH_IT}/enabled/*.${suffix}.bash")`;
+    do
+      basename $f | sed -e 's/\(.*\)\..*\.bash/\1/g' | sed -e "s/^[0-9]*---//g"
+    done)
+
+  COMPREPLY=( $(compgen -W "all ${enabled_things}" -- ${cur}) )
 }
 
-function _bash-it() {
-	local cur prev verb file_type candidates suffix
-	COMPREPLY=()
-	cur="${COMP_WORDS[COMP_CWORD]}"
-	prev="${COMP_WORDS[COMP_CWORD - 1]}"
-	verb="${COMP_WORDS[1]}"
-	file_type="${COMP_WORDS[2]:-}"
-	candidates=('disable' 'enable' 'help' 'migrate' 'reload' 'restart' 'preview' 'profile' 'doctor' 'search' 'show' 'update' 'version')
-	case "${verb}" in
-		show)
-			candidates=('aliases' 'completions' 'plugins')
-			_compreply_candidates
-			;;
-		help)
-			if [[ "${prev}" == "aliases" ]]; then
-				candidates=('all' "$(_bash-it-component-list "${file_type}")")
-				_compreply_candidates
-			else
-				candidates=('aliases' 'completions' 'migrate' 'plugins' 'update')
-				_compreply_candidates
-			fi
-			;;
-		profile)
-			case "${file_type}" in
-				load | rm)
-					if [[ "${file_type}" == "$prev" ]]; then
-						candidates=("${BASH_IT}/profiles"/*.bash_it)
-						candidates=("${candidates[@]##*/}")
-						candidates=("${candidates[@]%%.bash_it}")
-
-						_compreply_candidates
-					fi
-					;;
-				save | list) ;;
-				*)
-					candidates=('load' 'save' 'list' 'rm')
-					_compreply_candidates
-					;;
-			esac
-			;;
-		doctor)
-			candidates=('errors' 'warnings' 'all')
-			_compreply_candidates
-			;;
-		update)
-			if [[ "${cur}" == -* ]]; then
-				candidates=('-s' '--silent')
-			else
-				candidates=('stable' 'dev')
-			fi
-			_compreply_candidates
-			;;
-		migrate | reload | restart | search | version) ;;
-		preview)
-			_bash-it-preview # completes itself
-			return 0
-			;;
-		enable | disable)
-			if [[ "${verb}" == "enable" ]]; then
-				suffix="disabled"
-			else
-				suffix="enabled"
-			fi
-			case "${file_type}" in
-				alias | completion | plugin)
-					candidates=('all' "$("_bash-it-component-list-${suffix}" "${file_type}")")
-					_compreply_candidates
-					;;
-				*)
-					candidates=('alias' 'completion' 'plugin')
-					_compreply_candidates
-					;;
-			esac
-			;;
-		*)
-			_compreply_candidates
-			;;
-	esac
+_bash-it-comp-list-available()
+{
+  subdirectory="$1"
+
+  local enabled_things
+
+  enabled_things=$(for f in `compgen -G "${BASH_IT}/$subdirectory/available/*.bash" | sort -d`;
+    do
+      basename $f | sed -e 's/\(.*\)\..*\.bash/\1/g'
+    done)
+
+  COMPREPLY=( $(compgen -W "${enabled_things}" -- ${cur}) )
+}
+
+_bash-it-comp()
+{
+  local cur prev opts
+  COMPREPLY=()
+  cur="${COMP_WORDS[COMP_CWORD]}"
+  prev="${COMP_WORDS[COMP_CWORD-1]}"
+  chose_opt="${COMP_WORDS[1]}"
+  file_type="${COMP_WORDS[2]}"
+  opts="disable enable help migrate reload restart doctor search show update version"
+  case "${chose_opt}" in
+    show)
+      local show_args="aliases completions plugins"
+      COMPREPLY=( $(compgen -W "${show_args}" -- ${cur}) )
+      return 0
+      ;;
+    help)
+      if [ x"${prev}" == x"aliases" ]; then
+        _bash-it-comp-list-available aliases
+        return 0
+      else
+        local help_args="aliases completions migrate plugins update"
+        COMPREPLY=( $(compgen -W "${help_args}" -- ${cur}) )
+        return 0
+      fi
+      ;;
+    doctor)
+      local doctor_args="errors warnings all"
+      COMPREPLY=( $(compgen -W "${doctor_args}" -- ${cur}) )
+      return 0
+      ;;
+    update)
+      if [[ ${cur} == -* ]];then
+        local update_args="-s --silent"
+      else
+        local update_args="stable dev"
+      fi
+      COMPREPLY=( $(compgen -W "${update_args}" -- ${cur}) )
+      return 0
+      ;;
+    migrate | reload | search | version)
+      return 0
+      ;;
+    enable | disable)
+      if [ x"${chose_opt}" == x"enable" ];then
+        suffix="available-not-enabled"
+      else
+        suffix="enabled"
+      fi
+      case "${file_type}" in
+        alias)
+            _bash-it-comp-list-${suffix} aliases
+            return 0
+            ;;
+        plugin)
+            _bash-it-comp-list-${suffix} plugins
+            return 0
+            ;;
+        completion)
+            _bash-it-comp-list-${suffix} completion
+            return 0
+            ;;
+        *)
+            _bash-it-comp-enable-disable
+            return 0
+            ;;
+      esac
+      ;;
+  esac
+
+  COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
+
+  return 0
 }
 
 # Activate completion for bash-it and its common misspellings
-complete -F _bash-it bash-it
-complete -F _bash-it bash-ti
-complete -F _bash-it shit
-complete -F _bash-it bashit
-complete -F _bash-it batshit
-complete -F _bash-it bash_it
+complete -F _bash-it-comp bash-it
+complete -F _bash-it-comp bash-ti
+complete -F _bash-it-comp shit
+complete -F _bash-it-comp bashit
+complete -F _bash-it-comp batshit
+complete -F _bash-it-comp bash_it
diff --git a/completion/available/brew.completion.bash b/completion/available/brew.completion.bash
index 61998f8a..5a6c8c22 100644
--- a/completion/available/brew.completion.bash
+++ b/completion/available/brew.completion.bash
@@ -4,27 +4,4 @@ about-completion "brew completion"
 
 # Load late to make sure `system` completion loads first
 # BASH_IT_LOAD_PRIORITY: 375
-
-if [[ "$OSTYPE" != 'darwin'* ]]; then
-	_log_warning "unsupported operating system - only 'Darwin' is supported"
-	return 0
-fi
-
-# Make sure brew is installed
-_bash_it_homebrew_check || return 0
-
-if [[ -r "$BASH_IT_HOMEBREW_PREFIX/etc/bash_completion.d/brew" ]]; then
-	# shellcheck disable=1090
-	source "$BASH_IT_HOMEBREW_PREFIX/etc/bash_completion.d/brew"
-
-elif [[ -r "$BASH_IT_HOMEBREW_PREFIX/Library/Contributions/brew_bash_completion.sh" ]]; then
-	# shellcheck disable=1090
-	source "$BASH_IT_HOMEBREW_PREFIX/Library/Contributions/brew_bash_completion.sh"
-
-elif [[ -f "$BASH_IT_HOMEBREW_PREFIX/completions/bash/brew" ]]; then
-	# For the git-clone based installation, see here for more info:
-	# https://github.com/Bash-it/bash-it/issues/1458
-	# https://docs.brew.sh/Shell-Completion
-	# shellcheck disable=1090
-	source "$BASH_IT_HOMEBREW_PREFIX/completions/bash/brew"
-fi
+source "$HOME/.linuxbrew/Cellar/bash-completion/1.3_3/etc/bash_completion"
diff --git a/completion/available/cht.completion.bash b/completion/available/cht.completion.bash
new file mode 100644
index 00000000..c8c8a534
--- /dev/null
+++ b/completion/available/cht.completion.bash
@@ -0,0 +1,49 @@
+#!/usr/bin/env bash
+#                      __ __       ___
+#                     /\ \\ \    /'___`\
+#                     \ \ \\ \  /\_\ /\ \
+#                      \ \ \\ \_\/_/// /__
+#                       \ \__ ,__\ // /_\ \
+#                        \/_/\_\_//\______/
+#                           \/_/  \/_____/
+#                                         Algoritimos
+#
+#
+#      Author: Ivan Lopes
+#        Mail: ivan (at) 42algoritmos (dot) com (dot) br
+#        Site: htredis_get://www.42algoritmos.com.br
+#     License: gpl
+#       Phone: +1 561 801 7985
+#    Language: Shell Script
+#        File: redis.get.bash
+#        Date: Ter 28 Fev 2017 00:35:55 BRT
+# Description:
+#
+# ----------------------------------------------------------------------------
+#
+# ----------------------------------------------------------------------------
+
+##############################################################################
+##############################################################################
+##############################################################################
+
+# ----------------------------------------------------------------------------
+# Run!
+
+_cht_complete()
+{
+    local cur prev opts
+    _get_comp_words_by_ref -n : cur
+
+    COMPREPLY=()
+    cur="${COMP_WORDS[COMP_CWORD]}"
+    prev="${COMP_WORDS[COMP_CWORD-1]}"
+    opts="$(cht.sh :list)"
+
+    if [ ${COMP_CWORD} = 1 ]; then
+          COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
+          __ltrim_colon_completions "$cur"
+    fi
+    return 0
+}
+complete -F _cht_complete cht.sh
diff --git a/completion/available/defaults.completion.bash b/completion/available/defaults.completion.bash
index 39d7ea95..c43c0aae 100644
--- a/completion/available/defaults.completion.bash
+++ b/completion/available/defaults.completion.bash
@@ -1,5 +1,175 @@
-# shellcheck shell=bash
+# defaults
+# Bash command line completion for defaults
+#
+# Created by Jonathon Mah on 2006-11-08.
+# Copyright 2006 Playhaus. All rights reserved.
+#
+# Version 1.0 (2006-11-08)
 
-if test -s "${BASH_IT?}/vendor/github.com/gaelicWizard/bash-progcomp/defaults.completion.bash"; then
-	source "$_"
-fi
+
+_defaults_domains()
+{
+    local cur
+    COMPREPLY=()
+    cur=${COMP_WORDS[COMP_CWORD]}
+
+	local domains=$( defaults domains | sed -e 's/, /:/g' | tr : '\n' | sed -e 's/ /\\ /g' | grep "^$cur" )
+	local IFS=$'\n'
+	COMPREPLY=( $domains )
+	if [[ $( echo '-app' | grep "^$cur" ) ]]; then
+		COMPREPLY[${#COMPREPLY[@]}]="-app"
+	fi
+
+    return 0
+}
+
+
+_defaults()
+{
+	local cur prev host_opts cmds cmd domain keys key_index
+    cur=${COMP_WORDS[COMP_CWORD]}
+    prev=${COMP_WORDS[COMP_CWORD-1]}
+
+	host_opts='-currentHost -host'
+	cmds='read read-type write rename delete domains find help'
+
+	if [[ $COMP_CWORD -eq 1 ]]; then
+		COMPREPLY=( $( compgen -W "$host_opts $cmds" -- $cur ) )
+		return 0
+	elif [[ $COMP_CWORD -eq 2 ]]; then
+		if [[ "$prev" == "-currentHost" ]]; then
+			COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
+			return 0
+		elif [[ "$prev" == "-host" ]]; then
+			_known_hosts -a
+			return 0
+		else
+			_defaults_domains
+			return 0
+		fi
+	elif [[ $COMP_CWORD -eq 3 ]]; then
+		if [[ ${COMP_WORDS[1]} == "-host" ]]; then
+			_defaults_domains
+			return 0
+		fi
+    fi
+
+	# Both a domain and command have been specified
+
+	if [[ ${COMP_WORDS[1]} == [${cmds// /|}] ]]; then
+		cmd=${COMP_WORDS[1]}
+		domain=${COMP_WORDS[2]}
+		key_index=3
+		if [[ "$domain" == "-app" ]]; then
+			if [[ $COMP_CWORD -eq 3 ]]; then
+				# Completing application name. Can't help here, sorry
+				return 0
+			fi
+			domain="-app ${COMP_WORDS[3]}"
+			key_index=4
+		fi
+	elif [[ ${COMP_WORDS[2]} == "-currentHost" ]] && [[ ${COMP_WORDS[2]} == [${cmds// /|}] ]]; then
+		cmd=${COMP_WORDS[2]}
+		domain=${COMP_WORDS[3]}
+		key_index=4
+		if [[ "$domain" == "-app" ]]; then
+			if [[ $COMP_CWORD -eq 4 ]]; then
+				# Completing application name. Can't help here, sorry
+				return 0
+			fi
+			domain="-app ${COMP_WORDS[4]}"
+			key_index=5
+		fi
+	elif [[ ${COMP_WORDS[3]} == "-host" ]] && [[ ${COMP_WORDS[3]} == [${cmds// /|}] ]]; then
+		cmd=${COMP_WORDS[3]}
+		domain=${COMP_WORDS[4]}
+		key_index=5
+		if [[ "$domain" == "-app" ]]; then
+			if [[ $COMP_CWORD -eq 5 ]]; then
+				# Completing application name. Can't help here, sorry
+				return 0
+			fi
+			domain="-app ${COMP_WORDS[5]}"
+			key_index=6
+		fi
+	fi
+
+	keys=$( defaults read $domain 2>/dev/null | sed -n -e '/^    [^}) ]/p' | sed -e 's/^    \([^" ]\{1,\}\) = .*$/\1/g' -e 's/^    "\([^"]\{1,\}\)" = .*$/\1/g' | sed -e 's/ /\\ /g' )
+
+	case $cmd in
+	read|read-type)
+		# Complete key
+		local IFS=$'\n'
+		COMPREPLY=( $( echo "$keys" | grep -i "^${cur//\\/\\\\}" ) )
+		;;
+	write)
+		if [[ $key_index -eq $COMP_CWORD ]]; then
+			# Complete key
+			local IFS=$'\n'
+			COMPREPLY=( $( echo "$keys" | grep -i "^${cur//\\/\\\\}" ) )
+		elif [[ $((key_index+1)) -eq $COMP_CWORD ]]; then
+			# Complete value type
+			# Unfortunately ${COMP_WORDS[key_index]} fails on keys with spaces
+			local value_types='-string -data -integer -float -boolean -date -array -array-add -dict -dict-add'
+			local cur_type=$( defaults read-type $domain ${COMP_WORDS[key_index]} 2>/dev/null | sed -e 's/^Type is \(.*\)/-\1/' -e's/dictionary/dict/' | grep "^$cur" )
+			if [[ $cur_type ]]; then
+				COMPREPLY=( $cur_type )
+			else
+				COMPREPLY=( $( compgen -W "$value_types" -- $cur ) )
+			fi
+		elif [[ $((key_index+2)) -eq $COMP_CWORD ]]; then
+			# Complete value
+			# Unfortunately ${COMP_WORDS[key_index]} fails on keys with spaces
+			COMPREPLY=( $( defaults read $domain ${COMP_WORDS[key_index]} 2>/dev/null | grep -i "^${cur//\\/\\\\}" ) )
+		fi
+		;;
+	rename)
+		if [[ $key_index -eq $COMP_CWORD ]] ||
+		   [[ $((key_index+1)) -eq $COMP_CWORD ]]; then
+			# Complete source and destination keys
+			local IFS=$'\n'
+			COMPREPLY=( $( echo "$keys" | grep -i "^${cur//\\/\\\\}" ) )
+		fi
+		;;
+	delete)
+		if [[ $key_index -eq $COMP_CWORD ]]; then
+			# Complete key
+			local IFS=$'\n'
+			COMPREPLY=( $( echo "$keys" | grep -i "^${cur//\\/\\\\}" ) )
+		fi
+		;;
+	esac
+
+    return 0
+}
+
+complete -F _defaults -o default defaults
+
+
+# This file is licensed under the BSD license, as follows:
+#
+# Copyright (c) 2006, Playhaus
+# All rights reserved.
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+# * Redistributions of source code must retain the above copyright notice, this
+#   list of conditions and the following disclaimer.
+# * Redistributions in binary form must reproduce the above copyright notice,
+#   this list of conditions and the following disclaimer in the documentation
+#   and/or other materials provided with the distribution.
+# * Neither the name of the Playhaus nor the names of its contributors may be
+#   used to endorse or promote products derived from this software without
+#   specific prior written permission.
+#
+# This software is provided by the copyright holders and contributors "as is"
+# and any express or implied warranties, including, but not limited to, the
+# implied warranties of merchantability and fitness for a particular purpose are
+# disclaimed. In no event shall the copyright owner or contributors be liable
+# for any direct, indirect, incidental, special, exemplary, or consequential
+# damages (including, but not limited to, procurement of substitute goods or
+# services; loss of use, data, or profits; or business interruption) however
+# caused and on any theory of liability, whether in contract, strict liability,
+# or tort (including negligence or otherwise) arising in any way out of the use
+# of this software, even if advised of the possibility of such damage.
diff --git a/completion/available/flutter.completion.bash b/completion/available/flutter.completion.bash
index 7dde5a07..62befc82 100644
--- a/completion/available/flutter.completion.bash
+++ b/completion/available/flutter.completion.bash
@@ -1,5 +1,5 @@
-# shellcheck shell=bash
+#!/usr/bin/bash
 
 if _command_exists flutter; then
-	eval "$(flutter bash-completion)"
+  eval "$(flutter bash-completion)"
 fi
diff --git a/completion/available/iprj.completion.bash b/completion/available/iprj.completion.bash
new file mode 100644
index 00000000..17337ec3
--- /dev/null
+++ b/completion/available/iprj.completion.bash
@@ -0,0 +1,9 @@
+# shellcheck shell=bash
+cite "about-completion"
+about-completion "iprj(cli tool) manager project"
+
+# ----------------------------------------------------------------------------
+# Run!
+
+IPRJ=$(command -v iprj)
+[[ $IPRJ ]] && eval "$( iprj init )"
diff --git a/completion/available/knife.completion.bash b/completion/available/knife.completion.bash
index c0fb6a99..4b9950ed 100644
--- a/completion/available/knife.completion.bash
+++ b/completion/available/knife.completion.bash
@@ -55,12 +55,12 @@ _KAC_regen_cache() {
 
 # cached files can't have spaces in their names
 _KAC_get_cache_name_from_command() {
-	echo "${@// /_SPACE_}"
+	echo "${@/ /_SPACE_}"
 }
 
 # the reverse operation from the function above
 _KAC_get_command_from_cache_name() {
-	echo "${@//_SPACE_/ }"
+	echo "${@/_SPACE_/ }"
 }
 
 # given a command as argument, it fetches the cache for that command if it can find it
diff --git a/completion/available/pipenv.completion.bash b/completion/available/pipenv.completion.bash
index 4adfab95..52451b8a 100644
--- a/completion/available/pipenv.completion.bash
+++ b/completion/available/pipenv.completion.bash
@@ -1,4 +1,4 @@
 # shellcheck shell=bash
 if _command_exists pipenv; then
-	eval "$(_PIPENV_COMPLETE=bash_source pipenv)"
+	eval "$(pipenv --completion)"
 fi
diff --git a/completion/available/svn.completion.bash b/completion/available/svn.completion.bash
index 2f0a23fe..eabc15c9 100644
--- a/completion/available/svn.completion.bash
+++ b/completion/available/svn.completion.bash
@@ -1,40 +1,1514 @@
-# shellcheck shell=bash
+# ------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
 #
-# Locate and load completions for `svn`.
+#   http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ------------------------------------------------------------
+
+# Programmable completion for the Subversion svn command under bash. Source
+# this file (or on some systems add it to ~/.bash_completion and start a new
+# shell) and bash's completion mechanism will know all about svn's options!
+# Provides completion for the svnadmin, svndumpfilter, svnlook and svnsync
+# commands as well.  Who wants to read man pages/help text...
+
+# Known to work with bash 3.* with programmable completion and extended
+# pattern matching enabled (use 'shopt -s extglob progcomp' to enable
+# these if they are not already enabled).
+
+shopt -s extglob
+
+# Tree helper functions which only use bash, to ease readability.
+
+# look for value associated to key from stdin in K/V hash file format
+# val=$(_svn_read_hashfile svn:realmstring < some/file)
+function _svn_read_hashfile()
+{
+  local tkey=$1 key= val=
+  while true; do
+    read tag len
+    [ $tag = 'END' ] && break
+    [ $tag != 'K' ] && {
+      #echo "unexpected tag '$tag' instead of 'K'" >&2
+      return
+    }
+    read -r -n $len key ; read
+    read tag len
+    [ $tag != 'V' ] && {
+      #echo "unexpected tag '$tag' instead of 'V'" >&2
+      return
+    }
+    read -r -n $len val ; read
+    if [[ $key = $tkey ]] ; then
+      echo "$val"
+      return
+    fi
+  done
+  #echo "target key '$tkey' not found" >&2
+}
+
+# _svn_grcut shell-regular-expression
+# extract filenames from 'svn status' output
+function _svn_grcut()
+{
+    local re=$1 line= old_IFS
+    # fix IFS, so that leading spaces are not ignored by next read.
+    # (there is a leading space in svn status output if only a prop is changed)
+    old_IFS="$IFS"
+    IFS=$'\n'
+    while read -r line ; do
+	[[ ! $re || $line == $re ]] && echo "${line/????????/}"
+    done
+    IFS="$old_IFS"
+}
+
+# extract stuff from svn info output
+# _svn_info (URL|Repository Root)
+function _svn_info()
+{
+  local what=$1 line=
+  LANG=C LC_MESSAGES=C svn info --non-interactive 2> /dev/null | \
+  while read line ; do
+    [[ $line == *"$what: "* ]] && echo ${line#*: }
+  done
+}
+
+# _svn_lls (dir|file|all) files...
+# list svn-managed files from list
+# some 'svn status --all-files' would be welcome here?
+function _svn_lls()
+{
+    local opt=$1 f=
+    shift
+    for f in "$@" ; do
+	# could try to check in .svn/entries? hmmm...
+	if [[ $opt == @(dir|all) && -d "$f" ]] ; then
+	    echo "$f/"
+	elif [[ $opt == @(file|all) ]] ; then
+	    # split f in directory/file names
+	    local dn= fn="$f"
+	    [[ "$f" == */* ]] && dn=${f%\/*}/ fn=${f##*\/}
+	    # ??? this does not work for just added files, because they
+	    # do not have a content reference yet...
+	    [ -f "${dn}.svn/text-base/${fn}.svn-base" ] && echo "$f"
+	fi
+    done
+}
+
+# This completion guides the command/option order along the one suggested
+# by "svn help", although other syntaxes are allowed.
+#
+# - there is a "real" parser to check for what is available and deduce what
+#   can be suggested further.
+# - the syntax should be coherent with subversion/svn/{cl.h,main.c}
+# - although it is not a good practice, mixed options and arguments
+#   is supported by the completion as it is by the svn command.
+# - the completion works in the middle of a line,
+#   but not really in the middle of an argument or option.
+# - property names are completed: see comments about issues related to handling
+#   ":" within property names although it is a word completion separator.
+# - unknown properties are assumed to be simple file properties.
+# - --revprop and --revision options are forced to revision properties
+#   as they are mandatory in this case.
+# - argument values are suggested to some other options, eg directory names
+#   for --config-dir.
+# - values for some options can be extended with environment variables:
+#   SVN_BASH_FILE_PROPS: other properties on files/directories
+#   SVN_BASH_REV_PROPS: other properties on revisions
+#   SVN_BASH_ENCODINGS: encodings to be suggested
+#   SVN_BASH_MIME_TYPE: mime types to be suggested
+#   SVN_BASH_KEYWORDS: "svn:keywords" substitutions to be suggested
+#   SVN_BASH_USERNAME: usernames suggested for --username
+#   SVN_BASH_COMPL_EXT: completion extensions for file arguments, based on the
+#      current subcommand, so that for instance only modified files are
+#      suggested for 'revert', only not svn-managed files for 'add', and so on.
+#      Possible values are:
+#      - username: guess usernames from ~/.subversion/auth/...
+#      - urls: guess urls from ~/.subversion/auth/... or others
+#      - svnstatus: use 'svn status' for completion
+#      - recurse: allow recursion (expensive)
+#      - externals: recurse into externals (very expensive)
+#     Former options are reasonable, but beware that both later options
+#     may be unadvisable if used on large working copies.
+#     None of these costly completions are activated by default.
+#     Argument completion outside a working copy results in an error message.
+#     Filenames with spaces are not completed properly.
+#
+# TODO
+# - other options?
+# - obsolete options could be removed from auto-comp? (e.g. -N)
+# - obsolete commands could be removed? (e.g. resolved)
+# - completion does not work properly when editing in the middle of the line
+#   status/previous are those at the end of the line, not at the entry position
+# - url completion should select more cases where it is relevant
+# - url completion of http:// schemas could suggest sub directories?
+# - add completion for experimental 'obliterate' feature?
+_svn()
+{
+	local cur cmds cmdOpts pOpts mOpts rOpts qOpts nOpts optsParam opt
+
+	COMPREPLY=()
+	cur=${COMP_WORDS[COMP_CWORD]}
+
+	# Possible expansions, without pure-prefix abbreviations such as "up".
+	cmds='add blame annotate praise cat changelist cl checkout co cleanup'
+	cmds="$cmds commit ci copy cp delete remove rm diff export help import"
+	cmds="$cmds info list ls lock log merge mergeinfo mkdir move mv rename"
+	cmds="$cmds patch propdel pdel propedit pedit propget pget proplist"
+	cmds="$cmds plist propset pset relocate resolve resolved revert status"
+	cmds="$cmds  switch unlock update upgrade"
+
+	# help options have a strange command status...
+	local helpOpts='--help -h'
+	# all special options that have a command status
+	local specOpts="--version $helpOpts"
+
+	# options that require a parameter
+	# note: continued lines must end '|' continuing lines must start '|'
+	optsParam="-r|--revision|--username|--password|--targets"
+	optsParam="$optsParam|-x|--extensions|-m|--message|-F|--file"
+	optsParam="$optsParam|--encoding|--diff-cmd|--diff3-cmd|--editor-cmd"
+	optsParam="$optsParam|--old|--new|--config-dir|--config-option"
+	optsParam="$optsParam|--native-eol|-l|--limit|-c|--change"
+	optsParam="$optsParam|--depth|--set-depth|--with-revprop"
+	optsParam="$optsParam|--cl|--changelist|--accept|--show-revs"
+
+	# svn:* and other (env SVN_BASH_*_PROPS) properties
+	local svnProps revProps allProps psCmds propCmds
+
+	# svn and user configured "file" (or directory) properties
+	# the "svn:mergeinfo" prop is not included by default because it is
+	# managed automatically, so there should be no need to edit it by hand.
+	svnProps="svn:keywords svn:executable svn:needs-lock svn:externals
+	          svn:ignore svn:eol-style svn:mime-type $SVN_BASH_FILE_PROPS"
+
+	# svn and user configured revision properties
+	revProps="svn:author svn:log svn:date $SVN_BASH_REV_PROPS"
+
+	# all properties as an array variable
+	allProps=( $svnProps $revProps )
+
+	# subcommands that expect property names
+	psCmds='propset|pset|ps'
+	propCmds="$psCmds|propget|pget|pg|propedit|pedit|pe|propdel|pdel|pd"
+
+	# possible URL schemas to access a subversion server
+	local urlSchemas='file:/// http:// https:// svn:// svn+ssh://'
+
+	# Parse arguments and set various variables about what was found.
+	#
+	# cmd: the current command if available
+	#    isPropCmd: whether it expects a property name argument
+	#    isPsCmd: whether it also expects a property value argument
+	#    isHelpCmd: whether it is about help
+	#    nExpectArgs: how many arguments are expected by the command
+	# help: help requested about this command (if cmd=='help')
+	# prop: property name (if appropriate)
+	#    isRevProp: is it a special revision property
+	# val: property value (if appropriate, under pset)
+	# options: all options encountered
+	#    hasRevPropOpt: is --revprop set
+	#    hasRevisionOpt: is --revision set
+	#    hasRelocateOpt: is --relocate set
+	#    hasReintegrateOpt: is --reintegrate set
+	#    acceptOpt: the value of --accept
+	# nargs: how many arguments were found
+	# stat: status of parsing at the 'current' word
+	#
+	# prev: previous command in the loop
+	# last: status of last parameter analyzed
+	# i: index
+	local cmd= isPropCmd= isPsCmd= isHelpCmd= nExpectArgs= isCur= i=0
+	local prev= help= prop= val= isRevProp= last='none' nargs=0 stat=
+	local options= hasRevPropOpt= hasRevisionOpt= hasRelocateOpt=
+	local acceptOpt= URL= hasReintegrateOpt=
+
+	for opt in "${COMP_WORDS[@]}"
+	do
+	    # get status of current word (from previous iteration)
+	    [[ $isCur ]] && stat=$last
+
+	    # are we processing the current word
+	    isCur=
+	    [[ $i -eq $COMP_CWORD ]] && isCur=1
+	    let i++
+
+	    # FIRST must be the "svn" command
+	    [ $last = 'none' ] && { last='first'; continue ; }
+
+	    # SKIP option arguments
+	    if [[ $prev == @($optsParam) ]] ; then
+
+		# record accept value
+		[[ $prev = '--accept' ]] && acceptOpt=$opt
+
+		prev=''
+		last='skip'
+		continue ;
+	    fi
+
+	    # Argh...  This looks like a bash bug...
+	    # Redirections are passed to the completion function
+	    # although it is managed by the shell directly...
+	    # It matters because we want to tell the user when no more
+	    # completion is available, so it does not necessary
+	    # fallback to the default case.
+	    if [[ $prev == @(<|>|>>|[12]>|[12]>>) ]] ; then
+		prev=''
+		last='skip'
+		continue ;
+	    fi
+	    prev=$opt
+
+	    # get the subCoMmanD
+	    if [[ ! $cmd && $opt \
+               && ( $opt != -* || $opt == @(${specOpts// /|}) ) ]]
+            then
+		cmd=$opt
+		[[ $cmd == @($propCmds) ]] && isPropCmd=1
+		[[ $cmd == @($psCmds) ]] && isPsCmd=1
+		[[ $cmd == @(${helpOpts// /|}) ]] && cmd='help'
+		[[ $cmd = 'help' ]] && isHelpCmd=1
+	        # HELP about a command asked with an option
+		if [[ $isHelpCmd && $cmd && $cmd != 'help' && ! $help ]]
+		then
+		    help=$cmd
+		    cmd='help'
+		fi
+		last='cmd'
+		continue
+	    fi
+
+	    # HELP about a command
+	    if [[ $isHelpCmd && ! $help && $opt && $opt != -* ]]
+	    then
+		help=$opt
+		last='help'
+		continue
+	    fi
+
+	    # PROPerty name
+	    if [[ $isPropCmd && ! $prop && $opt && $opt != -* ]]
+	    then
+		prop=$opt
+		[[ $prop == @(${revProps// /|}) ]] && isRevProp=1
+		last='prop'
+		continue
+	    fi
+
+	    # property VALue
+	    if [[ $isPsCmd && $prop && ! $val && $opt != -* ]] ;
+	    then
+		val=$opt
+		last='val'
+		continue
+	    fi
+
+	    if [[ $last != 'onlyarg' ]]
+	    then
+	      # more OPTions
+	      case $opt in
+		  -r|--revision|--revision=*)
+		      hasRevisionOpt=1
+		      ;;
+		  --revprop)
+		      hasRevPropOpt=1
+		      # restrict to revision properties!
+		      allProps=( $revProps )
+		      # on revprops, only one URL is expected
+		      nExpectArgs=1
+		      ;;
+		  -h|--help)
+		      isHelpCmd=1
+		      ;;
+		  -F|--file)
+		      val='-F'
+		      ;;
+		  --relocate)
+		      hasRelocateOpt=1
+		      ;;
+		  --reintegrate)
+		      hasReintegrateOpt=1
+		      ;;
+	      esac
+
+	      # no more options, only arguments, whatever they look like.
+	      if [[ $opt = '--' && ! $isCur ]] ; then
+		  last='onlyarg'
+		  continue
+	      fi
+
+	      # options are recorded...
+	      if [[ $opt == -* ]] ; then
+		  # but not the current one!
+		  [[ ! $isCur ]] && options="$options $opt "
+		  last='opt'
+		  continue
+	      fi
+	    else
+		# onlyarg
+		let nargs++
+		continue
+	    fi
+
+	    # then we have an argument
+	    if [[ $cmd = 'merge' && ! $URL ]] ; then
+              # fist argument is the source URL for the merge
+	      URL=$opt
+	    fi
+
+	    last='arg'
+	    let nargs++
+	done
+	# end opt option processing...
+	[[ $stat ]] || stat=$last
+
+	# suggest all subcommands, including special help
+	if [[ ! $cmd || $stat = 'cmd' ]]
+	then
+	    COMPREPLY=( $( compgen -W "$cmds $specOpts" -- $cur ) )
+	    return 0
+	fi
+
+	# suggest all subcommands
+	if [[ $stat = 'help' || ( $isHelpCmd && ! $help ) ]]
+	then
+	    COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
+	    return 0
+	fi
+
+	# URL completion
+	if [[ $cmd == @(co|checkout|ls|list) && $stat = 'arg' && \
+			$SVN_BASH_COMPL_EXT == *urls* ]]
+	then
+		# see about COMP_WORDBREAKS workaround in prop completion
+		if [[ $cur == file:* ]]
+		then
+			# file completion for file:// urls
+			local where=${cur/file:/}
+			COMPREPLY=( $(compgen -d -S '/' -X '*/.*' -- $where ) )
+			return
+		elif [[ $cur == *:* ]]
+		then
+			# get known urls
+			local urls= file=
+			for file in ~/.subversion/auth/svn.simple/* ; do
+				if [ -r $file ] ; then
+					local url=$(_svn_read_hashfile svn:realmstring < $file)
+					url=${url/*</}
+					url=${url/>*/}
+					urls="$urls $url"
+				fi
+			done
+
+			# only suggest/show possible suffixes
+			local prefix=${cur%:*} suffix=${cur#*:} c= choices=
+			for c in $urls ; do
+				[[ $c == $prefix:* ]] && choices="$choices ${c#*:}"
+			done
+
+			COMPREPLY=( $(compgen -W "$choices" -- $suffix ) )
+			return
+		else
+			# show schemas
+			COMPREPLY=( $(compgen -W "$urlSchemas" -- $cur) )
+			return
+		fi
+	fi
+
+	if [[ $cmd = 'merge' || $cmd = 'mergeinfo' ]]
+	then
+	  local here=$(_svn_info URL)
+	  # suggest a possible URL for merging
+	  if [[ ! $URL && $stat = 'arg' ]] ; then
+	    # we assume a 'standard' repos with branches and trunk
+	    if [[ "$here" == */branches/* ]] ; then
+	      # we guess that it is a merge from the trunk
+	      COMPREPLY=( $(compgen -W ${here/\/branches\/*/\/trunk} -- $cur ) )
+	      return 0
+	    elif [[ "$here" == */trunk* ]] ; then
+	      # we guess that it is a merge from a branch
+	      COMPREPLY=( $(compgen -W ${here/\/trunk*/\/branches\/} -- $cur ) )
+	      return 0
+	    else
+	      # no se, let us suggest the repository root...
+	      COMPREPLY=( $(compgen -W $(_svn_info Root) -- $cur ) )
+	      return 0
+	    fi
+	  elif [[ $URL == */branches/* && $here == */trunk* && \
+	        ! $hasReintegrateOpt && $cur = '' && $stat = 'arg' ]] ; then
+	    # force --reintegrate only if the current word is empty
+	    COMPREPLY=( $(compgen -W '--reintegrate' -- $cur ) )
+	    return 0
+	  fi
+	fi
+
+	# help about option arguments
+	if [[ $stat = 'skip' ]]
+	then
+	    local previous=${COMP_WORDS[COMP_CWORD-1]}
+	    local values= dirs= beep= exes=
+
+	    [[ $previous = '--config-dir' ]] && dirs=1
+
+	    # external editor, diff, diff3...
+	    [[ $previous = --*-cmd ]] && exes=1
+
+	    [[ $previous = '--native-eol' ]] && values='LF CR CRLF'
+
+	    # just to suggest that a number is expected. hummm.
+	    [[ $previous = '--limit' ]] && values='0 1 2 3 4 5 6 7 8 9'
+
+            # some special partial help about --revision option.
+	    [[ $previous = '--revision' || $previous = '-r' ]] && \
+		values='HEAD BASE PREV COMMITTED 0 {'
+
+	    [[ $previous = '--encoding' ]] && \
+		values="latin1 utf8 $SVN_BASH_ENCODINGS"
+
+	    [[ $previous = '--extensions' || $previous = '-x' ]] && \
+		values="--unified --ignore-space-change \
+		   --ignore-all-space --ignore-eol-style --show-c-functions"
+
+	    [[ $previous = '--depth' ]] && \
+		values='empty files immediates infinity'
+
+	    [[ $previous = '--set-depth' ]] && \
+		values='empty exclude files immediates infinity'
+
+	    [[ $previous = '--accept' ]] && \
+	    {
+	        # the list is different for 'resolve'
+                if [[ $cmd = 'resolve' ]] ; then
+		    # from svn help resolve
+		    values='base working mine-full theirs-full'
+		else # checkout merge switch update
+		    values="postpone base mine-full theirs-full edit launch \
+			mine-conflict theirs-conflict"
+		fi
+	    }
+
+	    [[ $previous = '--show-revs' ]] && values='merged eligible'
+
+	    if [[ $previous = '--username' ]] ; then
+	      values="$SVN_BASH_USERNAME"
+	      if [[ $SVN_BASH_COMPL_EXT == *username* ]] ; then
+		local file=
+		# digest? others?
+		for file in ~/.subversion/auth/svn.simple/* ; do
+		  if [ -r $file ] ; then
+		    values="$values $(_svn_read_hashfile username < $file)"
+		  fi
+		done
+	      fi
+	      [[ ! "$values" ]] && beep=1
+	    fi
+
+	    # could look at ~/.subversion/ ?
+	    # hmmm... this option should not exist
+	    [[ $previous = '--password' ]] && beep=1
+
+	    # TODO: provide help about other options such as:
+	    # --old --new --with-revprop
+
+	    # if the previous option required a parameter, do something
+	    # or fallback on ordinary filename expansion
+	    [[ $values ]] && COMPREPLY=( $( compgen -W "$values" -- $cur ) )
+	    [[ $dirs ]] && COMPREPLY=( $( compgen -o dirnames -- $cur ) )
+	    [[ $exes ]] && COMPREPLY=( $( compgen -c -- $cur ) )
+	    [[ $beep ]] &&
+	    {
+		# 'no known completion'. hummm.
+		echo -en "\a"
+		COMPREPLY=( '' )
+	    }
+	    return 0
+	fi
+
+	# provide allowed property names after property commands
+	if [[ $isPropCmd && ( ! $prop || $stat = 'prop' ) && $cur != -* ]]
+	then
+	    #
+	    # Ok, this part is pretty ugly.
+	    #
+	    # The issue is that ":" is a completion word separator,
+	    # which is a good idea for file:// urls but not within
+	    # property names...
+	    #
+	    # The first idea was to remove locally ":" from COMP_WORDBREAKS
+	    # and then put it back in all cases but in property name
+	    # completion.  It does not always work.  There is a strange bug
+	    # where one may get "svn:svn:xxx" in some unclear cases.
+	    #
+	    # Thus the handling is reprogrammed here...
+	    # The code assumes that property names look like *:*,
+	    # but it also works reasonably well with simple names.
+	    #
+	    # This hack is broken in bash4... not sure what to do about it,
+            # especially while keeping the bash3 compatibility:-(
+	    local choices=
+
+	    if [[ $cur == *:* ]]
+	    then
+		# only suggest/show possible suffixes
+		local prefix=${cur%:*} suffix=${cur#*:} c=
+		for c in ${allProps[@]} ; do
+		    [[ $c == $prefix:* ]] && choices="$choices ${c#*:}"
+		done
+		# everything will be appended to the prefix because ':' is
+		# a separator, so cur is restricted to the suffix part.
+		cur=$suffix
+	    else
+		# only one choice is fine
+		COMPREPLY=( $( compgen -W "${allProps[*]}" -- $cur ) )
+		[ ${#COMPREPLY[@]} -eq 1 ] && return 0
+
+		# no ':' so only suggest prefixes?
+		local seen= n=0 last= c=
+		for c in ${allProps[@]%:*} ; do
+		    # do not put the same prefix twice...
+		    if [[ $c == $cur* && ( ! $seen || $c != @($seen) ) ]]
+		    then
+			let n++
+			last=$c
+			choices="$choices $c:"
+			if [[ $seen ]]
+			then
+			    seen="$seen|$c*"
+			else
+			    seen="$c*"
+			fi
+		    fi
+		done
+
+		# supply two choices to force a partial completion and a beep
+		[[ $n -eq 1 ]] && choices="$last:1 $last:2"
+	    fi
+
+	    COMPREPLY=( $( compgen -W "$choices" -- $cur ) )
+	    return 0
+	fi
+
+	# force mandatory --revprop option on revision properties
+	if [[ $isRevProp && ! $hasRevPropOpt ]]
+	then
+	    COMPREPLY=( $( compgen -W '--revprop' -- $cur ) )
+	    return 0
+	fi
+
+	# force mandatory --revision option on revision properties
+	if [[ $isRevProp && $hasRevPropOpt && ! $hasRevisionOpt ]]
+	then
+	    COMPREPLY=( $( compgen -W '--revision' -- $cur ) )
+	    return 0
+	fi
+
+	# possible completion when setting property values
+	if [[ $isPsCmd && $prop && ( ! $val || $stat = 'val' ) ]]
+	then
+	    # ' is a reminder for an arbitrary value
+	    local values="\' --file"
+	    case $prop in
+		svn:keywords)
+		    # just a subset?
+		    values="Id Rev URL Date Author Header \' $SVN_BASH_KEYWORDS"
+		    ;;
+		svn:executable|svn:needs-lock)
+		    # hmmm... canonical value * is special to the shell.
+		    values='\\*'
+		    ;;
+		svn:eol-style)
+		    values='native LF CR CRLF'
+		    ;;
+		svn:mime-type)
+		    # could read /etc/mime.types if available. overkill.
+		    values="text/ text/plain text/html text/xml text/rtf
+                       image/ image/png image/gif image/jpeg image/tiff
+                       audio/ audio/midi audio/mpeg
+                       video/ video/mpeg video/mp4
+                       application/ application/octet-stream
+                       $SVN_BASH_MIME_TYPE"
+		    ;;
+	    esac
+
+	    COMPREPLY=( $( compgen -W "$values" -- $cur ) )
+	    # special case for --file... return even if within an option
+	    [[ ${COMPREPLY} ]] && return 0
+	fi
+
+	# maximum number of additional arguments expected in various forms
+	case $cmd in
+	    merge)
+		nExpectArgs=3
+		;;
+	    mergeinfo)
+		nExpectArgs=1
+		;;
+	    copy|cp|move|mv|rename|ren|export|import)
+		nExpectArgs=2
+		;;
+	    switch|sw)
+		[[ ! $hasRelocateOpt ]] && nExpectArgs=2
+		;;
+	    help|h)
+		nExpectArgs=0
+		;;
+	    --version)
+		nExpectArgs=0
+		;;
+	esac
+
+	# the maximum number of arguments is reached for a command
+	if [[ $nExpectArgs && $nargs -gt $nExpectArgs ]]
+	then
+	    # some way to tell 'no completion at all'... is there a better one?
+	    # Do not say 'file completion' here.
+	    echo -en "\a"
+	    COMPREPLY=( '' )
+	    return 0
+	fi
+
+	# if not typing an option,
+	# then fallback on filename expansion...
+	if [[ $cur != -* || $stat = 'onlyarg' ]]  ; then
+
+	    # do we allow possible expensive completion here?
+	    if [[ $SVN_BASH_COMPL_EXT == *svnstatus* ]] ; then
+
+		# build status command and options
+		# "--quiet" removes 'unknown' files
+		local status='svn status --non-interactive'
+
+		[[ $SVN_BASH_COMPL_EXT == *recurse* ]] || \
+		    status="$status --non-recursive"
+
+		# I'm not sure that it can work with externals in call cases
+		# the output contains translatable sentences (even with quiet)
+		[[ $SVN_BASH_COMPL_EXT == *externals* ]] || \
+		    status="$status --ignore-externals"
+
+		local cs= files=
+		# subtlety: must not set $cur* if $cur is empty in some cases
+		[[ $cur ]] && cs=$cur*
+
+		# 'files' is set according to the current subcommand
+		case $cmd in
+		    st*) # status completion must include all files
+			files=$cur*
+			;;
+		    ci|commit|revert|di*) # anything edited
+			files=$($status $cs| _svn_grcut '@([MADR!]*| M*|_M*)')
+			;;
+		    add) # unknown files
+			files=$($status $cs| _svn_grcut '\?*')
+			;;
+		    unlock) # unlock locked files
+			files=$($status $cs| _svn_grcut '@(??L*|?????[KOTB]*)')
+			;;
+		    resolve*) # files in conflict
+			files=$($status $cs| _svn_grcut '@(?C*|C*)')
+			;;
+		    praise|blame|ann*) # any svn file but added
+			files=$( _svn_lls all $cur* )
+			;;
+		    p*) # prop commands
+			if [[ $cmd == @($propCmds) && \
+			      $prop == @(svn:ignore|svn:externals) ]] ; then
+			    # directory specific props
+			    files=$( _svn_lls dir . $cur* )
+			else
+			    # ??? added directories appear twice: foo foo/
+			    files="$( _svn_lls all $cur* )
+                                   $($status $cs | _svn_grcut 'A*' )"
+			fi
+			;;
+		    info) # information on any file
+			files="$( _svn_lls all $cur* )
+                               $($status $cs | _svn_grcut 'A*' )"
+			;;
+		    remove|rm|del*|move|mv|rename) # changing existing files
+			files=$( _svn_lls all $cur* )
+			;;
+		    mkdir) # completion in mkdir can only be for subdirs?
+			files=$( _svn_lls dir $cur* )
+			;;
+		    log|lock|up*|cl*|switch) # misc, all but added files
+			files=$( _svn_lls all $cur* )
+			;;
+		    merge) # may do a better job? URL/WCPATH
+			files=$( _svn_lls all $cur* )
+			;;
+		    ls|list) # better job? what about URLs?
+			files=$( _svn_lls all $cur* )
+			;;
+		    *) # other commands: changelist export import cat mergeinfo
+			local fallback=1
+			;;
+		esac
+
+		# when not recursive, some relevant files may exist
+		# within subdirectories, so they are added here.
+		# should it be restricted to svn-managed subdirs? no??
+		if [[ $SVN_BASH_COMPL_EXT != *recurse* ]] ; then
+		    files="$files $( _svn_lls dir $cur* )"
+		fi
+
+		# set completion depending on computed 'files'
+		if [[ $files ]] ; then
+		    COMPREPLY=( $( compgen -W "$files" -- $cur ) )
+		    # if empty, set to nope?
+		    [[ "${COMPREPLY[*]}" ]] || COMPREPLY=( '' )
+		elif [[ ! $fallback ]] ; then
+		    # this suggests no completion...
+		    echo -en "\a"
+		    COMPREPLY=( '' )
+		fi
+	    fi
+	    # else fallback to ordinary filename completion...
+	    return 0
+	fi
+
+	# otherwise build possible options for the command
+	pOpts="--username --password --no-auth-cache --non-interactive \
+	       --trust-server-cert --force-interactive"
+	mOpts="-m --message -F --file --encoding --force-log --with-revprop"
+	rOpts="-r --revision"
+	qOpts="-q --quiet"
+	nOpts="-N --non-recursive --depth"
+	gOpts="-g --use-merge-history"
+	cOpts="--cl --changelist"
+
+	cmdOpts=
+	case $cmd in
+	--version)
+		cmdOpts="$qOpts"
+		;;
+	add)
+		cmdOpts="--auto-props --no-auto-props --force --targets \
+		         --no-ignore --parents $nOpts $qOpts $pOpts"
+		;;
+	blame|annotate|ann|praise)
+		cmdOpts="$rOpts $pOpts -v --verbose --incremental --xml \
+		         -x --extensions --force $gOpts"
+		;;
+	cat)
+		cmdOpts="$rOpts $pOpts"
+		;;
+	changelist|cl)
+		cmdOpts="--targets $pOpts $qOpts $cOpts \
+                         -R --recursive --depth --remove"
+		;;
+	checkout|co)
+		cmdOpts="$rOpts $qOpts $nOpts $pOpts --ignore-externals \
+                         --force"
+		;;
+	cleanup)
+		cmdOpts="--diff3-cmd $pOpts"
+		;;
+	commit|ci)
+		cmdOpts="$mOpts $qOpts $nOpts --targets --editor-cmd $pOpts \
+		         --no-unlock $cOpts --keep-changelists \
+		         --include-externals"
+		;;
+	copy|cp)
+		cmdOpts="$mOpts $rOpts $qOpts --editor-cmd $pOpts --parents \
+		         --ignore-externals"
+		;;
+	delete|del|remove|rm)
+		cmdOpts="--force $mOpts $qOpts --targets --editor-cmd $pOpts \
+                         --keep-local"
+		;;
+	diff|di)
+		cmdOpts="$rOpts -x --extensions --diff-cmd --no-diff-deleted \
+		         $nOpts $pOpts --force --old --new --notice-ancestry \
+		         -c --change --summarize $cOpts --xml --git \
+		         --internal-diff --show-copies-as-adds \
+		         --ignore-properties --properties-only --no-diff-added \
+		         --patch-compatible"
+		;;
+	export)
+		cmdOpts="$rOpts $qOpts $pOpts $nOpts --force --native-eol \
+                         --ignore-externals --ignore-keywords"
+		;;
+	help|h|\?)
+		cmdOpts=
+		;;
+	import)
+		cmdOpts="--auto-props --no-auto-props $mOpts $qOpts $nOpts \
+		         --no-ignore --editor-cmd $pOpts --force"
+		;;
+	info)
+		cmdOpts="$pOpts $rOpts --targets -R --recursive --depth \
+                         --incremental --xml $cOpts"
+		;;
+	list|ls)
+		cmdOpts="$rOpts -v --verbose -R --recursive $pOpts \
+                         --incremental --xml --depth --include-externals"
+		;;
+	lock)
+		cmdOpts="-m --message -F --file --encoding --force-log \
+                         --targets --force $pOpts"
+		;;
+	log)
+		cmdOpts="$rOpts -v --verbose --targets $pOpts --stop-on-copy \
+		         --incremental --xml $qOpts -l --limit -c --change \
+                         $gOpts --with-all-revprops --with-revprop --depth \
+		         --diff --diff-cmd -x --extensions --internal-diff \
+		         --with-no-revprops --search --search-and"
+		;;
+	merge)
+		cmdOpts="$rOpts $nOpts $qOpts --force --dry-run --diff3-cmd \
+		         $pOpts --ignore-ancestry -c --change -x --extensions \
+                         --record-only --accept --reintegrate \
+		         --allow-mixed-revisions -v --verbose"
+		;;
+	mergeinfo)
+	        cmdOpts="$rOpts $pOpts --depth --show-revs -R --recursive"
+		;;
+	mkdir)
+		cmdOpts="$mOpts $qOpts --editor-cmd $pOpts --parents"
+		;;
+	move|mv|rename|ren)
+		cmdOpts="$mOpts $rOpts $qOpts --force --editor-cmd $pOpts \
+                         --parents --allow-mixed-revisions"
+		;;
+	patch)
+		cmdOpts="$qOpts $pOpts --dry-run --ignore-whitespace \
+			--reverse-diff --strip"
+		;;
+	propdel|pdel|pd)
+		cmdOpts="$qOpts -R --recursive $rOpts $pOpts $cOpts \
+                         --depth"
+		[[ $isRevProp || ! $prop ]] && cmdOpts="$cmdOpts --revprop"
+		;;
+	propedit|pedit|pe)
+		cmdOpts="--editor-cmd $pOpts $mOpts --force"
+		[[ $isRevProp || ! $prop ]] && \
+		    cmdOpts="$cmdOpts --revprop $rOpts"
+		;;
+	propget|pget|pg)
+	        cmdOpts="-v --verbose -R --recursive $rOpts --strict \
+		         $pOpts $cOpts --depth --xml --show-inherited-props"
+		[[ $isRevProp || ! $prop ]] && cmdOpts="$cmdOpts --revprop"
+		;;
+	proplist|plist|pl)
+		cmdOpts="-v --verbose -R --recursive $rOpts --revprop $qOpts \
+		         $pOpts $cOpts --depth --xml --show-inherited-props"
+		;;
+	propset|pset|ps)
+		cmdOpts="$qOpts --targets -R --recursive \
+		         --encoding $pOpts --force $cOpts --depth"
+		[[ $isRevProp || ! $prop ]] && \
+		    cmdOpts="$cmdOpts --revprop $rOpts"
+		[[ $val ]] || cmdOpts="$cmdOpts -F --file"
+		;;
+        relocate)
+		cmdOpts="--ignore-externals $pOpts"
+		;;
+        resolve)
+                cmdOpts="--targets -R --recursive $qOpts $pOpts --accept \
+                         --depth"
+                ;;
+	resolved)
+		cmdOpts="--targets -R --recursive $qOpts $pOpts --depth"
+		;;
+	revert)
+		cmdOpts="--targets -R --recursive $qOpts $cOpts \
+                         --depth $pOpts"
+		;;
+	status|stat|st)
+		cmdOpts="-u --show-updates -v --verbose $nOpts $qOpts $pOpts \
+		         --no-ignore --ignore-externals --incremental --xml \
+                         $cOpts"
+		;;
+	switch|sw)
+		cmdOpts="--relocate $rOpts $nOpts $qOpts $pOpts --diff3-cmd \
+                         --force --accept --ignore-externals --set-depth \
+		         --ignore-ancestry"
+		;;
+	unlock)
+		cmdOpts="--targets --force $pOpts"
+		;;
+	update|up)
+		cmdOpts="$rOpts $nOpts $qOpts $pOpts --diff3-cmd \
+                         --ignore-externals --force --accept $cOpts \
+                         --parents --editor-cmd --set-depth"
+		;;
+	upgrade)
+		cmdOpts="$qOpts $pOpts"
+		;;
+	*)
+		;;
+	esac
+
+	# add options that are nearly always available
+	[[ "$cmd" != "--version" ]] && cmdOpts="$cmdOpts $helpOpts"
+	cmdOpts="$cmdOpts --config-dir --config-option"
+
+        # --accept (edit|launch) incompatible with --non-interactive
+	if [[ $acceptOpt == @(edit|launch) ]] ;
+	then
+	    cmdOpts=${cmdOpts/ --non-interactive / }
+	fi
+
+	# take out options already given
+	for opt in $options
+	do
+		local optBase
+
+		# remove leading dashes and arguments
+		case $opt in
+		--*)    optBase=${opt/=*/} ;;
+		-*)     optBase=${opt:0:2} ;;
+		esac
+
+		cmdOpts=" $cmdOpts "
+		cmdOpts=${cmdOpts/ ${optBase} / }
+
+		# take out alternatives and mutually exclusives
+		case $optBase in
+		-v)              cmdOpts=${cmdOpts/ --verbose / } ;;
+		--verbose)       cmdOpts=${cmdOpts/ -v / } ;;
+		-N)              cmdOpts=${cmdOpts/ --non-recursive / } ;;
+		--non-recursive) cmdOpts=${cmdOpts/ -N / } ;;
+		-R)              cmdOpts=${cmdOpts/ --recursive / } ;;
+		--recursive)     cmdOpts=${cmdOpts/ -R / } ;;
+		-x)              cmdOpts=${cmdOpts/ --extensions / } ;;
+		--extensions)    cmdOpts=${cmdOpts/ -x / } ;;
+		-q)              cmdOpts=${cmdOpts/ --quiet / } ;;
+		--quiet)         cmdOpts=${cmdOpts/ -q / } ;;
+		-h)              cmdOpts=${cmdOpts/ --help / } ;;
+		--help)          cmdOpts=${cmdOpts/ -h / } ;;
+		-l)              cmdOpts=${cmdOpts/ --limit / } ;;
+		--limit)         cmdOpts=${cmdOpts/ -l / } ;;
+		-r)              cmdOpts=${cmdOpts/ --revision / } ;;
+		--revision)      cmdOpts=${cmdOpts/ -r / } ;;
+		-c)              cmdOpts=${cmdOpts/ --change / } ;;
+		--change)        cmdOpts=${cmdOpts/ -c / } ;;
+		--auto-props)    cmdOpts=${cmdOpts/ --no-auto-props / } ;;
+		--no-auto-props) cmdOpts=${cmdOpts/ --auto-props / } ;;
+		-g)              cmdOpts=${cmdOpts/ --use-merge-history / } ;;
+		--use-merge-history)
+                                 cmdOpts=${cmdOpts/ -g / } ;;
+		-m|--message|-F|--file)
+			cmdOpts=${cmdOpts/ --message / }
+			cmdOpts=${cmdOpts/ -m / }
+			cmdOpts=${cmdOpts/ --file / }
+			cmdOpts=${cmdOpts/ -F / }
+			;;
+		esac
+
+		# remove help options within help subcommand
+		if [ $isHelpCmd ] ; then
+		    cmdOpts=${cmdOpts/ -h / }
+		    cmdOpts=${cmdOpts/ --help / }
+		fi
+	done
+
+	# provide help about available options
+	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
+	return 0
+}
+complete -F _svn -o default -X '@(*/.svn|*/.svn/|.svn|.svn/)' svn
+
+_svnadmin ()
+{
+	local cur cmds cmdOpts optsParam opt helpCmds optBase i
+
+	COMPREPLY=()
+	cur=${COMP_WORDS[COMP_CWORD]}
+
+	# Possible expansions, without pure-prefix abbreviations such as "h".
+	cmds='crashtest create deltify dump freeze help hotcopy list-dblogs \
+	      list-unused-dblogs load lock lslocks lstxns pack recover rmlocks \
+	      rmtxns setlog setrevprop setuuid unlock upgrade verify --version'
+
+	if [[ $COMP_CWORD -eq 1 ]] ; then
+		COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
+		return 0
+	fi
+
+	# options that require a parameter
+	# note: continued lines must end '|' continuing lines must start '|'
+	optsParam="-r|--revision|--parent-dir|--fs-type|-M|--memory-cache-size"
+	optsParam="$optsParam|-F|--file"
+
+	# if not typing an option, or if the previous option required a
+	# parameter, then fallback on ordinary filename expansion
+	helpCmds='help|--help|h|\?'
+	if [[ ${COMP_WORDS[1]} != @($helpCmds) ]] && \
+	   [[ "$cur" != -* ]] || \
+	   [[ ${COMP_WORDS[COMP_CWORD-1]} == @($optsParam) ]] ; then
+		return 0
+	fi
+
+	cmdOpts=
+	case ${COMP_WORDS[1]} in
+	create)
+		cmdOpts="--bdb-txn-nosync --bdb-log-keep --config-dir \
+		         --fs-type --pre-1.4-compatible --pre-1.5-compatible \
+		         --pre-1.6-compatible --compatible-version"
+		;;
+	deltify)
+		cmdOpts="-r --revision -q --quiet"
+		;;
+	dump)
+		cmdOpts="-r --revision --incremental -q --quiet --deltas \
+		         -M --memory-cache-size"
+		;;
+	freeze)
+		cmdOpts="-F --file"
+		;;
+	help|h|\?)
+		cmdOpts="$cmds"
+		;;
+	hotcopy)
+		cmdOpts="--clean-logs"
+		;;
+	load)
+		cmdOpts="--ignore-uuid --force-uuid --parent-dir -q --quiet \
+		         --use-pre-commit-hook --use-post-commit-hook \
+		         --bypass-prop-validation -M --memory-cache-size"
+		;;
+	lock|unlock)
+		cmdOpts="--bypass-hooks"
+		;;
+	recover)
+		cmdOpts="--wait"
+		;;
+	rmtxns)
+		cmdOpts="-q --quiet"
+		;;
+	setlog)
+		cmdOpts="-r --revision --bypass-hooks"
+		;;
+	setrevprop)
+		cmdOpts="-r --revision --use-pre-revprop-change-hook \
+		         --use-post-revprop-change-hook"
+		;;
+	verify)
+		cmdOpts="-r --revision -q --quiet"
+		;;
+	*)
+		;;
+	esac
+
+	cmdOpts="$cmdOpts --help -h"
+
+	# take out options already given
+	for (( i=2; i<=$COMP_CWORD-1; ++i )) ; do
+		opt=${COMP_WORDS[$i]}
+
+		case $opt in
+		--*)    optBase=${opt/=*/} ;;
+		-*)     optBase=${opt:0:2} ;;
+		esac
+
+		cmdOpts=" $cmdOpts "
+		cmdOpts=${cmdOpts/ ${optBase} / }
+
+		# take out alternatives
+		case $optBase in
+		-q)              cmdOpts=${cmdOpts/ --quiet / } ;;
+		--quiet)         cmdOpts=${cmdOpts/ -q / } ;;
+		-h)              cmdOpts=${cmdOpts/ --help / } ;;
+		--help)          cmdOpts=${cmdOpts/ -h / } ;;
+		-r)              cmdOpts=${cmdOpts/ --revision / } ;;
+		--revision)      cmdOpts=${cmdOpts/ -r / } ;;
+		-F)              cmdOpts=${cmdOpts/ --file / } ;;
+		--file)          cmdOpts=${cmdOpts/ -F / } ;;
+		-M)              cmdOpts=${cmdOpts/ --memory-cache-size / } ;;
+		--memory-cache-size) cmdOpts=${cmdOpts/ --M / } ;;
+		esac
+
+		# skip next option if this one requires a parameter
+		if [[ $opt == @($optsParam) ]] ; then
+			((++i))
+		fi
+	done
+
+	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
+
+	return 0
+}
+complete -F _svnadmin -o default svnadmin
+
+_svndumpfilter ()
+{
+	local cur cmds cmdOpts optsParam opt helpCmds optBase i
+
+	COMPREPLY=()
+	cur=${COMP_WORDS[COMP_CWORD]}
+
+	# Possible expansions, without pure-prefix abbreviations such as "h".
+	cmds='exclude help include --version'
+
+	if [[ $COMP_CWORD -eq 1 ]] ; then
+		COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
+		return 0
+	fi
+
+	# options that require a parameter
+	# note: continued lines must end '|' continuing lines must start '|'
+	optsParam="--targets"
+
+	# if not typing an option, or if the previous option required a
+	# parameter, then fallback on ordinary filename expansion
+	helpCmds='help|--help|h|\?'
+	if [[ ${COMP_WORDS[1]} != @($helpCmds) ]] && \
+	   [[ "$cur" != -* ]] || \
+	   [[ ${COMP_WORDS[COMP_CWORD-1]} == @($optsParam) ]] ; then
+		return 0
+	fi
+
+	cmdOpts=
+	case ${COMP_WORDS[1]} in
+	exclude|include)
+		cmdOpts="--drop-empty-revs --renumber-revs
+		         --skip-missing-merge-sources --targets
+		         --preserve-revprops --quiet"
+		;;
+	help|h|\?)
+		cmdOpts="$cmds"
+		;;
+	*)
+		;;
+	esac
+
+	cmdOpts="$cmdOpts --help -h"
+
+	# take out options already given
+	for (( i=2; i<=$COMP_CWORD-1; ++i )) ; do
+		opt=${COMP_WORDS[$i]}
+
+		case $opt in
+		--*)    optBase=${opt/=*/} ;;
+		-*)     optBase=${opt:0:2} ;;
+		esac
+
+		cmdOpts=" $cmdOpts "
+		cmdOpts=${cmdOpts/ ${optBase} / }
+
+		# take out alternatives
+		case $optBase in
+		-h)              cmdOpts=${cmdOpts/ --help / } ;;
+		--help)          cmdOpts=${cmdOpts/ -h / } ;;
+		esac
+
+		# skip next option if this one requires a parameter
+		if [[ $opt == @($optsParam) ]] ; then
+			((++i))
+		fi
+	done
+
+	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
+
+	return 0
+}
+complete -F _svndumpfilter -o default svndumpfilter
+
+_svnlook ()
+{
+	local cur cmds cmdOpts optsParam opt helpCmds optBase i
+
+	COMPREPLY=()
+	cur=${COMP_WORDS[COMP_CWORD]}
+
+	# Possible expansions, without pure-prefix abbreviations such as "h".
+	cmds='author cat changed date diff dirs-changed help history info \
+	      lock log propget proplist tree uuid youngest --version'
+
+	if [[ $COMP_CWORD -eq 1 ]] ; then
+		COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
+		return 0
+	fi
+
+	# options that require a parameter
+	# note: continued lines must end '|' continuing lines must start '|'
+	optsParam="-r|--revision|-t|--transaction|-l|--limit|-x|--extensions"
+
+	# if not typing an option, or if the previous option required a
+	# parameter, then fallback on ordinary filename expansion
+	helpCmds='help|--help|h|\?'
+	if [[ ${COMP_WORDS[1]} != @($helpCmds) ]] && \
+	   [[ "$cur" != -* ]] || \
+	   [[ ${COMP_WORDS[COMP_CWORD-1]} == @($optsParam) ]] ; then
+		return 0
+	fi
+
+	cmdOpts=
+	case ${COMP_WORDS[1]} in
+	author)
+		cmdOpts="-r --revision -t --transaction"
+		;;
+	cat)
+		cmdOpts="-r --revision -t --transaction"
+		;;
+	changed)
+		cmdOpts="-r --revision -t --transaction --copy-info"
+		;;
+	date)
+		cmdOpts="-r --revision -t --transaction"
+		;;
+	diff)
+		cmdOpts="-r --revision -t --transaction --diff-copy-from \
+		         --no-diff-added --no-diff-deleted -x --extensions"
+		;;
+	dirs-changed)
+		cmdOpts="-r --revision -t --transaction"
+		;;
+	help|h|\?)
+		cmdOpts="$cmds"
+		;;
+	history)
+		cmdOpts="-r --revision -l --limit --show-ids"
+		;;
+	info)
+		cmdOpts="-r --revision -t --transaction"
+		;;
+	lock)
+		cmdOpts=
+		;;
+	log)
+		cmdOpts="-r --revision -t --transaction"
+		;;
+	propget|pget|pg)
+		cmdOpts="-r --revision -t --transaction --revprop"
+		;;
+	proplist|plist|pl)
+		cmdOpts="-r --revision -t --transaction --revprop -v --verbose --xml"
+		;;
+	tree)
+		cmdOpts="-r --revision -t --transaction --full-paths -N --non-recursive --show-ids"
+		;;
+	uuid)
+		cmdOpts=
+		;;
+	youngest)
+		cmdOpts=
+		;;
+	*)
+		;;
+	esac
+
+	cmdOpts="$cmdOpts --help -h"
+
+	# take out options already given
+	for (( i=2; i<=$COMP_CWORD-1; ++i )) ; do
+		opt=${COMP_WORDS[$i]}
+
+		case $opt in
+		--*)    optBase=${opt/=*/} ;;
+		-*)     optBase=${opt:0:2} ;;
+		esac
+
+		cmdOpts=" $cmdOpts "
+		cmdOpts=${cmdOpts/ ${optBase} / }
+
+		# take out alternatives
+		case $optBase in
+		-N)              cmdOpts=${cmdOpts/ --non-recursive / } ;;
+		--non-recursive) cmdOpts=${cmdOpts/ -N / } ;;
+		-h)              cmdOpts=${cmdOpts/ --help / } ;;
+		--help)          cmdOpts=${cmdOpts/ -h / } ;;
+		-l)              cmdOpts=${cmdOpts/ --limit / } ;;
+		--limit)         cmdOpts=${cmdOpts/ -l / } ;;
+		-r)              cmdOpts=${cmdOpts/ --revision / } ;;
+		--revision)      cmdOpts=${cmdOpts/ -r / } ;;
+		-t)              cmdOpts=${cmdOpts/ --transaction / } ;;
+		--transaction)   cmdOpts=${cmdOpts/ -t / } ;;
+		-v)              cmdOpts=${cmdOpts/ --verbose / } ;;
+		--verbose)       cmdOpts=${cmdOpts/ -v / } ;;
+		-x)              cmdOpts=${cmdOpts/ --extensions / } ;;
+		--extensions)    cmdOpts=${cmdOpts/ -x / } ;;
+		esac
+
+		# skip next option if this one requires a parameter
+		if [[ $opt == @($optsParam) ]] ; then
+			((++i))
+		fi
+	done
+
+	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
+
+	return 0
+}
+complete -F _svnlook -o default svnlook
+
+_svnsync ()
+{
+	local cur cmds cmdOpts optsParam opt helpCmds optBase i
+
+	COMPREPLY=()
+	cur=${COMP_WORDS[COMP_CWORD]}
+
+	# Possible expansions, without pure-prefix abbreviations such as "h".
+	cmds='copy-revprops help info initialize synchronize --version'
+
+	if [[ $COMP_CWORD -eq 1 ]] ; then
+		COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
+		return 0
+	fi
+
+	# options that require a parameter
+	# note: continued lines must end '|' continuing lines must start '|'
+	optsParam="--config-dir|--config-option|--source-username|--source-password"
+	optsParam="$optsParam|--sync-username|--sync-password"
+
+	# if not typing an option, or if the previous option required a
+	# parameter, then fallback on ordinary filename expansion
+	helpCmds='help|--help|h|\?'
+	if [[ ${COMP_WORDS[1]} != @($helpCmds) ]] && \
+	   [[ "$cur" != -* ]] || \
+	   [[ ${COMP_WORDS[COMP_CWORD-1]} == @($optsParam) ]] ; then
+		return 0
+	fi
+
+	cmdOpts=
+	case ${COMP_WORDS[1]} in
+	copy-revprops|initialize|init|synchronize|sync)
+		cmdOpts="--non-interactive --no-auth-cache --trust-server-cert \
+		         --source-username --source-password --sync-username \
+		         --sync-password --config-dir --config-option -q --quiet"
+		;;
+	help|h|\?)
+		cmdOpts="$cmds"
+		;;
+	info)
+		cmdOpts="--non-interactive --no-auth-cache --trust-server-cert \
+		         --source-username --source-password --sync-username \
+		         --sync-password --config-dir --config-option"
+		;;
+	*)
+		;;
+	esac
+
+	cmdOpts="$cmdOpts --help -h"
+
+	# take out options already given
+	for (( i=2; i<=$COMP_CWORD-1; ++i )) ; do
+		opt=${COMP_WORDS[$i]}
+
+		case $opt in
+		--*)    optBase=${opt/=*/} ;;
+		-*)     optBase=${opt:0:2} ;;
+		esac
+
+		cmdOpts=" $cmdOpts "
+		cmdOpts=${cmdOpts/ ${optBase} / }
+
+		# take out alternatives
+		case $optBase in
+		-h)              cmdOpts=${cmdOpts/ --help / } ;;
+		--help)          cmdOpts=${cmdOpts/ -h / } ;;
+		-q)              cmdOpts=${cmdOpts/ --quiet / } ;;
+		--quiet)         cmdOpts=${cmdOpts/ -q / } ;;
+		esac
+
+		# skip next option if this one requires a parameter
+		if [[ $opt == @($optsParam) ]] ; then
+			((++i))
+		fi
+	done
+
+	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
+
+	return 0
+}
+complete -F _svnsync -o default svnsync
+
+# reasonable completion for 'svnversion'
+_svnversion ()
+{
+	local cmdOpts=" -n --no-newline -c --committed -h --help --version "
+	local cur=${COMP_WORDS[COMP_CWORD]}
+
+	COMPREPLY=()
+
+	# parse current options
+	local options= wcpath= trailurl= last='none' stat= opt= i=-1 isCur=
+	for opt in ${COMP_WORDS[@]}
+	do
+		[[ $i -eq $COMP_CWORD ]] && stat=$last
+		let i++
+
+		# are we processing the current word?
+		isCur=
+		[[ $i -eq $COMP_CWORD ]] && isCur=1
+
+		# skip first command, should be 'svnversion'
+		if [ $last = 'none' ] ; then
+			last='first'
+			continue
+		fi
+
+		# get options
+		if [[ $last != 'arg' && $opt == -* ]]
+		then
+			# if '--' is at the current position, it means that we are looking
+			# for '--*' options, and not the end of option processing.
+			if [[ $opt = '--' && ! $isCur ]]
+			then
+				last='arg'
+			else
+				options="$options $opt "
+				last='opt'
+			fi
+			continue
+		fi
+		# get arguments
+		if [[ $opt != -* ]]
+		then
+			last='arg'
+			if [[ ! $wcpath ]]
+			then
+				wcpath=$opt
+			elif [[ ! $trailurl ]]
+			then
+				trailurl=$opt
+			fi
+		fi
+	done
+	[[ $stat ]] || stat=$last
+
+	# argument part
+	if [[ $cur != -* || $stat = 'arg' ]]
+	then
+		[[ $wcpath && $trailurl ]] && COMPREPLY=( '' )
+		return 0
+	fi
+
+	# suggest options, and  take out already given options
+	for opt in $options
+	do
+		# take out options
+		cmdOpts=${cmdOpts/ $opt / }
+
+		# take out alternatives
+		case $opt in
+			-n)              cmdOpts=${cmdOpts/ --no-newline / } ;;
+			--no-newline)    cmdOpts=${cmdOpts/ -n / } ;;
+			-h)              cmdOpts=${cmdOpts/ --help / } ;;
+			--help)          cmdOpts=${cmdOpts/ -h / } ;;
+			-c)              cmdOpts=${cmdOpts/ --committed / } ;;
+			--committed)     cmdOpts=${cmdOpts/ -c / } ;;
+		esac
+	done
 
-# Make sure svn is installed
-_command_exists svn || return
+	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
 
-# Don't handle completion if it's already managed
-if _completion_exists svn; then
-	_log_warning "completion already loaded - this usually means it is safe to stop using this completion"
 	return 0
-fi
-
-_svn_bash_completion_xcrun_svn=
-if _command_exists xcrun; then
-	_svn_bash_completion_xcrun_svn="$(xcrun --find svn)"
-fi
-_svn_bash_completion_paths=(
-	# Standard locations
-	"${SVN_EXE%/*}/../etc/bash_completion.d/subversion"
-	# MacOS non-system locations
-	"${_svn_bash_completion_xcrun_svn%/bin/svn}/etc/bash_completion.d/subversion"
-)
-
-# Load the first completion file found
-_svn_bash_completion_found=false
-for _comp_path in "${_svn_bash_completion_paths[@]}"; do
-	if [[ -r "$_comp_path" ]]; then
-		_svn_bash_completion_found=true
-		# shellcheck disable=SC1090 # don't follow
-		source "$_comp_path"
-		break
-	fi
-done
-
-# Cleanup
-if [[ "${_svn_bash_completion_found}" == false ]]; then
-	_log_warning "no completion files found - please try enabling the 'system' completion instead."
-fi
-unset "${!_svn_bash_completion@}"
+}
+# -X option does not seem to work?
+complete -F _svnversion -o dirnames -X '*.svn*' svnversion
diff --git a/completion/available/system.completion.bash b/completion/available/system.completion.bash
index bb1d14eb..113a93f5 100644
--- a/completion/available/system.completion.bash
+++ b/completion/available/system.completion.bash
@@ -1,52 +1,59 @@
-# shellcheck shell=bash
+#!/usr/bin/env bash
 #
 # Loads the system's Bash completion modules.
 # If Homebrew is installed (OS X), it's Bash completion modules are loaded.
 
-# Load before other completions
-# BASH_IT_LOAD_PRIORITY: 325
-
-# Bash-completion is too large and complex to expect to handle unbound variables throughout the whole codebase.
-if shopt -qo nounset; then
+if shopt -qo nounset
+then # Bash-completion is too large and complex to expect to handle unbound variables throughout the whole codebase.
 	__bash_it_restore_nounset=true
 	shopt -uo nounset
 else
 	__bash_it_restore_nounset=false
 fi
 
-# shellcheck disable=SC1090 disable=SC1091
-if [[ -r "${BASH_COMPLETION:-}" ]]; then
+if [[ -r "${BASH_COMPLETION:-}" ]] ; then
+  # shellcheck disable=SC1091
 	source "${BASH_COMPLETION}"
-elif [[ -r /etc/bash_completion ]]; then
-	source /etc/bash_completion
+
+elif [[ -r /etc/bash_completion ]] ; then
+  # shellcheck disable=SC1091
+  source /etc/bash_completion
+
 # Some distribution makes use of a profile.d script to import completion.
-elif [[ -r /etc/profile.d/bash_completion.sh ]]; then
-	source /etc/profile.d/bash_completion.sh
-elif _bash_it_homebrew_check; then
-	: "${BASH_COMPLETION_COMPAT_DIR:=${BASH_IT_HOMEBREW_PREFIX}/etc/bash_completion.d}"
-	case "${BASH_VERSION}" in
-		1* | 2* | 3.0* | 3.1*)
-			_log_warning "Cannot load completion due to version of shell. Are you using Bash 3.2+?"
-			;;
-		3.2* | 4.0* | 4.1*)
-			# Import version 1.x of bash-completion, if installed.
-			BASH_COMPLETION="${BASH_IT_HOMEBREW_PREFIX}/opt/bash-completion@1/etc/bash_completion"
-			if [[ -r "$BASH_COMPLETION" ]]; then
-				source "$BASH_COMPLETION"
-			else
-				unset BASH_COMPLETION
-			fi
-			;;
-		4.2* | 5* | *)
-			# homebrew/versions/bash-completion2 (required for projects.completion.bash) is installed to this path
-			if [[ -r "${BASH_IT_HOMEBREW_PREFIX}/opt/bash-completion@2/etc/profile.d/bash_completion.sh" ]]; then
-				source "${BASH_IT_HOMEBREW_PREFIX}/opt/bash-completion@2/etc/profile.d/bash_completion.sh"
-			fi
-			;;
-	esac
+elif [[ -r /etc/profile.d/bash_completion.sh ]] ; then
+  # shellcheck disable=SC1091
+  source /etc/profile.d/bash_completion.sh
+
+elif _bash_it_homebrew_check
+then
+  : ${BASH_COMPLETION_COMPAT_DIR:=$BASH_IT_HOMEBREW_PREFIX/etc/bash_completion.d}
+
+  case "${BASH_VERSION}" in
+  1*|2*|3.0*|3.1*)
+    _log_warning "Cannot load completion due to version of shell. Are you using Bash 3.2+?"
+    ;;
+  3.2*|4.0*|4.1*)
+    # Import version 1.x of bash-completion, if installed.
+    BASH_COMPLETION="$BASH_IT_HOMEBREW_PREFIX/opt/bash-completion@1/etc/bash_completion"
+    if [[ -r "$BASH_COMPLETION" ]] ; then
+      # shellcheck disable=SC1090
+      source "$BASH_COMPLETION"
+    else
+      unset BASH_COMPLETION
+    fi
+    ;;
+  4.2*|5*|*)
+    # homebrew/versions/bash-completion2 (required for projects.completion.bash) is installed to this path
+    if [[ -r "$BASH_IT_HOMEBREW_PREFIX"/etc/profile.d/bash_completion.sh ]] ; then
+      # shellcheck disable=SC1090
+      source "$BASH_IT_HOMEBREW_PREFIX"/etc/profile.d/bash_completion.sh
+    fi
+    ;;
+  esac
 fi
 
-if [[ ${__bash_it_restore_nounset:-false} == "true" ]]; then
+if $__bash_it_restore_nounset
+then
 	shopt -so nounset
 fi
 unset __bash_it_restore_nounset
diff --git a/completion/available/tldr.completion.bash b/completion/available/tldr.completion.bash
new file mode 100644
index 00000000..493996fa
--- /dev/null
+++ b/completion/available/tldr.completion.bash
@@ -0,0 +1,43 @@
+#!/usr/bin/env bash
+
+# I don't use bash, but I remember this works.
+# If anyone has an improved, and better version, go ahead, open a pull-request.
+#
+# Copyright (C) 2016 Arvid Gerstmann
+#
+
+_tldr_get_files() {
+	local ret
+	local files="$(find $HOME/.tldrc/tldr-master/pages/$1 -name '*.md' -exec basename {} .md \;)"
+
+	IFS=$'\n\t'
+	for f in $files; do
+	    echo $f
+	done
+}
+
+_tldr_complete() {
+    COMPREPLY=()
+	local word="${COMP_WORDS[COMP_CWORD]}"
+	local cmpl=""
+    if [ "$word" = "-" ]; then
+        cmpl=$(echo $'\n-v\n-h\n-u\n-c\n-p\n-r' | sort)
+    elif [ "$word" = "--" ]; then
+        cmpl=$(echo $'--version\n--help\n--update\n--clear-cache\n--platform\n--render' | sort)
+    else
+        if [ -d "$HOME/.tldrc/tldr-master/pages" ]; then
+            local platform="$(uname)"
+            cmpl="$(_tldr_get_files common | sort | uniq)"
+            if [ "$platform" = "Darwin" ]; then
+                cmpl="${cmpl}$(_tldr_get_files osx | sort | uniq)"
+            elif [ "$platform" = "Linux" ]; then
+                cmpl="${cmpl}$(_tldr_get_files linux | sort | uniq)"
+            elif [ "$platform" = "SunOS" ]; then
+                cmpl="${cmpl}$(_tldr_get_files sunos | sort | uniq)"
+            fi
+        fi
+    fi
+    COMPREPLY=( $(compgen -W "$cmpl" -- "$word") )
+}
+
+complete -F _tldr_complete tldr
diff --git a/completion/available/tmuxinator.completion.bash b/completion/available/tmuxinator.completion.bash
new file mode 100755
index 00000000..cda27174
--- /dev/null
+++ b/completion/available/tmuxinator.completion.bash
@@ -0,0 +1,25 @@
+#!/usr/bin/env bash
+
+_tmuxinator() {
+    COMPREPLY=()
+    local word
+    word="${COMP_WORDS[COMP_CWORD]}"
+
+    if [ "$COMP_CWORD" -eq 1 ]; then
+        #local commands="$(compgen -W "$(tmuxinator commands)" -- "$word")"
+        local projects="$(compgen -W "$(tmuxinator completions start)" -- "$word")"
+
+        COMPREPLY=( $commands $projects )
+    elif [ "$COMP_CWORD" -eq 2 ]; then
+        local words
+        words=("${COMP_WORDS[@]}")
+        unset words[0]
+        unset words[$COMP_CWORD]
+        local completions
+        completions=$(tmuxinator completions "${words[@]}")
+        COMPREPLY=( $(compgen -W "$completions" -- "$word") )
+    fi
+}
+
+complete -F _tmuxinator tmuxinator mux
+alias mux="tmuxinator"
diff --git a/completion/available/ttjava.completion.bash b/completion/available/ttjava.completion.bash
new file mode 100644
index 00000000..8e57dbd1
--- /dev/null
+++ b/completion/available/ttjava.completion.bash
@@ -0,0 +1,7 @@
+#!/usr/bin/env bash
+
+# ----------------------------------------------------------------------------
+# Run!
+
+TTJAVA=$(command -v ttjava)
+[[ $TTJAVA ]] && eval "$( ttjava init )"
diff --git a/completion/available/wd.completion.bash b/completion/available/wd.completion.bash
new file mode 100644
index 00000000..1273f03d
--- /dev/null
+++ b/completion/available/wd.completion.bash
@@ -0,0 +1,163 @@
+# shellcheck shell=bash
+cite "about-completion"
+about-completion "wd completion"
+
+_wdd() {
+  local wdd="$HOME/.wdd"
+  [[ -d "$wdd" ]] || mkdir "$wdd"
+
+  echo "$wdd"
+}
+
+_warp_points() {
+  ls "$(_wdd)/"| sed 's|@||'
+}
+
+_point_from_path() {
+  echo "$1" | cut -d/ -f1
+}
+
+_path_without_point() {
+  if [[ "$1" =~ "/" ]]; then
+    echo "$1" | cut -d/ -f2-
+  fi
+}
+
+_leading_folders_from_path() {
+  if [[ "$1" =~ "/" ]]; then
+    echo "$1" | rev | cut -d/ -f2- | rev | sed 's|$|/|'
+  fi
+}
+
+_path_without_leading_folders() {
+  echo "$1" | rev | cut -d/ -f1 | rev
+}
+
+_point_destination() {
+  local wdd="$(_wdd)"
+  local point="$1"
+
+  echo "$(readlink $wdd/$point)"
+}
+
+_wd_autocomplete() {
+  local current="${COMP_WORDS[COMP_CWORD]}"
+
+  if [[ "$current" =~ "/" ]]; then
+    local point="$(_point_from_path "$current")"
+    local subpath="$(_path_without_point "$current")"
+    local destination="$(_point_destination "$point")"
+    local subfolders="$(_leading_folders_from_path "$subpath")"
+    local completions="$(ls -F "$destination/$subfolders" | sed 's|@$||')"
+    current="$(_path_without_leading_folders "$subpath")"
+
+    COMPREPLY=($(compgen -W "$completions" -P "$point/$subfolders" -- $current))
+  else
+    COMPREPLY=($(compgen -W "$(_warp_points)" -- $current))
+  fi
+}
+
+wd() {
+  local wdd="$(_wdd)"
+
+  local point_name="$2"
+  local point_path="$wdd/$point_name"
+  local point_destination="$(readlink $point_path)"
+  local tmux_on=0
+  local make_on=0
+
+  [[ -z "$point_destination" ]] && point_destination="no point destination"
+
+  case "x$1" in
+    xt)
+      shift
+      tmux_on=1
+    ;;
+    # xmk)
+    #   shift
+    #   echo $( redis-bash-cli get $1 )
+    #   return $?
+    # ;;
+    xadd)
+      if ln -s "$PWD" "$point_path" &> /dev/null; then
+        echo "Added warp point '$point_name' ($PWD)"
+        return 0
+      else
+        echo "Error adding warp point '$point_name' ($PWD)"
+        return 1
+      fi
+    ;;
+    xrm)
+      if rm -f "$point_path" &> /dev/null; then
+        echo "Removed warp point '$point_name' ($point_destination)"
+        return 0
+      else
+        echo "Error removing warp point '$point_name' ($point_destination)"
+        return 1
+      fi
+    ;;
+    xls)
+      local point_list=$(ls -l "$wdd/" | grep -v '^total' | grep -Eo '\b\w+\b ->.*' | awk -F' -> ' '{printf "\033[95m%14s\033[0m \033[92m%s\033[0m\n", $1, $2}')
+      echo "$point_list" | grep "$2"
+      return 0
+    ;;
+    xfzf)
+      local point_list=$(ls -l "$wdd/" | grep -v '^total' | grep -Eo '\b\w+\b ->.*' | awk -F' -> ' '{printf "%14s %s\n", $1, $2}')
+      ff=$(echo "$point_list" | grep "$2" | fzf-tmux -l 100% --multi --reverse --color fg:252,bg:233,hl:67,fg+:252,bg+:235,hl+:81 --color info:144,prompt:161,spinner:135,pointer:135,marker:118)
+      echo $ff| awk -F' ' '{printf "\033[95m%14s\033[0m \033[92m%s\033[0m\n", $1, $2}'
+      echo =$ff=| sed  's/= \(\w\+\) .*/wd \1/'| xcopy
+      return 0
+    ;;
+    xw)
+      cd ~/work
+      return $?
+    ;;
+    x-h | x--help)
+      echo "Usage: wd [command] <point_name>"
+      echo "Commands:"
+      echo "  add <point_name>    Adds the current working directory to your warp points"
+      echo "  rm <point_name>     Removes the named point from your warp points"
+      echo "  t <point_name>      Open points with tmux"
+      echo "  ls                  Prints all warp points"
+      echo "  ls <point_name>     Prints all warp points matching the specified name"
+      echo "  -                   warps to previous working directory"
+      echo "  -h, --help          Prints this lovely message"
+      return 0
+    ;;
+    x)
+      cd /workspace
+      return $?
+    ;;
+    x-)
+      cd -
+      return $?
+    ;;
+    x-*)
+      echo "Unknown option: '$1'"
+      return 1
+    ;;
+  esac
+
+  # if we get here, we're warping
+  local requested_point="$(_point_from_path "$1")"
+  local subpath="$(_path_without_point "$1")"
+
+  point_path="$wdd/$requested_point"
+
+  if [[ ! -L "$point_path" ]]; then
+    echo "Can't warp to point '$requested_point' because it doesn't exist."
+    return 1
+  fi
+
+  local requested_destination="$(readlink $point_path)/$subpath"
+
+  if [ $tmux_on -eq 1 ]; then
+    tmux new-window -c "$requested_destination"
+    return $?
+  fi
+
+  cd "$requested_destination"
+  return $?
+}
+
+complete -o nospace -F _wd_autocomplete wd
diff --git a/completion/available/xp.completion.bash b/completion/available/xp.completion.bash
new file mode 100644
index 00000000..49d25e7b
--- /dev/null
+++ b/completion/available/xp.completion.bash
@@ -0,0 +1,34 @@
+#!/usr/bin/env bash
+#                      __ __       ___
+#                     /\ \\ \    /'___`\
+#                     \ \ \\ \  /\_\ /\ \
+#                      \ \ \\ \_\/_/// /__
+#                       \ \__ ,__\ // /_\ \
+#                        \/_/\_\_//\______/
+#                           \/_/  \/_____/
+#                                         Algoritimos
+#
+#
+#      Author: Ivan Lopes
+#        Mail: ivan (at) 42algoritmos (dot) com (dot) br
+#        Site: htredis_get://www.42algoritmos.com.br
+#     License: gpl
+#       Phone: +1 561 801 7985
+#    Language: Shell Script
+#        File: redis.get.bash
+#        Date: Ter 28 Fev 2017 00:35:55 BRT
+# Description:
+#
+# ----------------------------------------------------------------------------
+#
+# ----------------------------------------------------------------------------
+
+##############################################################################
+##############################################################################
+##############################################################################
+
+# ----------------------------------------------------------------------------
+# Run!
+
+XP=$(command -v xp)
+[[ $XP ]] && eval "$( xp init )"
diff --git a/custom/cd.bash.DEPRECATED b/custom/cd.bash.DEPRECATED
new file mode 100644
index 00000000..b161b977
--- /dev/null
+++ b/custom/cd.bash.DEPRECATED
@@ -0,0 +1,32 @@
+#!/usr/bin/env bash
+#
+pushd()
+{
+  if [ $# -eq 0 ]; then
+    DIR="${HOME}"
+  else
+    DIR="$1"
+  fi
+
+  builtin pushd "${DIR}" > /dev/null
+  echo -n "DIRSTACK: "
+  dirs
+}
+
+pushd_builtin()
+{
+  builtin pushd > /dev/null
+  echo -n "DIRSTACK: "
+  dirs
+}
+
+popd()
+{
+  builtin popd > /dev/null
+  echo -n "DIRSTACK: "
+  dirs
+}
+
+alias cd='pushd'
+alias back='popd'
+alias flip='pushd_builtin'
diff --git a/custom/conan.bash b/custom/conan.bash
new file mode 100644
index 00000000..470f6320
--- /dev/null
+++ b/custom/conan.bash
@@ -0,0 +1,8 @@
+#!/usr/bin/env bash
+
+
+# export CONAN_COMPILER=gcc
+# export CONAN_COMPILER_VERSION=4.8
+
+# export CONAN_COMPILER=clang
+# export CONAN_COMPILER_VERSION=3.5
diff --git a/custom/environment.bash b/custom/environment.bash
new file mode 100644
index 00000000..0768c68b
--- /dev/null
+++ b/custom/environment.bash
@@ -0,0 +1,27 @@
+#!/usr/bin/env bash
+export DISPLAY=:0.0
+export XDG_CONFIG_HOME=$HOME/.config
+export NVIM_LISTEN_ADDRESS=/tmp/neovim.socket
+export AWT_TOOLKIT="MToolkit"
+
+export TERM=tmux-256color
+export COLORTERM=truecolor
+export COLORFGBG="15;0"
+export BAT_PAGER="less -RF"
+
+export PYENV_VIRTUALENV_DISABLE_PROMPT=1
+export CHTSH_URL=http://192.168.2.43:8002
+#export CHTSH_URL=0.0.0.0:8002
+export CHEATSH_INSTALLATION=~/.cheat.sh
+
+export DENO_INSTALL="${HOME}/.deno"
+export PATH="$DENO_INSTALL/bin:$PATH"
+
+export GLSLANG_INSTALL="/opt/glslang/"
+export PATH="$GLSLANG_INSTALL/bin:$PATH"
+
+export SRC_ENDPOINT=https://sourcegraph.com
+export SRC_ACCESS_TOKEN="$(git config sourcegraph.token)"
+
+export HOMEBREW_EDITOR=nvim
+export EDITOR=nvim
diff --git a/custom/funcoeszz.bash b/custom/funcoeszz.bash
new file mode 100644
index 00000000..1e5687cd
--- /dev/null
+++ b/custom/funcoeszz.bash
@@ -0,0 +1,8 @@
+#!/usr/bin/env bash
+#
+if [[ -e "${HOME}/developer/funcoeszz/funcoeszz" ]] ; then
+
+  ZZ_HOME="${HOME}/developer/funcoeszz/funcoeszz"
+  eval "$(cat $ZZ_HOME)"
+
+fi
diff --git a/custom/man.bash b/custom/man.bash
new file mode 100644
index 00000000..1d4814a6
--- /dev/null
+++ b/custom/man.bash
@@ -0,0 +1,19 @@
+#!/usr/bin/env bash
+#
+# This is an example file. Don't use this for your custom scripts. Instead, create another file within the
+# custom directory.
+#export EDITOR=$(which vi)
+export TDL_DATABASE=~/developer/tdldb
+export PAGER=more
+export MANPAGER='nvim +Man!'
+
+# Supports bold/underline/etc
+# See https://stackoverflow.com/a/4233818/9782020
+# function man {
+#     eval "unbuffer man -P cat \"$@\" | $MANPAGER"
+# }
+
+# No bold/underline/etc
+function man {
+    eval "command man \"$@\" | $MANPAGER"
+}
diff --git a/custom/mpv-shot0001.jpg b/custom/mpv-shot0001.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..326030d44a11fdd2ebec2b29fb13d281fb6b0e95
GIT binary patch
literal 128500
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

literal 0
HcmV?d00001

diff --git a/custom/mpv-shot0002.jpg b/custom/mpv-shot0002.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..326030d44a11fdd2ebec2b29fb13d281fb6b0e95
GIT binary patch
literal 128500
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

literal 0
HcmV?d00001

diff --git a/custom/mpv-shot0003.jpg b/custom/mpv-shot0003.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..326030d44a11fdd2ebec2b29fb13d281fb6b0e95
GIT binary patch
literal 128500
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

literal 0
HcmV?d00001

diff --git a/custom/mpv-shot0004.jpg b/custom/mpv-shot0004.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..326030d44a11fdd2ebec2b29fb13d281fb6b0e95
GIT binary patch
literal 128500
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

literal 0
HcmV?d00001

diff --git a/custom/tp.bash b/custom/tp.bash
new file mode 100644
index 00000000..fb317aa7
--- /dev/null
+++ b/custom/tp.bash
@@ -0,0 +1,35 @@
+#!/usr/bin/env bash
+#
+# This is an example file. Don't use this for your custom scripts. Instead, create another file within the
+# custom directory.
+
+export SHELLSCRIPT_TEMPLATE_PKG=/home/ivan/developer/scripts/tp/template
+export SHELLSCRIPT_CTEMPLATE=/home/ivan/developer/scripts/tp/ctemplate
+export SHELLSCRIPT_PKG=/home/ivan/developer/scripts/tp/bin-shellscript-pakages
+export PATH=/home/ivan/developer/scripts/tp/bin-shellscript-pakages:$PATH
+export SHELLSCRIPT_PAKAGES=/home/ivan/developer/scripts/tp/archive-shellscript-pakages
+
+mvToTemplate ()
+{
+  cp *.templatefile $SHELLSCRIPT_TEMPLATE_PKG
+}
+goTemplate ()
+{
+  cd  $SHELLSCRIPT_TEMPLATE_PKG
+}
+
+_tp()
+{
+  local cur prev opts
+  COMPREPLY=()
+  cur="${COMP_WORDS[COMP_CWORD]}"
+  prev="${COMP_WORDS[COMP_CWORD-1]}"
+  # n=$(( $(tp list --| wc -l) -1 ))
+  opts=`tp list --| awk '{print }'| sed -e '' | sed -e :a -e 'N; # s/\n/ /; ta'`
+
+  if [[ ${cur} == --* ]] ; then
+    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
+    return 0
+  fi
+}
+complete -F _tp tp
diff --git a/custom/xfile.bash b/custom/xfile.bash
new file mode 100644
index 00000000..13c2d263
--- /dev/null
+++ b/custom/xfile.bash
@@ -0,0 +1,9 @@
+#!/usr/bin/env bash
+
+xfile() {
+  [ "$1" ] || {
+    nohup nautilus --no-desktop . >/dev/null 2>&1
+  }
+
+  nohup nautilus --no-desktop $1 >/dev/null 2>&1
+}
diff --git a/plugins/available/alias-completion.plugin.bash b/plugins/available/alias-completion.plugin.bash
index d23779f7..eb368d93 100644
--- a/plugins/available/alias-completion.plugin.bash
+++ b/plugins/available/alias-completion.plugin.bash
@@ -1,5 +1,105 @@
 # shellcheck shell=bash
-# stub for renamed file
+# Load after the other completions to understand what needs to be completed
+# BASH_IT_LOAD_PRIORITY: 365
 
-_enable-completion aliases && _disable-plugin alias-completion
-source "${BASH_IT?}/completion/available/aliases.completion.bash"
+cite about-plugin
+about-plugin 'Automatic completion of aliases'
+
+# References:
+# http://superuser.com/a/437508/119764
+# http://stackoverflow.com/a/1793178/1228454
+
+# This needs to be a plugin so it gets executed after the completions and the aliases have been defined.
+# Bash-it loads its components in the order
+# 1) Aliases
+# 2) Completions
+# 3) Plugins
+# 4) Custom scripts
+
+# Automatically add completion for all aliases to commands having completion functions
+function alias_completion {
+	local namespace="alias_completion"
+	local tmp_file completion_loader alias_name alias_tokens line completions
+	local alias_arg_words new_completion compl_func compl_wrapper
+
+	# parse function based completion definitions, where capture group 2 => function and 3 => trigger
+	local compl_regex='complete( +[^ ]+)* -F ([^ ]+) ("[^"]+"|[^ ]+)'
+	# parse alias definitions, where capture group 1 => trigger, 2 => command, 3 => command arguments
+	local alias_regex="alias( -- | )([^=]+)='(\"[^\"]+\"|[^ ]+)(( +[^ ]+)*)'"
+
+	# create array of function completion triggers, keeping multi-word triggers together
+	eval "completions=($(complete -p | sed -Ene "/$compl_regex/s//'\3'/p"))"
+	((${#completions[@]} == 0)) && return 0
+
+	# create temporary file for wrapper functions and completions
+	tmp_file="$(mktemp -t "${namespace}-${RANDOM}XXXXXX")" || return 1
+
+	completion_loader="$(complete -p -D 2> /dev/null | sed -Ene 's/.* -F ([^ ]*).*/\1/p')"
+
+	# read in "<alias> '<aliased command>' '<command args>'" lines from defined aliases
+	# some aliases do have backslashes that needs to be interpreted
+	# shellcheck disable=SC2162
+	while read line; do
+		eval "alias_tokens=($line)" 2> /dev/null || continue # some alias arg patterns cause an eval parse error
+		# shellcheck disable=SC2154 # see `eval` above
+		alias_name="${alias_tokens[0]}" alias_cmd="${alias_tokens[1]}" alias_args="${alias_tokens[2]# }"
+
+		# skip aliases to pipes, boolean control structures and other command lists
+		# (leveraging that eval errs out if $alias_args contains unquoted shell metacharacters)
+		eval "alias_arg_words=($alias_args)" 2> /dev/null || continue
+		# avoid expanding wildcards
+		read -a alias_arg_words <<< "$alias_args"
+
+		# skip alias if there is no completion function triggered by the aliased command
+		if ! _bash-it-array-contains-element "$alias_cmd" "${completions[@]}"; then
+			if [[ -n "$completion_loader" ]]; then
+				# force loading of completions for the aliased command
+				eval "$completion_loader $alias_cmd"
+				# 124 means completion loader was successful
+				[[ $? -eq 124 ]] || continue
+				completions+=("$alias_cmd")
+			else
+				continue
+			fi
+		fi
+		new_completion="$(complete -p "$alias_cmd" 2> /dev/null)"
+
+		# create a wrapper inserting the alias arguments if any
+		if [[ -n $alias_args ]]; then
+			compl_func="${new_completion/#* -F /}"
+			compl_func="${compl_func%% *}"
+			# avoid recursive call loops by ignoring our own functions
+			if [[ "${compl_func#_"$namespace"::}" == "$compl_func" ]]; then
+				compl_wrapper="_${namespace}::${alias_name}"
+				echo "function $compl_wrapper {
+                        local compl_word=\$2
+                        local prec_word=\$3
+                        # check if prec_word is the alias itself. if so, replace it
+                        # with the last word in the unaliased form, i.e.,
+                        # alias_cmd + ' ' + alias_args.
+                        if [[ \$COMP_LINE == \"\$prec_word \$compl_word\" ]]; then
+                            prec_word='$alias_cmd $alias_args'
+                            prec_word=\${prec_word#* }
+                        fi
+                        (( COMP_CWORD += ${#alias_arg_words[@]} ))
+                        COMP_WORDS=($alias_cmd $alias_args \${COMP_WORDS[@]:1})
+                        (( COMP_POINT -= \${#COMP_LINE} ))
+                        COMP_LINE=\${COMP_LINE/$alias_name/$alias_cmd $alias_args}
+                        (( COMP_POINT += \${#COMP_LINE} ))
+                        $compl_func \"$alias_cmd\" \"\$compl_word\" \"\$prec_word\"
+                    }" >> "$tmp_file"
+				new_completion="${new_completion/ -F $compl_func / -F $compl_wrapper }"
+			fi
+		fi
+
+		# replace completion trigger by alias
+		if [[ -n $new_completion ]]; then
+			new_completion="${new_completion% *} $alias_name"
+			echo "$new_completion" >> "$tmp_file"
+		fi
+	done < <(alias -p | sed -Ene "s/$alias_regex/\2 '\3' '\4'/p")
+	# shellcheck source=/dev/null
+	source "$tmp_file" && command rm -f "$tmp_file"
+}
+
+alias_completion
diff --git a/plugins/available/android.plugin.bash b/plugins/available/android.plugin.bash
new file mode 100644
index 00000000..4c3546b8
--- /dev/null
+++ b/plugins/available/android.plugin.bash
@@ -0,0 +1,12 @@
+cite about-plugin
+about-plugin 'Load Android Development Kit Manager'
+
+CMDLINE_TOOLS=${HOME}/Android/Sdk/cmdline-tools
+if [ -d "${CMDLINE_TOOLS}" ]; then
+    export PATH=$PATH:${CMDLINE_TOOLS}/latest/bin
+fi
+
+# desliga-mobile()
+# {
+#   adb shell "su -c 'reboot -p'"
+# }
diff --git a/plugins/available/arduino.plugin.bash b/plugins/available/arduino.plugin.bash
new file mode 100644
index 00000000..0da5eb83
--- /dev/null
+++ b/plugins/available/arduino.plugin.bash
@@ -0,0 +1,18 @@
+
+cite about-plugin
+about-plugin 'Load Arduino Development Kit Manager'
+
+v=1.8.1
+v=1.8.7
+t=5.4.0-atmel3.6.1-arduino2
+
+if [ -d "/opt/arduino-${v}" ]; then
+  export ARDUINO_DIR=/opt/arduino-${v}
+  export PATH=$PATH:$ARDUINO_DIR
+fi
+if [ -d "${HOME}/developer/Arduino-Makefile" ]; then
+  #export AVR_TOOLS_DIR=/usr
+  export AVR_TOOLS_DIR=${HOME}/.arduino15/packages/arduino/tools/avr-gcc/${t}
+  export ARDMK_DIR=${HOME}/developer/Arduino-Makefile
+fi
+
diff --git a/plugins/available/autojump.plugin.bash b/plugins/available/autojump.plugin.bash
index 3dfa0bca..dc8fbbb4 100644
--- a/plugins/available/autojump.plugin.bash
+++ b/plugins/available/autojump.plugin.bash
@@ -4,11 +4,12 @@ about-plugin 'Autojump configuration, see https://github.com/wting/autojump for
 
 # Only supports the Homebrew variant, Debian and Arch at the moment.
 # Feel free to provide a PR to support other install locations
-# shellcheck disable=SC1090
 if _bash_it_homebrew_check && [[ -s "${BASH_IT_HOMEBREW_PREFIX}/etc/profile.d/autojump.sh" ]]; then
 	source "${BASH_IT_HOMEBREW_PREFIX}/etc/profile.d/autojump.sh"
 elif _command_exists dpkg && dpkg -s autojump &> /dev/null; then
+	# shellcheck disable=SC1090
 	source "$(dpkg-query -S autojump.sh | cut -d' ' -f2)"
 elif _command_exists pacman && pacman -Q autojump &> /dev/null; then
+	# shellcheck disable=SC1090
 	source "$(pacman -Ql autojump | grep autojump.sh | cut -d' ' -f2)"
 fi
diff --git a/plugins/available/bangsh.plugin.bash b/plugins/available/bangsh.plugin.bash
new file mode 100644
index 00000000..9e1bcc7b
--- /dev/null
+++ b/plugins/available/bangsh.plugin.bash
@@ -0,0 +1,4 @@
+cite about-plugin
+about-plugin 'Load Bang.sh - for easy Shell Scripting'
+
+export PATH="$PATH:/home/ivan/developer/scripts/bangsh"
diff --git a/plugins/available/base.plugin.bash b/plugins/available/base.plugin.bash
index 1a905163..6490ab88 100644
--- a/plugins/available/base.plugin.bash
+++ b/plugins/available/base.plugin.bash
@@ -67,7 +67,7 @@ function passgen() {
 
 # Create alias pass to passgen when pass isn't installed or
 # BASH_IT_LEGACY_PASS is true.
-if ! _command_exists pass || [[ "${BASH_IT_LEGACY_PASS:-}" == true ]]; then
+if ! _command_exists pass || [[ "${BASH_IT_LEGACY_PASS:-}" = true ]]; then
 	alias pass=passgen
 fi
 
@@ -120,26 +120,21 @@ function usage() {
 	esac
 }
 
-function t() {
-	about 'todo.sh if available, otherwise one thing todo'
-	param 'if not set, display todo item'
-	param '1: todo text'
-
-	local todotxt="${XDG_STATE_HOME:-~/.local/state}/bash_it/todo.txt"
-
-	if _bash-it-component-item-is-enabled plugin todo; then
-		todo.sh "$@"
-		return
-	elif [[ ! -f "${todotxt}" && -f ~/.t ]]; then
-		mv -vn ~/.t "${todotxt}" # Verbose, so the user knows. Don't overwrite, just in case.
-	fi
-
-	if [[ "$#" -eq 0 ]]; then
-		cat "${todotxt}"
-	else
-		echo "$@" >| "${todotxt}"
-	fi
-}
+# shellcheck disable=SC2144 # the glob matches only one file
+if [[ ! -e "${BASH_IT?}/plugins/enabled/todo.plugin.bash" &&
+	! -e "${BASH_IT?}/plugins/enabled"/*"${BASH_IT_LOAD_PRIORITY_SEPARATOR-}todo.plugin.bash" ]]; then
+	# if user has installed todo plugin, skip this...
+	function t() {
+		about 'one thing todo'
+		param 'if not set, display todo item'
+		param '1: todo text'
+		if [[ "$*" == "" ]]; then
+			cat ~/.t
+		else
+			echo "$*" > ~/.t
+		fi
+	}
+fi
 
 if _command_exists mkisofs; then
 	function mkiso() {
diff --git a/plugins/available/battery.plugin.bash b/plugins/available/battery.plugin.bash
index b38d7f9d..e8e3995f 100644
--- a/plugins/available/battery.plugin.bash
+++ b/plugins/available/battery.plugin.bash
@@ -1,130 +1,149 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'display info about your battery charge level'
 
-function ac_adapter_connected() {
-	local batteries
-	if _command_exists upower; then
-		IFS=$'\n' read -d '' -ra batteries < <(upower -e | grep -i BAT)
-		upower -i "${batteries[0]:-}" | grep 'state' | grep -q 'charging\|fully-charged'
-	elif _command_exists acpi; then
-		acpi -a | grep -q "on-line"
-	elif _command_exists pmset; then
-		pmset -g batt | grep -q 'AC Power'
-	elif _command_exists ioreg; then
-		ioreg -n AppleSmartBattery -r | grep -q '"ExternalConnected" = Yes'
-	elif _command_exists WMIC; then
-		WMIC Path Win32_Battery Get BatteryStatus /Format:List | grep -q 'BatteryStatus=2'
-	fi
+ac_adapter_connected(){
+  if _command_exists upower;
+  then
+    upower -i $(upower -e | grep -i BAT) | grep 'state' | grep -q 'charging\|fully-charged'
+    return $?
+  elif _command_exists acpi;
+  then
+    acpi -a | grep -q "on-line"
+    return $?
+  elif _command_exists pmset;
+  then
+    pmset -g batt | grep -q 'AC Power'
+    return $?
+  elif _command_exists ioreg;
+  then
+    ioreg -n AppleSmartBattery -r | grep -q '"ExternalConnected" = Yes'
+    return $?
+  elif _command_exists WMIC;
+  then
+    WMIC Path Win32_Battery Get BatteryStatus /Format:List | grep -q 'BatteryStatus=2'
+    return $?
+  fi
 }
 
-function ac_adapter_disconnected() {
-	local batteries
-	if _command_exists upower; then
-		IFS=$'\n' read -d '' -ra batteries < <(upower -e | grep -i BAT)
-		upower -i "${batteries[0]:-}" | grep 'state' | grep -q 'discharging'
-	elif _command_exists acpi; then
-		acpi -a | grep -q "off-line"
-	elif _command_exists pmset; then
-		pmset -g batt | grep -q 'Battery Power'
-	elif _command_exists ioreg; then
-		ioreg -n AppleSmartBattery -r | grep -q '"ExternalConnected" = No'
-	elif _command_exists WMIC; then
-		WMIC Path Win32_Battery Get BatteryStatus /Format:List | grep -q 'BatteryStatus=1'
-	fi
+ac_adapter_disconnected(){
+  if _command_exists upower;
+  then
+    upower -i $(upower -e | grep -i BAT) | grep 'state' | grep -q 'discharging'
+    return $?
+  elif _command_exists acpi;
+  then
+    acpi -a | grep -q "off-line"
+    return $?
+  elif _command_exists pmset;
+  then
+    pmset -g batt | grep -q 'Battery Power'
+    return $?
+  elif _command_exists ioreg;
+  then
+    ioreg -n AppleSmartBattery -r | grep -q '"ExternalConnected" = No'
+    return $?
+  elif _command_exists WMIC;
+  then
+    WMIC Path Win32_Battery Get BatteryStatus /Format:List | grep -q 'BatteryStatus=1'
+    return $?
+  fi
 }
 
-function battery_percentage() {
-	about 'displays battery charge as a percentage of full (100%)'
-	group 'battery'
+battery_percentage(){
+  about 'displays battery charge as a percentage of full (100%)'
+  group 'battery'
 
-	local command_output batteries
+  declare COMMAND_OUTPUT="no"
 
-	if _command_exists upower; then
-		IFS=$'\n' read -d '' -ra batteries < <(upower -e | grep -i BAT)
-		command_output="$(upower --show-info "${batteries[0]:-}" | grep percentage | grep -o '[0-9]\+' | head -1)"
-	elif _command_exists acpi; then
-		command_output=$(acpi -b | awk -F, '/,/{gsub(/ /, "", $0); gsub(/%/,"", $0); print $2}')
-	elif _command_exists pmset; then
-		command_output=$(pmset -g ps | sed -n 's/.*[[:blank:]]+*\(.*%\).*/\1/p' | grep -o '[0-9]\+' | head -1)
-	elif _command_exists ioreg; then
-		command_output=$(ioreg -n AppleSmartBattery -r | awk '$1~/Capacity/{c[$1]=$3} END{OFMT="%05.2f"; max=c["\"MaxCapacity\""]; print (max>0? 100*c["\"CurrentCapacity\""]/max: "?")}' | grep -o '[0-9]\+' | head -1)
-	elif _command_exists WMIC; then
-		command_output=$(WMIC PATH Win32_Battery Get EstimatedChargeRemaining /Format:List | grep -o '[0-9]\+' | head -1)
-	else
-		command_output="no"
-	fi
+  if _command_exists upower;
+  then
+    COMMAND_OUTPUT=$(upower --show-info $(upower --enumerate | grep -i BAT) | grep percentage | grep -o "[0-9]\+" | head -1)
+  elif _command_exists acpi;
+  then
+    COMMAND_OUTPUT=$(acpi -b | awk -F, '/,/{gsub(/ /, "", $0); gsub(/%/,"", $0); print $2}' )
+  elif _command_exists pmset;
+  then
+    COMMAND_OUTPUT=$(pmset -g ps | sed -n 's/.*[[:blank:]]+*\(.*%\).*/\1/p' | grep -o "[0-9]\+" | head -1)
+  elif _command_exists ioreg;
+  then
+    COMMAND_OUTPUT=$(ioreg -n AppleSmartBattery -r | awk '$1~/Capacity/{c[$1]=$3} END{OFMT="%05.2f"; max=c["\"MaxCapacity\""]; print (max>0? 100*c["\"CurrentCapacity\""]/max: "?")}' | grep -o "[0-9]\+" | head -1)
+  elif _command_exists WMIC;
+  then
+    COMMAND_OUTPUT=$(WMIC PATH Win32_Battery Get EstimatedChargeRemaining /Format:List | grep -o '[0-9]\+' | head -1)
+  else
+    COMMAND_OUTPUT="no"
+  fi
 
-	if [[ "${command_output}" != "no" ]]; then
-		printf "%02d" "${command_output:--1}"
-	else
-		echo "${command_output}"
-	fi
+  if [ "${COMMAND_OUTPUT}" != "no" ]; then
+    printf "%02d" "${COMMAND_OUTPUT:--1}"
+  else
+    echo "${COMMAND_OUTPUT}"
+  fi
 }
 
-function battery_charge() {
-	about 'graphical display of your battery charge'
-	group 'battery'
+battery_charge(){
+  about 'graphical display of your battery charge'
+  group 'battery'
 
-	# Full char
-	local f_c='▸'
-	# Depleted char
-	local d_c='▹'
-	local depleted_color="${normal?}"
-	local full_color="${green?}"
-	local half_color="${yellow?}"
-	local danger_color="${red?}"
-	#local battery_output="${depleted_color}${d_c}${d_c}${d_c}${d_c}${d_c}"
-	local battery_percentage
-	battery_percentage=$(battery_percentage)
+  # Full char
+  local F_C='▸'
+  # Depleted char
+  local D_C='▹'
+  local DEPLETED_COLOR="${normal}"
+  local FULL_COLOR="${green}"
+  local HALF_COLOR="${yellow}"
+  local DANGER_COLOR="${red}"
+  local BATTERY_OUTPUT="${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${D_C}"
+  local BATTERY_PERC=$(battery_percentage)
 
-	case $battery_percentage in
-		no)
-			echo ""
-			;;
-		9*)
-			echo "${full_color}${f_c}${f_c}${f_c}${f_c}${f_c}${normal?}"
-			;;
-		8*)
-			echo "${full_color}${f_c}${f_c}${f_c}${f_c}${half_color}${f_c}${normal?}"
-			;;
-		7*)
-			echo "${full_color}${f_c}${f_c}${f_c}${f_c}${depleted_color}${d_c}${normal?}"
-			;;
-		6*)
-			echo "${full_color}${f_c}${f_c}${f_c}${half_color}${f_c}${depleted_color}${d_c}${normal?}"
-			;;
-		5*)
-			echo "${full_color}${f_c}${f_c}${f_c}${depleted_color}${d_c}${d_c}${normal?}"
-			;;
-		4*)
-			echo "${full_color}${f_c}${f_c}${half_color}${f_c}${depleted_color}${d_c}${d_c}${normal?}"
-			;;
-		3*)
-			echo "${full_color}${f_c}${f_c}${depleted_color}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		2*)
-			echo "${full_color}${f_c}${half_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		1*)
-			echo "${full_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		05)
-			echo "${danger_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		04)
-			echo "${danger_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		03)
-			echo "${danger_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		02)
-			echo "${danger_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		0*)
-			echo "${half_color}${f_c}${depleted_color}${d_c}${d_c}${d_c}${d_c}${normal?}"
-			;;
-		*)
-			echo "${danger_color}UNPLG${normal?}"
-			;;
-	esac
+  case $BATTERY_PERC in
+    no)
+      echo ""
+    ;;
+    9*)
+      echo "${FULL_COLOR}${F_C}${F_C}${F_C}${F_C}${F_C}${normal}"
+    ;;
+    8*)
+      echo "${FULL_COLOR}${F_C}${F_C}${F_C}${F_C}${HALF_COLOR}${F_C}${normal}"
+    ;;
+    7*)
+      echo "${FULL_COLOR}${F_C}${F_C}${F_C}${F_C}${DEPLETED_COLOR}${D_C}${normal}"
+    ;;
+    6*)
+      echo "${FULL_COLOR}${F_C}${F_C}${F_C}${HALF_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${normal}"
+    ;;
+    5*)
+      echo "${FULL_COLOR}${F_C}${F_C}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${normal}"
+    ;;
+    4*)
+      echo "${FULL_COLOR}${F_C}${F_C}${HALF_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${normal}"
+    ;;
+    3*)
+      echo "${FULL_COLOR}${F_C}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    2*)
+      echo "${FULL_COLOR}${F_C}${HALF_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    1*)
+      echo "${FULL_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    05)
+      echo "${DANGER_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    04)
+      echo "${DANGER_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    03)
+      echo "${DANGER_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    02)
+      echo "${DANGER_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    0*)
+      echo "${HALF_COLOR}${F_C}${DEPLETED_COLOR}${D_C}${D_C}${D_C}${D_C}${normal}"
+    ;;
+    *)
+      echo "${DANGER_COLOR}UNPLG${normal}"
+    ;;
+  esac
 }
diff --git a/plugins/available/blesh.plugin.bash b/plugins/available/blesh.plugin.bash
index 6acd19ff..7b1ce74e 100644
--- a/plugins/available/blesh.plugin.bash
+++ b/plugins/available/blesh.plugin.bash
@@ -10,7 +10,7 @@ fi
 _bash_it_ble_path=${XDG_DATA_HOME:-$HOME/.local/share}/blesh/ble.sh
 if [[ -f $_bash_it_ble_path ]]; then
 	# shellcheck disable=1090
-	source "$_bash_it_ble_path" --attach=prompt
+	source "$_bash_it_ble_path"
 else
 	_log_error "Could not find ble.sh in $_bash_it_ble_path"
 	_log_error "Please install using the following command:"
diff --git a/plugins/available/brew.plugin.bash b/plugins/available/brew.plugin.bash
new file mode 100644
index 00000000..dfeadcf2
--- /dev/null
+++ b/plugins/available/brew.plugin.bash
@@ -0,0 +1,27 @@
+# plugin for brew
+
+cite about-plugin
+about-plugin 'brew plugin for Linux'
+
+# linuxbrew
+
+if [[ -e "${HOME}/.linuxbrew/bin" ]]; then
+
+  # load plenv bin dir into path if it exists
+  pathmunge "${HOME}/.linuxbrew/bin"
+
+fi
+
+if [[ $(which brew) ]]; then
+
+  # init brew
+  #eval "$(brew shellenv)"
+
+  eval $(brew shellenv)
+  # export HOMEBREW_PREFIX="/home/ivan/developer/env/linuxbrew"
+  # export HOMEBREW_CELLAR="/home/ivan/developer/env/linuxbrew/Cellar"
+  # export HOMEBREW_REPOSITORY="/home/ivan/developer/env/linuxbrew/Homebrew"
+  # export PATH="${PATH}:/home/ivan/developer/env/linuxbrew/bin:/home/ivan/developer/env/linuxbrew/sbin"
+  # export MANPATH="/home/ivan/developer/env/linuxbrew/share/man${MANPATH+:$MANPATH}:"
+  # export INFOPATH="/home/ivan/developer/env/linuxbrew/share/info:${INFOPATH:-}"
+fi
diff --git a/plugins/available/cabal.plugin.bash b/plugins/available/cabal.plugin.bash
new file mode 100644
index 00000000..63e9f7f5
--- /dev/null
+++ b/plugins/available/cabal.plugin.bash
@@ -0,0 +1,26 @@
+cite about-plugin
+about-plugin 'load pyenv, if you are using it'
+
+export PYENV_ROOT="$HOME/.pyenv"
+pathmunge "$PYENV_ROOT/bin"
+
+[[ `which pyenv 2>/dev/null` ]] && eval "$(pyenv init - bash)"
+
+#Load pyenv virtualenv if the virtualenv plugin is installed.
+if pyenv virtualenv-init - &> /dev/null; then
+  eval "$(pyenv virtualenv-init - bash)"
+fi
+about-plugin 'Load cabal Development Kit Manager'
+# cabal
+
+if [ -d "/opt/cabal/bin" ]; then
+  export PATH=/opt/cabal/bin:$PATH
+fi
+
+if [ -d "/opt/ghc/bin" ]; then
+  export PATH=/opt/ghc/bin:$PATH
+fi
+
+if [ -d "$HOME/.cabal/bin" ]; then
+  export PATH=$HOME/.cabal/bin:$PATH
+fi
diff --git a/plugins/available/cmd-returned-notify.plugin.bash b/plugins/available/cmd-returned-notify.plugin.bash
index 88c07722..d9be5e4e 100644
--- a/plugins/available/cmd-returned-notify.plugin.bash
+++ b/plugins/available/cmd-returned-notify.plugin.bash
@@ -2,15 +2,15 @@
 cite about-plugin
 about-plugin 'Alert (BEL) when process ends after a threshold of seconds'
 
-function precmd_return_notification() {
-	local command_start="${COMMAND_DURATION_START_SECONDS:=0}"
-	local current_time="${EPOCHREALTIME:-$SECONDS}"
-	local -i command_duration="$((${current_time%.*} - ${command_start%.*}))"
-	if [[ "${command_duration}" -gt "${NOTIFY_IF_COMMAND_RETURNS_AFTER:-5}" ]]; then
-		printf '\a'
-	fi
-	return 0
+precmd_return_notification() {
+	export LAST_COMMAND_DURATION=$(($(date +%s) - ${LAST_COMMAND_TIME:=$(date +%s)}))
+	[[ ${LAST_COMMAND_DURATION} -gt ${NOTIFY_IF_COMMAND_RETURNS_AFTER:-5} ]] && echo -e "\a"
+	export LAST_COMMAND_TIME=
 }
 
-safe_append_prompt_command 'precmd_return_notification'
-safe_append_preexec '_command_duration_pre_exec'
+preexec_return_notification() {
+	[[ -z "${LAST_COMMAND_TIME}" ]] && LAST_COMMAND_TIME=$(date +%s)
+}
+
+precmd_functions+=(precmd_return_notification)
+preexec_functions+=(preexec_return_notification)
diff --git a/plugins/available/dart.plugin.bash b/plugins/available/dart.plugin.bash
new file mode 100644
index 00000000..0bc9910e
--- /dev/null
+++ b/plugins/available/dart.plugin.bash
@@ -0,0 +1,7 @@
+cite about-plugin
+about-plugin 'Load Dart interpreter'
+
+export PATH="$PATH":"$HOME/.pub-cache/bin"
+# if [ -e "/usr/lib/dart/bin" ]; then
+#   pathmunge "/usr/lib/dart/bin"
+# fi
diff --git a/plugins/available/dirs.plugin.bash b/plugins/available/dirs.plugin.bash
index 55d2e88a..2c1adf7a 100644
--- a/plugins/available/dirs.plugin.bash
+++ b/plugins/available/dirs.plugin.bash
@@ -1,4 +1,3 @@
-# shellcheck shell=bash
 # Directory stack navigation:
 #
 # Add to stack with: pu /path/to/directory
@@ -33,90 +32,76 @@ alias pu="pushd"
 alias po="popd"
 
 function dirs-help() {
-	about 'directory navigation alias usage'
-	group 'dirs'
-
-	echo "Directory Navigation Alias Usage"
-	echo
-	echo "Use the power of directory stacking to move"
-	echo "between several locations with ease."
-	echo
-	echo "d	: Show directory stack."
-	echo "po	: Remove current location from stack."
-	echo "pc	: Adds current location to stack."
-	echo "pu <dir>: Adds given location to stack."
-	echo "1	: Change to stack location 1."
-	echo "2	: Change to stack location 2."
-	echo "3	: Change to stack location 3."
-	echo "4	: Change to stack location 4."
-	echo "5	: Change to stack location 5."
-	echo "6	: Change to stack location 6."
-	echo "7	: Change to stack location 7."
-	echo "8	: Change to stack location 8."
-	echo "9	: Change to stack location 9."
+  about 'directory navigation alias usage'
+  group 'dirs'
+
+  echo "Directory Navigation Alias Usage"
+  echo
+  echo "Use the power of directory stacking to move"
+  echo "between several locations with ease."
+  echo
+  echo "d	: Show directory stack."
+  echo "po	: Remove current location from stack."
+  echo "pc	: Adds current location to stack."
+  echo "pu <dir>: Adds given location to stack."
+  echo "1	: Change to stack location 1."
+  echo "2	: Change to stack location 2."
+  echo "3	: Change to stack location 3."
+  echo "4	: Change to stack location 4."
+  echo "5	: Change to stack location 5."
+  echo "6	: Change to stack location 6."
+  echo "7	: Change to stack location 7."
+  echo "8	: Change to stack location 8."
+  echo "9	: Change to stack location 9."
 }
 
 # Add bookmarking functionality
 # Usage:
 
-: "${BASH_IT_DIRS_BKS:=${XDG_STATE_HOME:-${HOME}/.local/state}/bash_it/dirs}"
-if [[ -f "${BASH_IT_DIRS_BKS?}" ]]; then
-	# shellcheck disable=SC1090
-	source "${BASH_IT_DIRS_BKS?}"
+if [ ! -f ~/.dirs ]; then  # if doesn't exist, create it
+    touch ~/.dirs
 else
-	mkdir -p "${BASH_IT_DIRS_BKS%/*}"
-	if [[ -f ~/.dirs ]]; then
-		mv -vn ~/.dirs "${BASH_IT_DIRS_BKS?}"
-		# shellcheck disable=SC1090
-		source "${BASH_IT_DIRS_BKS?}"
-	else
-		touch "${BASH_IT_DIRS_BKS?}"
-	fi
+    source ~/.dirs
 fi
 
-alias L='cat "${BASH_IT_DIRS_BKS?}"'
+alias L='cat ~/.dirs'
 
 # Goes to destination dir, otherwise stay in the dir
-function G() {
-	about 'goes to destination dir'
-	param '1: directory'
-	example '$ G ..'
-	group 'dirs'
+G () {
+    about 'goes to destination dir'
+    param '1: directory'
+    example '$ G ..'
+    group 'dirs'
 
-	cd "${1:-${PWD}}" || return
+    cd "${1:-${PWD}}" ;
 }
 
-function S() {
-	about 'save a bookmark'
-	param '1: bookmark name'
-	example '$ S mybkmrk'
-	group 'dirs'
-
-	[[ $# -eq 1 ]] || {
-		echo "${FUNCNAME[0]} function requires 1 argument"
-		return 1
-	}
-
-	sed "/$1/d" "${BASH_IT_DIRS_BKS?}" > "${BASH_IT_DIRS_BKS?}.new"
-	command mv "${BASH_IT_DIRS_BKS?}.new" "${BASH_IT_DIRS_BKS?}"
-	echo "$1"=\""${PWD}"\" >> "${BASH_IT_DIRS_BKS?}"
-	# shellcheck disable=SC1090
-	source "${BASH_IT_DIRS_BKS?}"
+S () {
+    about 'save a bookmark'
+    param '1: bookmark name'
+    example '$ S mybkmrk'
+    group 'dirs'
+
+    [[ $# -eq 1 ]] || { echo "${FUNCNAME[0]} function requires 1 argument"; return 1; }
+
+    sed "/$@/d" ~/.dirs > ~/.dirs1;
+    \mv ~/.dirs1 ~/.dirs;
+    echo "$@"=\""${PWD}"\" >> ~/.dirs;
+    source ~/.dirs ;
 }
 
-function R() {
-	about 'remove a bookmark'
-	param '1: bookmark name'
-	example '$ R mybkmrk'
-	group 'dirs'
+R () {
+    about 'remove a bookmark'
+    param '1: bookmark name'
+    example '$ R mybkmrk'
+    group 'dirs'
 
-	[[ $# -eq 1 ]] || {
-		echo "${FUNCNAME[0]} function requires 1 argument"
-		return 1
-	}
+    [[ $# -eq 1 ]] || { echo "${FUNCNAME[0]} function requires 1 argument"; return 1; }
 
-	sed "/$1/d" "${BASH_IT_DIRS_BKS?}" > "${BASH_IT_DIRS_BKS?}.new"
-	command mv "${BASH_IT_DIRS_BKS?}.new" "${BASH_IT_DIRS_BKS?}"
+    sed "/$@/d" ~/.dirs > ~/.dirs1;
+    \mv ~/.dirs1 ~/.dirs;
 }
 
-alias U='source "${BASH_IT_DIRS_BKS?}"' # Update bookmark stack
+alias U='source ~/.dirs' 	# Update bookmark stack
+# Set the Bash option so that no '$' is required when using the above facility
+shopt -s cdable_vars
diff --git a/plugins/available/fzf.plugin.bash b/plugins/available/fzf.plugin.bash
index 21182ac2..c4f5ea84 100644
--- a/plugins/available/fzf.plugin.bash
+++ b/plugins/available/fzf.plugin.bash
@@ -4,15 +4,14 @@
 cite about-plugin
 about-plugin 'load fzf, if you are using it'
 
+_command_exists fzf || return
+
 if [ -r ~/.fzf.bash ] ; then
   source ~/.fzf.bash
 elif [ -r "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ] ; then
   source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash
 fi
 
-# No need to continue if the command is not present
-_command_exists fzf || return
-
 if [ -z ${FZF_DEFAULT_COMMAND+x}  ] && _command_exists fd ; then
   export FZF_DEFAULT_COMMAND='fd --type f'
 fi
diff --git a/plugins/available/ghcup.plugin.bash b/plugins/available/ghcup.plugin.bash
new file mode 100644
index 00000000..450c9863
--- /dev/null
+++ b/plugins/available/ghcup.plugin.bash
@@ -0,0 +1,10 @@
+cite about-plugin
+about-plugin 'load ghcup, if you are using it'
+
+export GHCUP_ROOT="$HOME/.ghcup"
+pathmunge "$GHCUP_ROOT/bin"
+
+if [ -f "/home/ivan/.ghcup/env" ]; then
+    source "/home/ivan/.ghcup/env"
+fi
+
diff --git a/plugins/available/gif.plugin.bash b/plugins/available/gif.plugin.bash
index a04ff5c7..49c36e4c 100644
--- a/plugins/available/gif.plugin.bash
+++ b/plugins/available/gif.plugin.bash
@@ -1,4 +1,4 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'video to gif, gif to WebM helper functions'
 
 # Based loosely on:
@@ -12,310 +12,287 @@ about-plugin 'video to gif, gif to WebM helper functions'
 # Optional: if lossy is not important, Ubuntu has gifsicle packaged for apt-get, instead of giflossy
 # Optional: gifski (from `brew install gifski` or github.com/ImageOptim/gifski)
 #           for high quality huge files.
-function v2gif() {
-	about 'Converts a .mov/.avi/.mp4 file into an into an animated GIF.'
-	group 'gif'
-	param '1: MOV/AVI/MP4 file name(s)'
-	param '2: -w <num> ; Optional: max width in pixels'
-	param '3: -l <num> ; Optional: extra lossy level for smaller files (80-200 make sense, needs giflossy instead of gifsicle)'
-	param '4: -h       ; Optional: high quality using gifski (installed seperately) - overrides "--lossy" above!'
-	param '5: -d       ; Optional: delete the original video file if succeeded'
-	param '6: -t       ; Optional: Tag the result with quality stamp for comparison use'
-	param '7: -f <num> ; Optional: Change number of frames per second (default 10 or original FPS if mediainfo installed)'
-	param '8: -a <num> ; Optional: Alert if resulting file is over <num> kilobytes (default is 5000, 0 turns off)'
-	param '9: -m       ; Optional: Also create a WebM file (will one day replace GIF, Smaller and higher quality than mp4)'
-	example '$ v2gif foo.mov'
-	example '$ v2gif foo.mov -w 600'
-	example '$ v2gif -l 100 -d *.mp4'
-	example '$ v2gif -dh *.avi'
-	example '$ v2gif -thw 600 *.avi *.mov'
-
-	local convert ffmpeg mediainfo gifsicle getopt args gifski out_size
-
-	convert="$(type -p convert)"
-	[[ -x "$convert" ]] || {
-		echo "No convert found!"
-		return 2
-	}
-	ffmpeg="$(type -p ffmpeg)"
-	[[ -x "$ffmpeg" ]] || {
-		echo "No ffmpeg found!"
-		return 2
-	}
-	mediainfo="$(type -p mediainfo)"
-	[[ -x "$mediainfo" ]] || {
-		echo "No mediainfo found!"
-		return 2
-	}
-	gifsicle="$(type -p gifsicle)"
-	[[ -x "$gifsicle" ]] || {
-		echo "No gifsicle found!"
-		return 2
-	}
-	getopt="$(type -p getopt)"
-
-	if [[ "$OSTYPE" == "darwin"* ]]; then
-		# Getopt on BSD is incompatible with GNU
-		getopt=/usr/local/opt/gnu-getopt/bin/getopt
-		[[ -x "$getopt" ]] || {
-			echo "No GNU-getopt found!"
-			return 2
-		}
-	fi
-
-	# Parse the options
-	args=$("$getopt" -l "alert:" -l "lossy:" -l "width:" -l del,delete -l high -l tag -l "fps:" -l webm -o "a:l:w:f:dhmt" -- "$@") || {
-		echo 'Terminating...' >&2
-		return 2
-	}
-
-	eval set -- "$args"
-	local use_gifski=""
-	local opt_del_after=""
-	local maxsize=""
-	local lossiness=""
-	local maxwidthski=""
-	local giftagopt=""
-	local giftag=""
-	local defaultfps=10
-	local infps=""
-	local fps=""
-	local make_webm=""
-	local alert=5000
-	while [[ $# -ge 1 ]]; do
-		case "$1" in
-			--)
-				# No more options left.
-				shift
-				break
-				;;
-			-d | --del | --delete)
-				# Delete after
-				opt_del_after="true"
-				shift
-				;;
-			-h | --high)
-				#High Quality, use gifski
-				gifski="$(type -p gifski)"
-				[[ -x "$gifski" ]] || {
-					echo "No gifski found!"
-					return 2
-				}
-				use_gifski=true
-				giftag="${giftag}-h"
-				shift
-				;;
-			-w | --width)
-				maxsize="-vf scale=$2:-1"
-				maxwidthski="-W $2"
-				giftag="${giftag}-w$2"
-				shift 2
-				;;
-			-t | --tag)
-				# mark with a quality tag
-				giftagopt="true"
-				shift
-				;;
-			-l | --lossy)
-				# Use giflossy parameter
-				lossiness="--lossy=$2"
-				giftag="${giftag}-l$2"
-				shift 2
-				;;
-			-f | --fps)
-				# select fps
-				infps="$2"
-				giftag="${giftag}-f$2"
-				shift 2
-				;;
-			-a | --alert)
-				# set size alert
-				alert="$2"
-				shift 2
-				;;
-			-m | --webm)
-				# set size alert
-				make_webm="true"
-				shift
-				;;
-		esac
-	done
-
-	if [[ -z "$*" ]]; then
-		echo "$(tput setaf 1)No input files given. Example: v2gif file [file...] [-w <max width (pixels)>] [-l <lossy level>] $(tput sgr 0)"
-		echo "-d/--del/--delete Delete original vid if done suceessfully (and file not over the size limit)"
-		echo "-h/--high         High Quality - use Gifski instead of gifsicle"
-		echo "-w/--width N      Lock maximum gif width to N pixels, resize if necessary"
-		echo "-t/--tag          Add a tag to the output gif describing the options used (useful for comparing several options)"
-		echo "-l/--lossy N      Use the Giflossy parameter for gifsicle (If your version supports it)"
-		echo "-f/--fps N        Override autodetection of incoming vid FPS (useful for downsampling)"
-		echo "-a/--alert N      Alert if over N kilobytes (Defaults to 5000)"
-		echo "-m/--webm         Also create a webm file"
-		return 1
-	fi
-
-	# Prepare the quality tag if requested.
-	[[ -z "$giftag" ]] && giftag="-default"
-	[[ -z "$giftagopt" ]] && giftag=""
-
-	for file; do
-
-		local output_file="${file%.*}${giftag}.gif"
-		local del_after=$opt_del_after
-
-		if [[ -n "$make_webm" ]]; then
-			$ffmpeg -loglevel panic -i "$file" \
-				-c:v libvpx -crf 4 -threads 0 -an -b:v 2M -auto-alt-ref 0 \
-				-quality best -loop 0 "${file%.*}.webm" || return 2
-		fi
-
-		# Set FPS to match the video if possible, otherwise fallback to default.
-		if [[ -n "$infps" ]]; then
-			fps=$infps
-		else
-			fps=$defaultfps
-			if [[ -x "$mediainfo" ]]; then
-				fps=$($mediainfo "$file" | grep "Frame rate   " | sed 's/.*: \([0-9.]\+\) .*/\1/' | head -1)
-				[[ -z "$fps" ]] && fps=$($mediainfo "$file" | grep "Minimum frame rate" | sed 's/.*: \([0-9.]\+\) .*/\1/' | head -1)
-			fi
-		fi
-
-		echo "$(tput setaf 2)Creating '$output_file' at $fps FPS ...$(tput sgr 0)"
-
-		if [[ "$use_gifski" = "true" ]]; then
-			# I trust @pornel to do his own resizing optimization choices
-			$ffmpeg -loglevel panic -i "$file" -r "$fps" -vcodec png v2gif-tmp-%05d.png \
-				&& $gifski v2gif-tmp-*.png "$maxwidthski" --fps "$(printf "%.0f" "$fps")" -o "$output_file" || return 2
-		else
-			$ffmpeg -loglevel panic -i "$file" "$maxsize" -r "$fps" -vcodec png v2gif-tmp-%05d.png \
-				&& $convert +dither -layers Optimize v2gif-tmp-*.png GIF:- \
-				| $gifsicle "$lossiness" --no-warnings --colors 256 --delay="$(echo "100/$fps" | bc)" --loop --optimize=3 --multifile - > "$output_file" || return 2
-		fi
-
-		rm v2gif-tmp-*.png
-
-		# Checking if the file is bigger than Twitter likes and warn
-		if [[ $alert -gt 0 ]]; then
-			out_size=$(wc --bytes < "$output_file")
-			if [[ $out_size -gt $((alert * 1000)) ]]; then
-				echo "$(tput setaf 3)Warning: '$output_file' is $((out_size / 1000))kb.$(tput sgr 0)"
-				[[ "$del_after" == "true" ]] && echo "$(tput setaf 3)Warning: Keeping '$file' even though --del requested.$(tput sgr 0)"
-				del_after=""
-			fi
-		fi
-
-		[[ "$del_after" = "true" ]] && rm "$file"
-
-	done
-
-	echo "$(tput setaf 2)Done.$(tput sgr 0)"
+function v2gif {
+  about 'Converts a .mov/.avi/.mp4 file into an into an animated GIF.'
+  group 'gif'
+  param '1: MOV/AVI/MP4 file name(s)'
+  param '2: -w <num> ; Optional: max width in pixels'
+  param '3: -l <num> ; Optional: extra lossy level for smaller files (80-200 make sense, needs giflossy instead of gifsicle)'
+  param '4: -h       ; Optional: high quality using gifski (installed seperately) - overrides "--lossy" above!'
+  param '5: -d       ; Optional: delete the original video file if succeeded'
+  param '6: -t       ; Optional: Tag the result with quality stamp for comparison use'
+  param '7: -f <num> ; Optional: Change number of frames per second (default 10 or original FPS if mediainfo installed)'
+  param '8: -a <num> ; Optional: Alert if resulting file is over <num> kilobytes (default is 5000, 0 turns off)'
+  param '9: -m       ; Optional: Also create a WebM file (will one day replace GIF, Smaller and higher quality than mp4)'
+  example '$ v2gif foo.mov'
+  example '$ v2gif foo.mov -w 600'
+  example '$ v2gif -l 100 -d *.mp4'
+  example '$ v2gif -dh *.avi'
+  example '$ v2gif -thw 600 *.avi *.mov'
+
+  local convert=$(which convert)     ; [[ -x "$convert" ]]   || { echo "No convert found!" ; return 2 ;}
+  local ffmpeg=$(which ffmpeg)       ; [[ -x "$ffmpeg" ]]    || { echo "No ffmpeg found!" ; return 2 ;}
+  local mediainfo=$(which mediainfo) ; [[ -x "$mediainfo" ]] || { echo "No mediainfo found!" ; return 2 ;}
+  local gifsicle=$(which gifsicle)   ; [[ -x "$gifsicle" ]]  || { echo "No gifsicle found!" ; return 2 ;}
+  local getopt=$(which getopt)
+
+  if [[ "$OSTYPE" == "darwin"* ]] ; then
+  # Getopt on BSD is incompatible with GNU
+    getopt=/usr/local/opt/gnu-getopt/bin/getopt
+    [[ -x "$getopt" ]] || { echo "No GNU-getopt found!" ; return 2 ;}
+  fi
+
+  # Parse the options
+  local args=$($getopt -l "alert:" -l "lossy:" -l "width:" -l del,delete -l high -l tag -l "fps:" -l webm -o "a:l:w:f:dhmt" -- "$@")
+
+  if [ $? -ne 0 ]; then
+    echo 'Terminating...' >&2
+    return 2
+  fi
+
+  eval set -- "$args"
+  local use_gifski=""
+  local opt_del_after=""
+  local maxsize=""
+  local lossiness=""
+  local maxwidthski=""
+  local giftagopt=""
+  local giftag=""
+  local defaultfps=10
+  local infps=""
+  local fps=""
+  local make_webm=""
+  local alert=5000
+  while [ $# -ge 1 ]; do
+    case "$1" in
+      --)
+        # No more options left.
+        shift
+        break
+        ;;
+      -d|--del|--delete)
+        # Delete after
+        opt_del_after="true"
+        shift
+        ;;
+      -h|--high)
+        #High Quality, use gifski
+        local gifski=$(which gifski) ; [[ -x "$gifski" ]] || { echo "No gifski found!" ; return 2 ; }
+        use_gifski=true
+        giftag="${giftag}-h"
+        shift
+        ;;
+      -w|--width)
+        maxsize="-vf scale=$2:-1"
+        maxwidthski="-W $2"
+        giftag="${giftag}-w$2"
+        shift 2
+        ;;
+      -t|--tag)
+        # mark with a quality tag
+        giftagopt="true"
+        shift
+        ;;
+      -l|--lossy)
+        # Use giflossy parameter
+        lossiness="--lossy=$2"
+        giftag="${giftag}-l$2"
+        shift 2
+        ;;
+      -f|--fps)
+        # select fps
+        infps="$2"
+        giftag="${giftag}-f$2"
+        shift 2
+        ;;
+      -a|--alert)
+        # set size alert
+        alert="$2"
+        shift 2
+        ;;
+      -m|--webm)
+        # set size alert
+        make_webm="true"
+        shift
+        ;;
+    esac
+  done
+
+  if [[ -z "$*" ]]; then
+    echo "$(tput setaf 1)No input files given. Example: v2gif file [file...] [-w <max width (pixels)>] [-l <lossy level>] $(tput sgr 0)"
+    echo "-d/--del/--delete Delete original vid if done suceessfully (and file not over the size limit)"
+    echo "-h/--high         High Quality - use Gifski instead of gifsicle"
+    echo "-w/--width N      Lock maximum gif width to N pixels, resize if necessary"
+    echo "-t/--tag          Add a tag to the output gif describing the options used (useful for comparing several options)"
+    echo "-l/--lossy N      Use the Giflossy parameter for gifsicle (If your version supports it)"
+    echo "-f/--fps N        Override autodetection of incoming vid FPS (useful for downsampling)"
+    echo "-a/--alert N      Alert if over N kilobytes (Defaults to 5000)"
+    echo "-m/--webm         Also create a webm file"
+    return 1
+  fi
+
+  # Prepare the quality tag if requested.
+  [[ -z "$giftag" ]] && giftag="-default"
+  [[ -z "$giftagopt" ]] && giftag=""
+
+  for file ; do
+
+    local output_file="${file%.*}${giftag}.gif"
+    local del_after=$opt_del_after
+
+    if [[ "$make_webm" ]] ; then
+      $ffmpeg -loglevel panic -i "$file" \
+        -c:v libvpx -crf 4 -threads 0 -an -b:v 2M -auto-alt-ref 0 \
+        -quality best -loop 0 "${file%.*}.webm" || return 2
+    fi
+
+    # Set FPS to match the video if possible, otherwise fallback to default.
+    if [[ "$infps" ]] ; then
+      fps=$infps
+    else
+      fps=$defaultfps
+      if [[ -x $mediainfo ]] ; then
+        fps=$($mediainfo "$file" | grep "Frame rate   " |sed 's/.*: \([0-9.]\+\) .*/\1/' | head -1)
+        [[ -z "$fps" ]] && fps=$($mediainfo "$file" | grep "Minimum frame rate" |sed 's/.*: \([0-9.]\+\) .*/\1/' | head -1)
+      fi
+    fi
+
+    echo "$(tput setaf 2)Creating '$output_file' at $fps FPS ...$(tput sgr 0)"
+
+    if [[ "$use_gifski" = "true" ]] ; then
+      # I trust @pornel to do his own resizing optimization choices
+      $ffmpeg -loglevel panic -i "$file" -r $fps -vcodec png v2gif-tmp-%05d.png && \
+        $gifski v2gif-tmp-*.png $maxwidthski --fps $(printf "%.0f" $fps) -o "$output_file" || return 2
+    else
+      $ffmpeg -loglevel panic -i "$file" $maxsize -r $fps -vcodec png v2gif-tmp-%05d.png && \
+        $convert +dither -layers Optimize v2gif-tmp-*.png GIF:- | \
+        $gifsicle $lossiness --no-warnings --colors 256 --delay=$(echo "100/$fps"|bc) --loop --optimize=3 --multifile - > "$output_file" || return 2
+    fi
+
+    rm v2gif-tmp-*.png
+
+    # Checking if the file is bigger than Twitter likes and warn
+    if [[ $alert -gt 0 ]] ; then
+      local out_size=$(wc --bytes < "$output_file")
+      if [[ $out_size -gt $(( alert * 1000 )) ]] ; then
+        echo "$(tput setaf 3)Warning: '$output_file' is $((out_size/1000))kb.$(tput sgr 0)"
+        [[ "$del_after" == "true" ]] && echo "$(tput setaf 3)Warning: Keeping '$file' even though --del requested.$(tput sgr 0)"
+        del_after=""
+      fi
+    fi
+
+    [[ "$del_after" = "true" ]] && rm "$file"
+
+  done
+
+  echo "$(tput setaf 2)Done.$(tput sgr 0)"
 }
 
 function any2webm() {
-	about 'Converts an movies and Animated GIF files into an into a modern quality WebM video.'
-	group 'gif'
-	param '1: GIF/video file name(s)'
-	param '2: -s <WxH> ; Optional: set <W>idth and <H>eight in pixels'
-	param '3: -d       ; Optional: delete the original file if succeeded'
-	param '4: -t       ; Optional: Tag the result with quality stamp for comparison use'
-	param '5: -f <num> ; Optional: Change number of frames per second'
-	param '6: -b <num> ; Optional: Set Bandwidth (quality/size of resulting file), Defaults to 2M (bits/sec, accepts fractions)"'
-	param '7: -a <num> ; Optional: Alert if resulting file is over <num> kilobytes (default is 5000, 0 turns off)'
-	example '$ any2webm foo.gif'
-	example '$ any2webm *.mov -b 1.5M -s 600x480'
-
-	local args out_size
-
-	# Parse the options
-	args=$(getopt -l alert -l "bandwidth:" -l "width:" -l del,delete -l tag -l "fps:" -l webm -o "a:b:w:f:dt" -- "$@") || {
-		echo 'Terminating...' >&2
-		return 2
-	}
-
-	eval set -- "$args"
-	local opt_del_after=""
-	local size=""
-	local webmtagopt=""
-	local webmtag=""
-	local defaultfps=10
-	local fps=""
-	local bandwidth="2M"
-	local alert=5000
-	while [[ $# -ge 1 ]]; do
-		case "$1" in
-			--)
-				# No more options left.
-				shift
-				break
-				;;
-			-d | --del | --delete)
-				# Delete after
-				opt_del_after="true"
-				shift
-				;;
-			-s | --size)
-				size="-s $2"
-				webmtag="${webmtag}-s$2"
-				shift 2
-				;;
-			-t | --tag)
-				# mark with a quality tag
-				webmtagopt="true"
-				shift
-				;;
-			-f | --fps)
-				# select fps
-				fps="-r $2"
-				webmtag="${webmtag}-f$2"
-				shift 2
-				;;
-			-b | --bandwidth)
-				# select bandwidth
-				bandwidth="$2"
-				webmtag="${webmtag}-b$2"
-				shift 2
-				;;
-			-a | --alert)
-				# set size alert
-				alert="$2"
-				shift 2
-				;;
-		esac
-	done
-
-	if [[ -z "$*" ]]; then
-		echo "$(tput setaf 1)No input files given. Example: any2webm file [file...] [-w <max width (pixels)>] < $(tput sgr 0)"
-		return 1
-	fi
-
-	# Prepare the quality tag if requested.
-	[[ -z "$webmtag" ]] && webmtag="-default"
-	[[ -z "$webmtagopt" ]] && webmtag=""
-
-	for file; do
-
-		local output_file="${file%.*}${webmtag}.webm"
-		local del_after=$opt_del_after
-
-		echo "$(tput setaf 2)Creating '$output_file' ...$(tput sgr 0)"
-
-		$ffmpeg -loglevel panic -i "$file" \
-			-c:v libvpx -crf 4 -threads 0 -an -b:v "$bandwidth" -auto-alt-ref 0 \
-			-quality best "$fps" "$size" -loop 0 -pix_fmt yuva420p "$output_file" || return 2
-
-		# Checking if the file is bigger than Twitter likes and warn
-		if [[ $alert -gt 0 ]]; then
-			out_size=$(wc --bytes < "$output_file")
-			if [[ $out_size -gt $((alert * 1000)) ]]; then
-				echo "$(tput setaf 3)Warning: '$output_file' is $((out_size / 1000))kb.$(tput sgr 0)"
-				[[ "$del_after" == "true" ]] && echo "$(tput setaf 3)Warning: Keeping '$file' even though --del requested.$(tput sgr 0)"
-				del_after=""
-			fi
-		fi
-
-		[[ "$del_after" = "true" ]] && rm "$file"
-
-	done
-
-	echo "$(tput setaf 2)Done.$(tput sgr 0)"
+  about 'Converts an movies and Animated GIF files into an into a modern quality WebM video.'
+  group 'gif'
+  param '1: GIF/video file name(s)'
+  param '2: -s <WxH> ; Optional: set <W>idth and <H>eight in pixels'
+  param '3: -d       ; Optional: delete the original file if succeeded'
+  param '4: -t       ; Optional: Tag the result with quality stamp for comparison use'
+  param '5: -f <num> ; Optional: Change number of frames per second'
+  param '6: -b <num> ; Optional: Set Bandwidth (quality/size of resulting file), Defaults to 2M (bits/sec, accepts fractions)"'
+  param '7: -a <num> ; Optional: Alert if resulting file is over <num> kilobytes (default is 5000, 0 turns off)'
+  example '$ any2webm foo.gif'
+  example '$ any2webm *.mov -b 1.5M -s 600x480'
+
+  # Parse the options
+  local args=$(getopt -l alert -l "bandwidth:" -l "width:" -l del,delete -l tag -l "fps:" -l webm -o "a:b:w:f:dt" -- "$@")
+
+  if [ $? -ne 0 ]; then
+    echo 'Terminating...' >&2
+    return 2
+  fi
+
+  eval set -- "$args"
+  local opt_del_after=""
+  local size=""
+  local webmtagopt=""
+  local webmtag=""
+  local defaultfps=10
+  local fps=""
+  local bandwidth="2M"
+  local alert=5000
+  while [ $# -ge 1 ]; do
+    case "$1" in
+      --)
+        # No more options left.
+        shift
+        break
+        ;;
+      -d|--del|--delete)
+        # Delete after
+        opt_del_after="true"
+        shift
+        ;;
+      -s|--size)
+        size="-s $2"
+        webmtag="${webmtag}-s$2"
+        shift 2
+        ;;
+      -t|--tag)
+        # mark with a quality tag
+        webmtagopt="true"
+        shift
+        ;;
+      -f|--fps)
+        # select fps
+        fps="-r $2"
+        webmtag="${webmtag}-f$2"
+        shift 2
+        ;;
+      -b|--bandwidth)
+        # select bandwidth
+        bandwidth="$2"
+        webmtag="${webmtag}-b$2"
+        shift 2
+        ;;
+      -a|--alert)
+        # set size alert
+        alert="$2"
+        shift 2
+        ;;
+    esac
+  done
+
+  if [[ -z "$*" ]]; then
+    echo "$(tput setaf 1)No input files given. Example: any2webm file [file...] [-w <max width (pixels)>] < $(tput sgr 0)"
+    return 1
+  fi
+
+  # Prepare the quality tag if requested.
+  [[ -z "$webmtag" ]] && webmtag="-default"
+  [[ -z "$webmtagopt" ]] && webmtag=""
+
+  for file ; do
+
+    local output_file="${file%.*}${webmtag}.webm"
+    local del_after=$opt_del_after
+
+    echo "$(tput setaf 2)Creating '$output_file' ...$(tput sgr 0)"
+
+    $ffmpeg -loglevel panic -i "$file" \
+      -c:v libvpx -crf 4 -threads 0 -an -b:v $bandwidth -auto-alt-ref 0 \
+      -quality best $fps $size -loop 0 -pix_fmt yuva420p "$output_file" || return 2
+
+    # Checking if the file is bigger than Twitter likes and warn
+    if [[ $alert -gt 0 ]] ; then
+      local out_size=$(wc --bytes < "$output_file")
+      if [[ $out_size -gt $(( alert * 1000 )) ]] ; then
+        echo "$(tput setaf 3)Warning: '$output_file' is $((out_size/1000))kb.$(tput sgr 0)"
+        [[ "$del_after" == "true" ]] && echo "$(tput setaf 3)Warning: Keeping '$file' even though --del requested.$(tput sgr 0)"
+        del_after=""
+      fi
+    fi
+
+    [[ "$del_after" = "true" ]] && rm "$file"
+
+  done
+
+  echo "$(tput setaf 2)Done.$(tput sgr 0)"
 }
diff --git a/plugins/available/git-subrepo.plugin.bash b/plugins/available/git-subrepo.plugin.bash
index 6eb8d7c4..085a69b4 100644
--- a/plugins/available/git-subrepo.plugin.bash
+++ b/plugins/available/git-subrepo.plugin.bash
@@ -1,7 +1,6 @@
-# shellcheck shell=bash
+# Load git-subrepo if you are using it, and initialize completions
+
+cite about-plugin
 about-plugin 'load git-subrepo if you are using it, and initialize completions'
 
-if [[ -s "${GIT_SUBREPO_ROOT:=$HOME/.git-subrepo}/init" ]]; then
-	# shellcheck disable=SC1091
-	source "$GIT_SUBREPO_ROOT/init"
-fi
+[[ -e "${GIT_SUBREPO_ROOT:=~/.git-subrepo}/init" ]] && source "$GIT_SUBREPO_ROOT/init"
diff --git a/plugins/available/goenv.plugin.bash b/plugins/available/goenv.plugin.bash
index 17e4a0ff..daa320e5 100644
--- a/plugins/available/goenv.plugin.bash
+++ b/plugins/available/goenv.plugin.bash
@@ -24,6 +24,10 @@ if ! _command_exists goenv && [[ -x "$GOENV_ROOT/bin/goenv" ]]; then
 	pathmunge "$GOENV_ROOT/bin"
 fi
 
+if test -d "$GOPATH/bin"; then
+    pathmunge "$GOPATH/bin"
+fi
+
 # Initialize goenv
 eval "$(goenv init - bash)"
 
diff --git a/plugins/available/gradle.plugin.bash b/plugins/available/gradle.plugin.bash
index 8dec1313..59050aee 100644
--- a/plugins/available/gradle.plugin.bash
+++ b/plugins/available/gradle.plugin.bash
@@ -1,12 +1,27 @@
 cite about-plugin
 about-plugin 'Add a gw command to use gradle wrapper if present, else use system gradle'
 
+v=7.0
+if [ -d "/opt/gradle/gradle-$v" ]; then
+  GRADLE_HOME=/opt/gradle/gradle-$v
+  export PATH=$PATH:$GRADLE_HOME/bin
+fi
+
 function gw() {
   local file="gradlew"
-  local result
+  local curr_path="${PWD}"
+  local result="gradle"
 
-  result="$(_bash-it-find-in-ancestor "${file}")"
+  # Search recursively upwards for file.
+  until [[ "${curr_path}" == "/" ]]; do
+    if [[ -e "${curr_path}/${file}" ]]; then
+      result="${curr_path}/${file}"
+      break
+    else
+      curr_path=$(dirname "${curr_path}")
+    fi
+  done
 
   # Call gradle
-  "${result:-gradle}" $*
+  "${result}" $*
 }
diff --git a/plugins/available/groovy.plugin.bash b/plugins/available/groovy.plugin.bash
new file mode 100644
index 00000000..4d5b3dc8
--- /dev/null
+++ b/plugins/available/groovy.plugin.bash
@@ -0,0 +1,10 @@
+cite about-plugin
+about-plugin 'enable groovy'
+
+# groovy
+if [ -d "/opt/groovy" ]; then
+  v=3.0.7
+  export GROOVY_HOME="/opt/groovy/groovy-${v}"
+  export PATH="$PATH:${GROOVY_HOME}/bin"
+fi
+
diff --git a/plugins/available/history-search.plugin.bash b/plugins/available/history-search.plugin.bash
index 96941993..ea02eb74 100644
--- a/plugins/available/history-search.plugin.bash
+++ b/plugins/available/history-search.plugin.bash
@@ -1,4 +1,5 @@
 # shellcheck shell=bash
+cite about-plugin
 about-plugin 'search history using the prefix already entered'
 
 # enter a few characters and press UpArrow/DownArrow
diff --git a/plugins/available/history-substring-search.plugin.bash b/plugins/available/history-substring-search.plugin.bash
index dde32720..e0e37f43 100644
--- a/plugins/available/history-substring-search.plugin.bash
+++ b/plugins/available/history-substring-search.plugin.bash
@@ -1,4 +1,5 @@
 # shellcheck shell=bash
+cite about-plugin
 about-plugin 'search history using the substring already entered'
 
 # enter a few characters and press UpArrow/DownArrow
diff --git a/plugins/available/history.plugin.bash b/plugins/available/history.plugin.bash
index d9e930c3..08ca8de6 100644
--- a/plugins/available/history.plugin.bash
+++ b/plugins/available/history.plugin.bash
@@ -1,26 +1,29 @@
 # shellcheck shell=bash
+cite about-plugin
 about-plugin 'improve history handling with sane defaults'
 
-# Append the history list to the file named by the value of the HISTFILE
-# variable when the shell exits, rather than overwriting the file.
+# append to bash_history if Terminal.app quits
 shopt -s histappend
 
-# 'ignorespace': don't save command lines which begin with a space to history
-# 'erasedups' (alternative 'ignoredups'): don't save duplicates to history
-# 'autoshare': automatically share history between multiple running shells
-: "${HISTCONTROL:=ignorespace:erasedups:autoshare}"
+# erase duplicates; alternative option: export HISTCONTROL=ignoredups
+export HISTCONTROL=${HISTCONTROL:-ignorespace:erasedups}
 
 # resize history to 100x the default (500)
-: "${HISTSIZE:=50000}"
+export HISTSIZE=${HISTSIZE:-50000}
 
-function top-history() {
+top-history() {
 	about 'print the name and count of the most commonly run tools'
 
-	# - Make sure formatting doesn't interfer with our parsing
-	# - Use awk to count how many times the first command on each line has been called
-	# - Truncate to 10 lines
-	# - Print in column format
-	HISTTIMEFORMAT='' history \
+	if [[ -n $HISTTIMEFORMAT ]]; then
+		# To parse history we need a predictable format, which HISTTIMEFORMAT
+		# gets in the way of. So we unset it and set a trap to guarantee the
+		# user's environment returns to normal even if the pipeline below fails.
+		# shellcheck disable=SC2064
+		trap "export HISTTIMEFORMAT='$HISTTIMEFORMAT'" RETURN
+		unset HISTTIMEFORMAT
+	fi
+
+	history \
 		| awk '{
 				a[$2]++
 			}END{
diff --git a/plugins/available/java.plugin.bash b/plugins/available/java.plugin.bash
index 2a80a99a..98e46247 100644
--- a/plugins/available/java.plugin.bash
+++ b/plugins/available/java.plugin.bash
@@ -1,11 +1,11 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'Java and JAR helper functions'
 
 function jar_manifest {
-	about "extracts the specified JAR file's MANIFEST file and prints it to stdout"
-	group 'java'
-	param '1: JAR file to extract the MANIFEST from'
-	example 'jar_manifest lib/foo.jar'
+  about "extracts the specified JAR file's MANIFEST file and prints it to stdout"
+  group 'java'
+  param '1: JAR file to extract the MANIFEST from'
+  example 'jar_manifest lib/foo.jar'
 
-	unzip -c "${1:?${FUNCNAME[0]}: JAR file must be specified}" META-INF/MANIFEST.MF
+  unzip -c $1 META-INF/MANIFEST.MF
 }
diff --git a/plugins/available/jbang.plugin.bash b/plugins/available/jbang.plugin.bash
new file mode 100644
index 00000000..d0cc3141
--- /dev/null
+++ b/plugins/available/jbang.plugin.bash
@@ -0,0 +1,10 @@
+# Load jbang, if you are using it
+
+cite about-plugin
+about-plugin 'load jbang, if you are using it'
+
+pathmunge "$HOME"/.jbang/bin
+# Add Jbang to environment
+# alias j!=jbang
+# export PATH="$HOME/.jbang/bin:$PATH"
+
diff --git a/plugins/available/jekyll.plugin.bash b/plugins/available/jekyll.plugin.bash
index d818b076..c340c432 100644
--- a/plugins/available/jekyll.plugin.bash
+++ b/plugins/available/jekyll.plugin.bash
@@ -1,288 +1,367 @@
-# shellcheck shell=bash
 cite about-plugin
 about-plugin 'manage your jekyll site'
 
-function editpost() {
-	about 'edit a post'
-	param '1: site directory'
-	group 'jekyll'
-
-	local SITE site POST DATE TITLE POSTS
-	local -i COUNTER=1 POST_TO_EDIT ret
-	if [[ -z "${1:-}" ]]; then
-		echo "Error: no site specified."
-		echo "The site is the name of the directory your project is in."
-		return 1
-	fi
-
-	for site in "${SITES[@]:-}"; do
-		if [[ "${site##*/}" == "$1" ]]; then
-			SITE="${site}"
-			break
-		fi
-	done
-
-	if [[ -z "${SITE:-}" ]]; then
-		echo "No such site."
-		return 1
-	fi
-
-	pushd "${SITE}/_posts" > /dev/null || return
-
-	for POST in *; do
-		DATE="$(echo "${POST}" | grep -oE "[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}")"
-		TITLE="$(grep -oE "title: (.+)" < "${POST}")"
-		TITLE="${TITLE/title: /}"
-		echo "${COUNTER}) 	${DATE}	${TITLE}"
-		POSTS[COUNTER]="$POST"
-		COUNTER="$((COUNTER + 1))"
-	done > >(less)
-	read -rp "Number of post to edit: " POST_TO_EDIT
-	"${JEKYLL_EDITOR:-${VISUAL:-${EDITOR:-${ALTERNATE_EDITOR:-nano}}}}" "${POSTS[POST_TO_EDIT]}"
-	ret="$?"
-	popd > /dev/null || return "$ret"
-	return "$ret"
+editpost() {
+  about 'edit a post'
+  param '1: site directory'
+  group 'jekyll'
+
+  unset SITE
+  if [ -z "$1" ]
+  then
+    echo "Error: no site specified."
+    echo "The site is the name of the directory your project is in."
+    return 1
+  fi
+
+  for site in ${SITES[@]}
+  do
+    if [ "${site##*/}" = "$1" ]
+    then
+      SITE=$site
+      break
+    fi
+  done
+
+  if [ -z "$SITE" ]
+  then
+    echo "No such site."
+    return 1
+  fi
+
+  builtin cd "$SITE/_posts"
+
+  COUNTER=1
+  NUMBER="$RANDOM"
+  TMPFILE="/tmp/editpost-$NUMBER"
+
+  for POST in *
+  do
+    DATE=`echo $POST | grep -oE "[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}"`
+    TITLE=`cat $POST | grep -oE "title: (.+)"`
+    TITLE=`echo $TITLE | sed 's/title: //'`
+    echo "$COUNTER) 	$DATE	$TITLE" >> "$TMPFILE"
+    POSTS[$COUNTER]=$POST
+    COUNTER=`expr $COUNTER + 1`
+  done
+  less $TMPFILE
+  read -p "Number of post to edit: " POST_TO_EDIT
+  if [ -z "$JEKYLL_EDITOR" ]
+  then
+    nano "${POSTS[$POST_TO_EDIT]}"
+  else
+    "$JEKYLL_EDITOR" "${POSTS[$POST_TO_EDIT]}"
+  fi
 }
 
-function newpost() {
-	about 'create a new post'
-	param '1: site directory'
-	group 'jekyll'
-
-	local SITE site FNAME_POST_TITLE FNAME YAML_DATE
-	local JEKYLL_FORMATTING FNAME_DATE OPTIONS OPTION POST_TYPE POST_TITLE
-	local -i loc=0 ret
-	if [[ -z "${1:-}" ]]; then
-		echo "Error: no site specified."
-		echo "The site is the name of the directory your project is in."
-		return 1
-	fi
-
-	if [[ -z "${SITE}" ]]; then
-		echo "No such site."
-		return 1
-	fi
-
-	for site in "${SITES[@]}"; do
-		if [[ "${site##*/}" == "$1" ]]; then
-			SITE="$site"
-			JEKYLL_FORMATTING="${MARKUPS[loc]}"
-			break
-		fi
-		loc=$((loc + 1))
-	done
-
-	# Change directory into the local jekyll root
-	pushd "${SITE}/_posts" > /dev/null || return
-
-	# Get the date for the new post's filename
-	FNAME_DATE="$(date "+%Y-%m-%d")"
-
-	# If the user is using markdown or textile formatting, let them choose what type of post they want. Sort of like Tumblr.
-	OPTIONS=('Text' 'Quote' 'Image' 'Audio' 'Video' 'Link')
-
-	if [[ $JEKYLL_FORMATTING == "markdown" || $JEKYLL_FORMATTING == "textile" ]]; then
-		select OPTION in "${OPTIONS[@]}"; do
-			POST_TYPE="${OPTION}"
-			break
-		done
-	fi
-
-	# Get the title for the new post
-	read -rp "Enter title of the new post: " POST_TITLE
-
-	# Convert the spaces in the title to hyphens for use in the filename
-	FNAME_POST_TITLE="${POST_TITLE/ /-}"
-
-	# Now, put it all together for the full filename
-	FNAME="$FNAME_DATE-$FNAME_POST_TITLE.$JEKYLL_FORMATTING"
-
-	# And, finally, create the actual post file. But we're not done yet...
-	{
-		# Write a little stuff to the file for the YAML Front Matter
-		echo "---"
-
-		# Now we have to get the date, again. But this time for in the header (YAML Front Matter) of the file
-		YAML_DATE="$(date "+%B %d %Y %X")"
-
-		# Echo the YAML Formatted date to the post file
-		echo "date: $YAML_DATE"
-
-		# Echo the original post title to the YAML Front Matter header
-		echo "title: $POST_TITLE"
-
-		# And, now, echo the "post" layout to the YAML Front Matter header
-		echo "layout: post"
-
-		# Close the YAML Front Matter Header
-		echo "---"
-
-		echo
-	} > "${FNAME}"
-
-	# Generate template text based on the post type
-	if [[ $JEKYLL_FORMATTING == "markdown" ]]; then
-		case $POST_TYPE in
-			"Text")
-				true
-				;;
-			"Quote")
-				echo "> Quote"
-				echo
-				echo "&mdash; Author"
-				;;
-			"Image")
-				echo "![Alternate Text](/path/to/image/or/url)"
-				;;
-			"Audio")
-				echo "<html><audio src=\"/path/to/audio/file\" controls=\"controls\"></audio></html>"
-				;;
-			"Video")
-				echo "<html><video src=\"/path/to/video\" controls=\"controls\"></video></html>"
-				;;
-			"Link")
-				echo "[link][1]"
-				echo
-				echo "> Quote"
-				echo
-				echo "[1]: url"
-				;;
-		esac
-	elif [[ $JEKYLL_FORMATTING == "textile" ]]; then
-		case $POST_TYPE in
-			"Text")
-				true
-				;;
-			"Quote")
-				echo "bq. Quote"
-				echo
-				echo "&mdash; Author"
-				;;
-			"Image")
-				echo "!url(alt text)"
-				;;
-			"Audio")
-				echo "<html><audio src=\"/path/to/audio/file\" controls=\"controls\"></audio></html>"
-				;;
-			"Video")
-				echo "<html><video src=\"/path/to/video\" controls=\"controls\"></video></html>"
-				;;
-			"Link")
-				echo "\"Site\":url"
-				echo
-				echo "bq. Quote"
-				;;
-		esac
-	fi >> "${FNAME}"
-
-	# Open the file in your favorite editor
-	"${JEKYLL_EDITOR:-${VISUAL:-${EDITOR:-${ALTERNATE_EDITOR:-nano}}}}" "${FNAME}"
-	ret="$?"
-	popd > /dev/null || return "$ret"
-	return "$ret"
+newpost() {
+  about 'create a new post'
+  param '1: site directory'
+  group 'jekyll'
+
+  unset SITE
+  if [ -z "$1" ]
+  then
+    echo "Error: no site specified."
+    echo "The site is the name of the directory your project is in."
+    return 1
+  fi
+
+  if [ -z "$SITE" ]
+  then
+    echo "No such site."
+    return 1
+  fi
+
+  loc=0
+
+  for site in ${SITES[@]}
+  do
+    if [ "${site##*/}" = "$1" ]
+    then
+      SITE=$site
+      JEKYLL_FORMATTING=${MARKUPS[$loc]}
+      break
+    fi
+    loc=$(($loc+1))
+  done
+
+  # 'builtin cd' into the local jekyll root
+
+  builtin cd "$SITE/_posts"
+
+  # Get the date for the new post's filename
+
+  FNAME_DATE=$(date "+%Y-%m-%d")
+
+  # If the user is using markdown or textile formatting, let them choose what type of post they want. Sort of like Tumblr.
+
+  OPTIONS="Text Quote Image Audio Video Link"
+
+  if [ $JEKYLL_FORMATTING = "markdown" -o $JEKYLL_FORMATTING = "textile" ]
+  then
+    select OPTION in $OPTIONS
+    do
+      if [[ $OPTION = "Text" ]]
+      then
+        POST_TYPE="Text"
+        break
+      fi
+
+      if [[ $OPTION = "Quote" ]]
+      then
+        POST_TYPE="Quote"
+        break
+      fi
+
+      if [[ $OPTION = "Image" ]]
+      then
+        POST_TYPE="Image"
+        break
+      fi
+
+      if [[ $OPTION = "Audio" ]]
+      then
+        POST_TYPE="Audio"
+        break
+      fi
+
+      if [[ $OPTION = "Video" ]]
+      then
+        POST_TYPE="Video"
+        break
+      fi
+
+      if [[ $OPTION = "Link" ]]
+      then
+        POST_TYPE="Link"
+        break
+      fi
+    done
+  fi
+
+  # Get the title for the new post
+
+  read -p "Enter title of the new post: " POST_TITLE
+
+  # Convert the spaces in the title to hyphens for use in the filename
+
+  FNAME_POST_TITLE=`echo $POST_TITLE | tr ' ' "-"`
+
+  # Now, put it all together for the full filename
+
+  FNAME="$FNAME_DATE-$FNAME_POST_TITLE.$JEKYLL_FORMATTING"
+
+  # And, finally, create the actual post file. But we're not done yet...
+
+  touch "$FNAME"
+
+  # Write a little stuff to the file for the YAML Front Matter
+
+  echo "---" >> $FNAME
+
+  # Now we have to get the date, again. But this time for in the header (YAML Front Matter) of
+  # the file
+
+  YAML_DATE=$(date "+%B %d %Y %X")
+
+  # Echo the YAML Formatted date to the post file
+
+  echo "date: $YAML_DATE" >> $FNAME
+
+  # Echo the original post title to the YAML Front Matter header
+
+  echo "title: $POST_TITLE" >> $FNAME
+
+  # And, now, echo the "post" layout to the YAML Front Matter header
+
+  echo "layout: post" >> $FNAME
+
+  # Close the YAML Front Matter Header
+
+  echo "---" >> $FNAME
+  echo >> $FNAME
+
+  # Generate template text based on the post type
+
+  if [[ $JEKYLL_FORMATTING = "markdown" ]]
+  then
+    if [[ $POST_TYPE = "Text" ]]
+    then
+      true
+    fi
+
+    if [[ $POST_TYPE = "Quote" ]]
+    then
+      echo "> Quote" >> $FNAME
+      echo >> $FNAME
+      echo "&mdash; Author" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Image" ]]
+    then
+      echo "![Alternate Text](/path/to/image/or/url)" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Audio" ]]
+    then
+      echo "<html><audio src=\"/path/to/audio/file\" controls=\"controls\"></audio></html>" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Video" ]]
+    then
+      echo "<html><video src=\"/path/to/video\" controls=\"controls\"></video></html>" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Link" ]]
+    then
+      echo "[link][1]" >> $FNAME
+      echo >> $FNAME
+      echo "> Quote" >> $FNAME
+      echo >> $FNAME
+      echo "[1]: url" >> $FNAME
+    fi
+  fi
+
+  if [[ $JEKYLL_FORMATTING = "textile" ]]
+  then
+    if [[ $POST_TYPE = "Text" ]]
+    then
+      true
+    fi
+
+    if [[ $POST_TYPE = "Quote" ]]
+    then
+      echo "bq. Quote" >> $FNAME
+      echo >> $FNAME
+      echo "&mdash; Author" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Image" ]]
+    then
+      echo "!url(alt text)" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Audio" ]]
+    then
+      echo "<html><audio src=\"/path/to/audio/file\" controls=\"controls\"></audio></html>" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Video" ]]
+    then
+      echo "<html><video src=\"/path/to/video\" controls=\"controls\"></video></html>" >> $FNAME
+    fi
+
+    if [[ $POST_TYPE = "Link" ]]
+    then
+      echo "\"Site\":url" >> $FNAME
+      echo >> $FNAME
+      echo "bq. Quote" >> $FNAME
+    fi
+  fi
+
+  # Open the file in your favorite editor
+
+  "$JEKYLL_EDITOR" $FNAME
 }
 
 function testsite() {
-	about 'launches local jekyll server'
-	param '1: site directory'
-	group 'jekyll'
-
-	local SITE site
-	local -i ret
-	if [[ -z "${1:-}" ]]; then
-		echo "Error: no site specified."
-		echo "The site is the name of the directory your project is in."
-		return 1
-	fi
-
-	for site in "${SITES[@]}"; do
-		if [[ "${site##*/}" == "$1" ]]; then
-			SITE="$site"
-			break
-		fi
-	done
-
-	if [[ -z "${SITE}" ]]; then
-		echo "No such site."
-		return 1
-	fi
-
-	pushd "${SITE}" > /dev/null || return
-	jekyll --server --auto
-	ret="$?"
-	popd > /dev/null || return "$ret"
-	return "$ret"
+  about 'launches local jekyll server'
+  param '1: site directory'
+  group 'jekyll'
+
+  unset SITE
+  if [ -z "$1" ]
+  then
+    echo "Error: no site specified."
+    echo "The site is the name of the directory your project is in."
+    return 1
+  fi
+
+  for site in ${SITES[@]}
+  do
+    if [ "${site##*/}" = "$1" ]
+    then
+      SITE=$site
+      break
+    fi
+  done
+
+  if [ -z "$SITE" ]
+  then
+    echo "No such site."
+    return 1
+  fi
+
+  builtin cd $SITE
+  jekyll --server --auto
 }
 
 function buildsite() {
-	about 'builds site'
-	param '1: site directory'
-	group 'jekyll'
-
-	local SITE site
-	local -i ret
-	if [[ -z "${1:-}" ]]; then
-		echo "Error: no site specified."
-		echo "The site is the name of the directory your project is in."
-		return 1
-	fi
-
-	for site in "${SITES[@]}"; do
-		if [[ "${site##*/}" == "$1" ]]; then
-			SITE="$site"
-			break
-		fi
-	done
-
-	if [[ -z "${SITE}" ]]; then
-		echo "No such site."
-		return 1
-	fi
-
-	pushd "${SITE}" > /dev/null || return
-	rm -rf _site
-	jekyll --no-server
-	ret="$?"
-	popd > /dev/null || return "$ret"
-	return "$ret"
+  about 'builds site'
+  param '1: site directory'
+  group 'jekyll'
+
+  unset SITE
+  if [ -z "$1" ]
+  then
+    echo "Error: no site specified."
+    echo "The site is the name of the directory your project is in."
+    return 1
+  fi
+
+  for site in ${SITES[@]}
+  do
+    if [ "${site##*/}" = "$1" ]
+    then
+      SITE=$site
+      break
+    fi
+  done
+
+  if [ -z "$SITE" ]
+  then
+    echo "No such site."
+    return 1
+  fi
+
+  builtin cd $SITE
+  rm -rf _site
+  jekyll --no-server
 }
 
 function deploysite() {
-	about 'rsyncs site to remote host'
-	param '1: site directory'
-	group 'jekyll'
-
-	local SITE site REMOTE
-	local -i loc=0 ret
-	if [[ -z "${1:-}" ]]; then
-		echo "Error: no site specified."
-		echo "The site is the name of the directory your project is in."
-		return 1
-	fi
-
-	for site in "${SITES[@]}"; do
-		if [[ "${site##*/}" == "$1" ]]; then
-			SITE="$site"
-			# shellcheck disable=SC2153 # who knows
-			REMOTE="${REMOTES[loc]}"
-			break
-		fi
-		loc=$((loc + 1))
-	done
-
-	if [[ -z "${SITE}" ]]; then
-		echo "No such site."
-		return 1
-	fi
-
-	pushd "${SITE}" > /dev/null || return
-	rsync -rz "${REMOTE?}"
-	ret="$?"
-	popd > /dev/null || return "$ret"
-	return "$ret"
+  about 'rsyncs site to remote host'
+  param '1: site directory'
+  group 'jekyll'
+
+  unset SITE
+  if [ -z "$1" ]
+  then
+    echo "Error: no site specified."
+    echo "The site is the name of the directory your project is in."
+    return 1
+  fi
+
+  loc=0
+
+  for site in ${SITES[@]}
+  do
+    if [ "${site##*/}" = "$1" ]
+    then
+      SITE=$site
+      REMOTE=${REMOTES[$loc]}
+      break
+    fi
+    loc=$(($loc+1))
+  done
+
+  if [ -z "$SITE" ]
+  then
+    echo "No such site."
+    return 1
+  fi
+
+  builtin cd $SITE
+  rsync -rz $REMOTE
 }
-
-# Load the Jekyll config
-if [[ -s "$HOME/.jekyllconfig" ]]; then
-	source "$HOME/.jekyllconfig"
-fi
diff --git a/plugins/available/keycode.plugin.bash b/plugins/available/keycode.plugin.bash
new file mode 100644
index 00000000..c074e85d
--- /dev/null
+++ b/plugins/available/keycode.plugin.bash
@@ -0,0 +1,52 @@
+cite about-plugin
+about-plugin 'caps lock virando grave'
+
+# use xev para ver keycode ...
+# ----------------------------------------------------------------------------
+# dead + _ + key => key + space
+# xmodmap -e 'eycode 194  = dead_grave'
+
+# 1 2 [3] 4 5
+#xmodmap -e 'keycode 194  = grave'       # `
+
+# 1 2 3 [4] 5
+#xmodmap -e 'keycode 195  = asciitilde '       # ~
+
+# 1 2 3 4 [5]
+#xmodmap -e 'keycode 196  = asciicircum'  # ^
+
+## caps lock virando grave
+
+if [[ ! -f /tmp/keycode ]]; then
+# apago o caps lock
+xmodmap -e 'clear lock'
+#xmodmap -e 'keycode 66 = grave acute dead_grave'
+xmodmap -e 'keycode 66 = tab iso_left_tab iso_left_tab'
+
+echo on > /tmp/keycode
+fi
+
+# <caps lock>        : `
+# <shift><caps lock> : ´
+
+## caps lock virando grave e dead_grave
+#xmodmap -e 'keycode 66 = grave'  # `
+#xmodmap -e 'keycode 66 = dead_acute'  # `
+## <caps lock> retorna grave
+## <shift><caps lock> retorna retorna dead_grave
+
+# botões especiais
+# ================
+
+#_____________________________________________________________________-
+# [carta] [home] [msn] [fone] <1,2,3,4,5,*> [>/||] [|<<] [>>|] [#]
+# <esc>  [f1]  .......................................    [f12]
+# [papel]
+# [foto]      teclado
+# [lupa+]
+# [lupa]
+#_____________________________________________________________________-
+
+# [papel]
+# keycode 243 (keysym 0x1008ff5b, xf86documents)
+#xmodmap -e 'keycode 243 = acute grave dead_grave'
diff --git a/plugins/available/latex.plugin.bash b/plugins/available/latex.plugin.bash
index 474f4abc..6ebb70d3 100644
--- a/plugins/available/latex.plugin.bash
+++ b/plugins/available/latex.plugin.bash
@@ -1,19 +1,9 @@
-# shellcheck shell=bash
-about-plugin 'add MacTeX to PATH'
-
-_bash_it_plugin_latex_paths=(
-	# Standard locations
-	/usr/local/texbin
-	# MacOS locations
-	/Library/TeX/texbin
-)
+cite about-plugin
+about-plugin 'use mactex'
 
 # add mactex to the path if its present
-for _bash_it_plugin_latex_path in "${_bash_it_plugin_latex_paths[@]}"; do
-	if [[ -d "$_bash_it_plugin_latex_path/" ]]; then
-		pathmunge "$_bash_it_plugin_latex_path" after && break
-	fi
-done
-
-# Cleanup
-unset "${!_bash_it_plugin_latex_@}"
+MACTEX_PATH=/usr/local/texlive/2009/bin/universal-darwin
+if [[ -d  $MACTEX_PATH ]]; then
+  pathmunge $MACTEX_PATH after
+fi
+unset MACTEX_PATH
diff --git a/plugins/available/luaenv.plugin.bash b/plugins/available/luaenv.plugin.bash
new file mode 100644
index 00000000..1e2efade
--- /dev/null
+++ b/plugins/available/luaenv.plugin.bash
@@ -0,0 +1,12 @@
+cite about-plugin
+about-plugin 'load luaenv, if you are using it'
+
+export luaenv_ROOT="$HOME/.luaenv"
+pathmunge "$luaenv_ROOT/bin"
+
+[[ `which luaenv 2>/dev/null` ]] && eval "$(luaenv init - bash)"
+
+#Load luaenv virtualenv if the virtualenv plugin is installed.
+if luaenv virtualenv-init - &> /dev/null; then
+  eval "$(luaenv virtualenv-init - bash)"
+fi
diff --git a/plugins/available/man.plugin.bash b/plugins/available/man.plugin.bash
index b981565f..473f04fd 100644
--- a/plugins/available/man.plugin.bash
+++ b/plugins/available/man.plugin.bash
@@ -1,14 +1,10 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'colorize man pages for better readability'
 
-: "${LESS_TERMCAP_mb:=$'\e[1;32m'}"
-: "${LESS_TERMCAP_md:=$'\e[1;32m'}"
-: "${LESS_TERMCAP_me:=$'\e[0m'}"
-: "${LESS_TERMCAP_se:=$'\e[0m'}"
-: "${LESS_TERMCAP_so:=$'\e[01;33m'}"
-: "${LESS_TERMCAP_ue:=$'\e[0m'}"
-: "${LESS_TERMCAP_us:=$'\e[1;4;31m'}"
-
-: "${LESS:=}"
-export "${!LESS_TERMCAP@}"
-export LESS="R${LESS#-}"
+export LESS_TERMCAP_mb=$'\e[1;32m'
+export LESS_TERMCAP_md=$'\e[1;32m'
+export LESS_TERMCAP_me=$'\e[0m'
+export LESS_TERMCAP_se=$'\e[0m'
+export LESS_TERMCAP_so=$'\e[01;33m'
+export LESS_TERMCAP_ue=$'\e[0m'
+export LESS_TERMCAP_us=$'\e[1;4;31m'
diff --git a/plugins/available/ndenv.plugin.bash b/plugins/available/ndenv.plugin.bash
new file mode 100644
index 00000000..c1b4f902
--- /dev/null
+++ b/plugins/available/ndenv.plugin.bash
@@ -0,0 +1,12 @@
+cite about-plugin
+about-plugin 'load ndenv, if you are using it'
+
+export ndenv_ROOT="$HOME/.ndenv"
+pathmunge "$ndenv_ROOT/bin"
+
+[[ `which ndenv 2>/dev/null` ]] && eval "$(ndenv init - bash)"
+
+#Load ndenv virtualenv if the virtualenv plugin is installed.
+if ndenv virtualenv-init - &> /dev/null; then
+  eval "$(ndenv virtualenv-init - bash)"
+fi
diff --git a/plugins/available/nginx.plugin.bash b/plugins/available/nginx.plugin.bash
index 8d75a881..c540a23a 100644
--- a/plugins/available/nginx.plugin.bash
+++ b/plugins/available/nginx.plugin.bash
@@ -1,55 +1,66 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'manage your nginx service'
 
-pathmunge "${NGINX_PATH:=/opt/nginx}/sbin" after
-export NGINX_PATH
+export NGINX_PATH='/opt/nginx'
+pathmunge $NGINX_PATH/sbin after
 
 function nginx_reload() {
-	about 'reload your nginx config'
-	group 'nginx'
-
-	local FILE="${NGINX_PATH?}/logs/nginx.pid"
-	if [[ -s $FILE ]]; then
-		echo "Reloading NGINX..."
-		read -r PID < "${FILE}"
-		sudo kill -HUP "${PID?}"
-	else
-		echo "Nginx pid file not found"
-		return 0
-	fi
+  about 'reload your nginx config'
+  group 'nginx'
+
+  FILE="${NGINX_PATH}/logs/nginx.pid"
+  if [ -e $FILE ]; then
+    echo "Reloading NGINX..."
+    PID=`cat $NGINX_PATH/logs/nginx.pid`
+    sudo kill -HUP $PID
+  else
+    echo "Nginx pid file not found"
+    return 0
+  fi
 }
 
 function nginx_stop() {
-	about 'stop nginx'
-	group 'nginx'
-
-	local FILE="${NGINX_PATH?}/logs/nginx.pid"
-	if [[ -s $FILE ]]; then
-		echo "Stopping NGINX..."
-		read -r PID < "${FILE}"
-		sudo kill -INT "${PID?}"
-	else
-		echo "Nginx pid file not found"
-		return 0
-	fi
+  about 'stop nginx'
+  group 'nginx'
+
+  FILE="${NGINX_PATH}/logs/nginx.pid"
+  if [ -e $FILE ]; then
+    echo "Stopping NGINX..."
+    PID=`cat $NGINX_PATH/logs/nginx.pid`
+    sudo kill -INT $PID
+  else
+    echo "Nginx pid file not found"
+    return 0
+  fi
 }
 
 function nginx_start() {
-	about 'start nginx'
-	group 'nginx'
-
-	local FILE="${NGINX_PATH?}/sbin/nginx"
-	if [[ -x $FILE ]]; then
-		echo "Starting NGINX..."
-		sudo "${FILE}"
-	else
-		echo "Couldn't start nginx"
-	fi
+  about 'start nginx'
+  group 'nginx'
+
+  FILE="${NGINX_PATH}/sbin/nginx"
+  if [ -e $FILE ]; then
+    echo "Starting NGINX..."
+    sudo $NGINX_PATH/sbin/nginx
+  else
+    echo "Couldn't start nginx"
+  fi
 }
 
 function nginx_restart() {
-	about 'restart nginx'
-	group 'nginx'
+  about 'restart nginx'
+  group 'nginx'
 
-	nginx_stop && nginx_start
+  FILE="${NGINX_PATH}/logs/nginx.pid"
+  if [ -e $FILE ]; then
+    echo "Stopping NGINX..."
+    PID=`cat $NGINX_PATH/logs/nginx.pid`
+    sudo kill -INT $PID
+    sleep 1
+    echo "Starting NGINX..."
+    sudo $NGINX_PATH/sbin/nginx
+  else
+    echo "Nginx pid file not found"
+    return 0
+  fi
 }
diff --git a/plugins/available/osx-timemachine.plugin.bash b/plugins/available/osx-timemachine.plugin.bash
index e30d37bd..3d7ff00c 100644
--- a/plugins/available/osx-timemachine.plugin.bash
+++ b/plugins/available/osx-timemachine.plugin.bash
@@ -1,95 +1,84 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'OS X Time Machine functions'
 
-if [[ "${OSTYPE}" != 'darwin'* ]]; then
-	_log_warning "This plugin only works with Mac OS X"
-	return 1
-fi
-
 function time-machine-destination() {
-	group "osx-timemachine"
-	about "Shows the OS X Time Machine destination/mount point"
+  group "osx-timemachine"
+  about "Shows the OS X Time Machine destination/mount point"
 
-	tmutil destinationinfo | grep "Mount Point" | sed -e 's/Mount Point   : \(.*\)/\1/g'
+  echo $(tmutil destinationinfo | grep "Mount Point" | sed -e 's/Mount Point   : \(.*\)/\1/g')
 }
 
 function time-machine-list-machines() {
-	group "osx-timemachine"
-	about "Lists the OS X Time Machine machines on the backup volume"
+  group "osx-timemachine"
+  about "Lists the OS X Time Machine machines on the backup volume"
 
-	local tmdest
-	tmdest="$(time-machine-destination)/Backups.backupdb"
+  local tmdest="$(time-machine-destination)/Backups.backupdb"
 
-	find "$tmdest" -maxdepth 1 -mindepth 1 -type d | grep -v "/\." | while read -r line; do
-		echo "${line##*/}"
-	done
+  find "$tmdest" -maxdepth 1 -mindepth 1 -type d | grep -v "/\." | while read line ; do
+    echo "${line##*/}"
+  done
 }
 
 function time-machine-list-all-backups() {
-	group "osx-timemachine"
-	about "Shows all of the backups for the specified machine"
-	param "1: Machine name (optional)"
-	example "time-machine-list-all-backups my-laptop"
-
-	# Use the local hostname if none provided
-	local COMPUTERNAME BACKUP_LOCATION
-	COMPUTERNAME=${1:-$(scutil --get ComputerName)}
-	BACKUP_LOCATION="$(time-machine-destination)/Backups.backupdb/$COMPUTERNAME"
-
-	find "$BACKUP_LOCATION" -maxdepth 1 -mindepth 1 -type d | while read -r line; do
-		echo "$line"
-	done
+  group "osx-timemachine"
+  about "Shows all of the backups for the specified machine"
+  param "1: Machine name (optional)"
+  example "time-machine-list-all-backups my-laptop"
+
+  # Use the local hostname if none provided
+  local COMPUTERNAME=${1:-$(scutil --get ComputerName)}
+  local BACKUP_LOCATION="$(time-machine-destination)/Backups.backupdb/$COMPUTERNAME"
+
+  find "$BACKUP_LOCATION" -maxdepth 1 -mindepth 1 -type d | while read line ; do
+    echo "$line"
+  done
 }
 
 function time-machine-list-old-backups() {
-	group "osx-timemachine"
-	about "Shows all of the backups for the specified machine, except for the most recent backup"
-	param "1: Machine name (optional)"
-	example "time-machine-list-old-backups my-laptop"
-
-	# Use the local hostname if none provided
-	local COMPUTERNAME BACKUP_LOCATION
-	COMPUTERNAME=${1:-$(scutil --get ComputerName)}
-	BACKUP_LOCATION="$(time-machine-destination)/Backups.backupdb/$COMPUTERNAME"
-
-	# List all but the most recent one
-	find "$BACKUP_LOCATION" -maxdepth 1 -mindepth 1 -type d -name 2\* | sed \$d | while read -r line; do
-		echo "$line"
-	done
+  group "osx-timemachine"
+  about "Shows all of the backups for the specified machine, except for the most recent backup"
+  param "1: Machine name (optional)"
+  example "time-machine-list-old-backups my-laptop"
+
+  # Use the local hostname if none provided
+  local COMPUTERNAME=${1:-$(scutil --get ComputerName)}
+  local BACKUP_LOCATION="$(time-machine-destination)/Backups.backupdb/$COMPUTERNAME"
+
+  # List all but the most recent one
+  find "$BACKUP_LOCATION" -maxdepth 1 -mindepth 1 -type d -name 2\* | sed \$d | while read line ; do
+    echo "$line"
+  done
 }
 
 # Taken from here: http://stackoverflow.com/a/30547074/1228454
 function _tm_startsudo() {
-	local -x SUDO_COMMAND="plugin/osx-timemachine: keep 'sudo' token alive during long-run 'tmutil' commands"
-	sudo "-${SUDO_ASKPASS:+A}v" # validate without running a command, using `ssh-askpass` if available.
-	(while sudo "-${SUDO_ASKPASS:+A}v"; do
-		sleep 50
-	done) &
-	SUDO_PID="$!"
-	trap _tm_stopsudo SIGINT SIGTERM
+    sudo -v
+    ( while true; do sudo -v; sleep 50; done; ) &
+    SUDO_PID="$!"
+    trap _tm_stopsudo SIGINT SIGTERM
 }
 function _tm_stopsudo() {
-	kill "$SUDO_PID"
-	trap - SIGINT SIGTERM
-	sudo -k
+    kill "$SUDO_PID"
+    trap - SIGINT SIGTERM
+    sudo -k
 }
 
 function time-machine-delete-old-backups() {
-	group "osx-timemachine"
-	about "Deletes all of the backups for the specified machine, with the exception of the most recent one"
-	param "1: Machine name (optional)"
-	example "time-machine-delete-old-backups my-laptop"
+  group "osx-timemachine"
+  about "Deletes all of the backups for the specified machine, with the exception of the most recent one"
+  param "1: Machine name (optional)"
+  example "time-machine-delete-old-backups my-laptop"
 
-	# Use the local hostname if none provided
-	local COMPUTERNAME=${1:-$(scutil --get ComputerName)} _old_backup
+  # Use the local hostname if none provided
+  local COMPUTERNAME=${1:-$(scutil --get ComputerName)}
 
-	# Ask for sudo credentials only once
-	_tm_startsudo
+  # Ask for sudo credentials only once
+  _tm_startsudo
 
-	while read -r _old_backup; do
-		# Delete the backup
-		sudo tmutil delete "$_old_backup"
-	done <<< "$(time-machine-list-old-backups "$COMPUTERNAME")"
+  echo "$(time-machine-list-old-backups "$COMPUTERNAME")" | while read i ; do
+    # Delete the backup
+    sudo tmutil delete "$i"
+  done
 
-	_tm_stopsudo
+  _tm_stopsudo
 }
diff --git a/plugins/available/osx.plugin.bash b/plugins/available/osx.plugin.bash
index 139f58a1..ca1f66b8 100644
--- a/plugins/available/osx.plugin.bash
+++ b/plugins/available/osx.plugin.bash
@@ -1,21 +1,23 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'osx-specific functions'
 
-if [[ "${OSTYPE}" != 'darwin'* ]]; then
-	_log_warning "This plugin only works with Mac OS X."
-	return 1
-fi
-
 # OS X: Open new tabs in same directory
-if _is_function update_terminal_cwd; then
-	safe_append_prompt_command 'update_terminal_cwd'
+if [[ $OSTYPE == 'darwin'* ]]; then
+  if type update_terminal_cwd > /dev/null 2>&1 ; then
+    if ! [[ $PROMPT_COMMAND =~ (^|;)update_terminal_cwd($|;) ]] ; then
+      PROMPT_COMMAND="${PROMPT_COMMAND%;};update_terminal_cwd"
+      declared="$(declare -p PROMPT_COMMAND)"
+      [[ "$declared" =~ \ -[aAilrtu]*x[aAilrtu]*\  ]] 2>/dev/null
+      [[ $? -eq 0 ]] && export PROMPT_COMMAND
+    fi
+  fi
 fi
 
 function tab() {
-	about 'opens a new terminal tab'
-	group 'osx'
+  about 'opens a new terminal tab'
+  group 'osx'
 
-	osascript 2> /dev/null << EOF
+  osascript 2>/dev/null <<EOF
     tell application "System Events"
       tell process "Terminal" to keystroke "t" using command down
     end
@@ -28,105 +30,147 @@ EOF
 
 # renames the current os x terminal tab title
 function tabname {
-	printf '%b' "\e]1;$1\a"
+  printf "\e]1;$1\a"
 }
 
 # renames the current os x terminal window title
 function winname {
-	printf '%b' "\e]2;$1\a"
+  printf "\e]2;$1\a"
+}
+
+# this one switches your os x dock between 2d and 3d
+# thanks to savier.zwetschge.org
+function dock-switch() {
+    about 'switch dock between 2d and 3d'
+    param '1: "2d" or "3d"'
+    example '$ dock-switch 2d'
+    group 'osx'
+
+    if [[ "$OSTYPE" = 'darwin'* ]]; then
+
+        if [[ $1 = 3d ]] ; then
+            defaults write com.apple.dock no-glass -boolean NO
+            killall Dock
+
+        elif [[ $1 = 2d ]] ; then
+            defaults write com.apple.dock no-glass -boolean YES
+            killall Dock
+
+        else
+            echo "usage:"
+            echo "dock-switch 2d"
+            echo "dock-switch 3d."
+        fi
+    else
+        echo "Sorry, this only works on Mac OS X"
+    fi
 }
 
-function pman() {
-	about 'view man documentation in Preview'
-	param '1: man page to view'
-	example '$ pman bash'
-	group 'osx'
-	man -t "${1}" | open -fa 'Preview'
+function pman ()
+{
+    about 'view man documentation in Preview'
+    param '1: man page to view'
+    example '$ pman bash'
+    group 'osx'
+    man -t "${1}" | open -fa $PREVIEW
 }
 
-function pri() {
-	about 'display information about Ruby classes, modules, or methods, in Preview'
-	param '1: Ruby method, module, or class'
-	example '$ pri Array'
-	group 'osx'
-	ri -T "${1}" | open -fa 'Preview'
+function pri ()
+{
+    about 'display information about Ruby classes, modules, or methods, in Preview'
+    param '1: Ruby method, module, or class'
+    example '$ pri Array'
+    group 'osx'
+    ri -T "${1}" | open -fa $PREVIEW
 }
 
 # Download a file and open it in Preview
 function prevcurl() {
-	about 'download a file and open it in Preview'
-	param '1: url'
-	group 'osx'
-
-	curl "$*" | open -fa 'Preview'
+  about 'download a file and open it in Preview'
+  param '1: url'
+  group 'osx'
+
+  if [[ ! $OSTYPE = 'darwin'* ]]
+  then
+    echo "This function only works with Mac OS X"
+    return 1
+  fi
+  curl "$*" | open -fa $PREVIEW
 }
 
 function refresh-launchpad() {
-	about 'Reset launchpad layout in macOS'
-	example '$ refresh-launchpad'
-	group 'osx'
-
-	defaults write com.apple.dock ResetLaunchPad -bool TRUE
-	killall Dock
+  about 'Reset launchpad layout in macOS'
+  example '$ refresh-launchpad'
+  group 'osx'
+
+  if [[ "$OSTYPE" = 'darwin'* ]];then
+    defaults write com.apple.dock ResetLaunchPad -bool TRUE
+    killall Dock
+  else
+    echo "Sorry, this only works on Mac OS X"
+  fi
 }
 
-function list-jvms() {
-	about 'List java virtual machines and their states in macOS'
-	example 'list-jvms'
-	group 'osx'
-
-	local JVMS_DIR="/Library/Java/JavaVirtualMachines"
-	# The following variables are intended to impact the enclosing scope, not local.
-	JVMS=("${JVMS_DIR}"/*)
-	JVMS_STATES=()
-
-	# Map state of JVM
-	for ((i = 0; i < ${#JVMS[@]}; i++)); do
-		if [[ -f "${JVMS[i]}/Contents/Info.plist" ]]; then
-			JVMS_STATES[i]=enabled
-		else
-			JVMS_STATES[i]=disabled
-		fi
-		printf '%s\t%s\t%s\n' "${i}" "${JVMS[i]##*/}" "${JVMS_STATES[i]}"
-	done
+function list-jvms(){
+  about 'List java virtual machines and their states in macOS'
+  example 'list-jvms'
+  group 'osx'
+
+  JVMS_DIR="/Library/Java/JavaVirtualMachines"
+  JVMS=( $(ls ${JVMS_DIR}) )
+  JVMS_STATES=()
+
+  # Map state of JVM
+  for (( i = 0; i < ${#JVMS[@]}; i++ )); do
+    if [[ -f "${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist" ]]; then
+      JVMS_STATES[${i}]=enabled
+    else
+      JVMS_STATES[${i}]=disabled
+    fi
+      echo "${i} ${JVMS[$i]} ${JVMS_STATES[$i]}"
+  done
 }
 
-function pick-default-jvm() {
-	about 'Pick the default Java Virtual Machines in system-wide scope in macOS'
-	example 'pick-default-jvm'
-
-	# Declare variables
-	local JVMS JVMS_STATES
-	local DEFAULT_JVM_DIR DEFAULT_JVM OPTION
-
-	# Call function for listing
-	list-jvms
-
-	# OPTION for default jdk and set variables
-	while [[ ! "$OPTION" =~ ^[0-9]+$ || OPTION -ge "${#JVMS[@]}" ]]; do
-		read -rp "Enter Default JVM: " OPTION
-		if [[ ! "$OPTION" =~ ^[0-9]+$ ]]; then
-			echo "Please enter a number"
-		fi
-
-		if [[ OPTION -ge "${#JVMS[@]}" ]]; then
-			echo "Please select one of the displayed JVMs"
-		fi
-	done
-
-	DEFAULT_JVM_DIR="${JVMS[OPTION]}"
-	DEFAULT_JVM="${JVMS[OPTION]##*/}"
-
-	# Disable all jdk
-	for ((i = 0; i < ${#JVMS[@]}; i++)); do
-		if [[ "${JVMS[i]}" != "${DEFAULT_JVM_DIR}" && -f "${JVMS[i]}/Contents/Info.plist" ]]; then
-			sudo mv "${JVMS[i]}/Contents/Info.plist" "${JVMS[i]}/Contents/Info.plist.disable"
-		fi
-	done
-
-	# Enable default jdk
-	if [[ -f "${DEFAULT_JVM_DIR}/Contents/Info.plist.disable" ]]; then
-		sudo mv -vn "${DEFAULT_JVM_DIR}/Contents/Info.plist.disable" "${DEFAULT_JVM_DIR}/Contents/Info.plist" \
-			&& echo "Enabled ${DEFAULT_JVM} as default JVM"
-	fi
+function pick-default-jvm(){
+  about 'Pick the default Java Virtual Machines in system-wide scope in macOS'
+  example 'pick-default-jvm'
+
+  # Call function for listing
+  list-jvms
+
+  # Declare variables
+  local DEFAULT_JVM_DIR=""
+  local DEFAULT_JVM=""
+  local OPTION=""
+
+  # OPTION for default jdk and set variables
+  while [[ ! "$OPTION" =~ ^[0-9]+$ || OPTION -ge "${#JVMS[@]}" ]]; do
+    read -p "Enter Default JVM: "  OPTION
+      if [[ ! "$OPTION" =~ ^[0-9]+$  ]]; then
+        echo "Please enter a number"
+      fi
+
+      if [[ OPTION -ge "${#JVMS[@]}" ]]; then
+        echo "Please select one of the displayed JVMs"
+      fi
+  done
+
+  DEFAULT_JVM_DIR="${JVMS_DIR}/${JVMS[$OPTION]}"
+  DEFAULT_JVM="${JVMS[$OPTION]}"
+
+  # Disable all jdk
+  for (( i = 0; i < ${#JVMS[@]}; i++ )); do
+    if [[ -f "${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist" ]]; then
+      sudo mv "${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist" "${JVMS_DIR}/${JVMS[$i]}/Contents/Info.plist.disable"
+    fi
+  done
+
+  # Enable default jdk
+  if [[ -f "${DEFAULT_JVM_DIR}/Contents/Info.plist.disable" ]]; then
+    sudo mv "${DEFAULT_JVM_DIR}/Contents/Info.plist.disable" "${DEFAULT_JVM_DIR}/Contents/Info.plist"
+    echo "Enabled ${DEFAULT_JVM} as default JVM"
+  fi
 }
+
+# Make this backwards compatible
+alias pcurl='prevcurl'
diff --git a/plugins/available/pandoc.plugin.bash b/plugins/available/pandoc.plugin.bash
new file mode 100644
index 00000000..d28376c3
--- /dev/null
+++ b/plugins/available/pandoc.plugin.bash
@@ -0,0 +1,11 @@
+# plugin for npandoc
+
+cite about-plugin
+about-plugin 'pandoc plugin for node'
+
+if [[ `which pandoc` ]] ; then
+
+  # init pandoc
+  eval "$(pandoc --bash-completion)"
+
+fi
diff --git a/plugins/available/perl5.plugin.bash b/plugins/available/perl5.plugin.bash
new file mode 100644
index 00000000..6f7d7cb2
--- /dev/null
+++ b/plugins/available/perl5.plugin.bash
@@ -0,0 +1,16 @@
+# Load perl5, if you are using it
+
+cite about-plugin
+about-plugin 'load perl5, if you are using it'
+
+pathmunge "$HOME"/perl5/bin
+PERL5LIB="/home/ivan/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
+PERL_LOCAL_LIB_ROOT="/home/ivan/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
+PERL_MB_OPT="--install_base \"/home/ivan/perl5\""; export PERL_MB_OPT;
+PERL_MM_OPT="INSTALL_BASE=/home/ivan/perl5"; export PERL_MM_OPT;
+
+# PATH="/home/ivan/perl5/bin${PATH:+:${PATH}}"; export PATH;
+# PERL5LIB="/home/ivan/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
+# PERL_LOCAL_LIB_ROOT="/home/ivan/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
+# PERL_MB_OPT="--install_base \"/home/ivan/perl5\""; export PERL_MB_OPT;
+# PERL_MM_OPT="INSTALL_BASE=/home/ivan/perl5"; export PERL_MM_OPT;
diff --git a/plugins/available/plenv.plugin.bash b/plugins/available/plenv.plugin.bash
index 79a9cf49..1da2d61b 100644
--- a/plugins/available/plenv.plugin.bash
+++ b/plugins/available/plenv.plugin.bash
@@ -1,16 +1,18 @@
-# shellcheck shell=bash
-#
 # plugin for plenv
 
 cite about-plugin
 about-plugin 'plenv plugin for Perl'
 
-if [[ -d "${HOME}/.plenv/bin" ]]; then
-	# load plenv bin dir into path if it exists
-	pathmunge "${HOME}/.plenv/bin"
+if [[ -e "${HOME}/.plenv/bin" ]] ; then
+
+  # load plenv bin dir into path if it exists
+  pathmunge "${HOME}/.plenv/bin"
+
 fi
 
-if _command_exists plenv; then
-	# init plenv
-	eval "$(plenv init - bash)"
+if [[ `which plenv` ]] ; then
+
+  # init plenv
+  eval "$(plenv init - bash)"
+
 fi
diff --git a/plugins/available/projects.plugin.bash b/plugins/available/projects.plugin.bash
index 34fa001e..775ec813 100644
--- a/plugins/available/projects.plugin.bash
+++ b/plugins/available/projects.plugin.bash
@@ -1,57 +1,75 @@
-# shellcheck shell=bash
-about-plugin 'quickly navigate configured project paths'
-
-: "${BASH_IT_PROJECT_PATHS:=$HOME/Projects:$HOME/src:$HOME/work}"
-
-function pj() {
-	about 'navigate quickly to your various project directories'
-	group 'projects'
-
-	local proj="${1?${FUNCNAME[0]}: project name required}"
-	local cmd PS3 dest d
-	local -a dests
-
-	if [[ "$proj" == "open" ]]; then
-		shift
-		proj="${1}"
-		cmd="${EDITOR?}"
-	fi
-
-	# collect possible destinations to account for directories
-	# with the same name in project directories
-	IFS=':' read -ra dests <<< "${BASH_IT_PROJECT_PATHS?${FUNCNAME[0]}: project working folders must be configured}"
-	for d in "${!dests[@]}"; do
-		if [[ ! -d "${dests[d]}/${proj}" ]]; then
-			unset 'dests[d]'
-		fi
-	done
-
-	case ${#dests[@]} in
-		0)
-			_log_error "BASH_IT_PROJECT_PATHS must contain at least one existing location"
-			return 1
-			;;
-		1)
-			dest="${dests[*]}/${proj}"
-			;;
-		*)
-			PS3="Multiple project directories found. Please select one: "
-			dests+=("cancel")
-			select d in "${dests[@]}"; do
-				case $d in
-					"cancel")
-						return
-						;;
-					*)
-						dest="${d}/${proj}"
-						break
-						;;
-				esac
-			done
-			;;
-	esac
-
-	"${cmd:-cd}" "${dest}"
+cite about-plugin
+about-plugin 'quickly navigate configured paths with `pj` and `pjo`. example: "export PROJECT_PATHS=~/projects:~/work/projects"'
+
+function pj {
+about 'navigate quickly to your various project directories'
+group 'projects'
+
+
+if [ -z "$PROJECT_PATHS" ]; then
+  echo "error: PROJECT_PATHS not set"
+  return 1
+fi
+
+
+local cmd
+local dest
+local -a dests
+
+
+if [ "$1" == "open" ]; then
+  shift
+  cmd="$EDITOR"
+fi
+cmd="${cmd:-cd}"
+
+
+if [ -z "$1" ]; then
+  echo "error: no project provided"
+  return 1
+fi
+
+
+# collect possible destinations to account for directories
+# with the same name in project directories
+for i in ${PROJECT_PATHS//:/$'\n'}; do
+  if [ -d "$i"/"$1" ]; then
+    dests+=("$i/$1")
+  fi
+done
+
+
+# when multiple destinations are found, present a menu
+if [ ${#dests[@]} -eq 0 ]; then
+  echo "error: no such project '$1'"
+  return 1
+
+elif [ ${#dests[@]} -eq 1 ]; then
+  dest="${dests[0]}"
+
+elif [ ${#dests[@]} -gt 1 ]; then
+  PS3="Multiple project directories found. Please select one: "
+  dests+=("cancel")
+  select d in "${dests[@]}"; do
+    case $d in
+      "cancel")
+        return
+        ;;
+      *)
+        dest=$d
+        break
+        ;;
+    esac
+  done
+
+else
+  echo "error: please report this error"
+  return 1 # should never reach this
+
+fi
+
+
+$cmd "$dest"
 }
 
 alias pjo="pj open"
diff --git a/plugins/available/proxy.plugin.bash b/plugins/available/proxy.plugin.bash
index 985d77b4..f2458e3f 100644
--- a/plugins/available/proxy.plugin.bash
+++ b/plugins/available/proxy.plugin.bash
@@ -1,7 +1,8 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'Proxy Tools'
 
-function disable-proxy() {
+disable-proxy ()
+{
 	about 'Disables proxy settings for Bash, npm and SSH'
 	group 'proxy'
 
@@ -19,17 +20,18 @@ function disable-proxy() {
 	svn-disable-proxy
 }
 
-function enable-proxy() {
+enable-proxy ()
+{
 	about 'Enables proxy settings for Bash, npm and SSH'
 	group 'proxy'
 
-	export http_proxy="${BASH_IT_HTTP_PROXY:-}"
-	export https_proxy="${BASH_IT_HTTPS_PROXY:-}"
-	export HTTP_PROXY="${http_proxy:-}"
-	export HTTPS_PROXY="${https_proxy:-}"
-	export ALL_PROXY="${http_proxy:-}"
-	export no_proxy="${BASH_IT_NO_PROXY:-}"
-	export NO_PROXY="${no_proxy:-}"
+	export http_proxy=$BASH_IT_HTTP_PROXY
+	export https_proxy=$BASH_IT_HTTPS_PROXY
+	export HTTP_PROXY=$http_proxy
+	export HTTPS_PROXY=$https_proxy
+	export ALL_PROXY=$http_proxy
+	export no_proxy=$BASH_IT_NO_PROXY
+	export NO_PROXY=$no_proxy
 	echo "Enabled proxy environment variables"
 
 	npm-enable-proxy
@@ -37,25 +39,27 @@ function enable-proxy() {
 	svn-enable-proxy
 }
 
-function enable-proxy-alt() {
+enable-proxy-alt ()
+{
 	about 'Enables alternate proxy settings for Bash, npm and SSH'
 	group 'proxy'
 
-	export http_proxy="${BASH_IT_HTTP_PROXY_ALT:-}"
-	export https_proxy="${BASH_IT_HTTPS_PROXY_ALT:-}"
-	export HTTP_PROXY="${http_proxy:-}"
-	export HTTPS_PROXY="${https_proxy:-}"
-	export ALL_PROXY="${http_proxy:-}"
-	export no_proxy="${BASH_IT_NO_PROXY:-}"
-	export NO_PROXY="${no_proxy:-}"
+	export http_proxy=$BASH_IT_HTTP_PROXY_ALT
+	export https_proxy=$BASH_IT_HTTPS_PROXY_ALT
+	export HTTP_PROXY=$http_proxy
+	export HTTPS_PROXY=$https_proxy
+	export ALL_PROXY=$http_proxy
+	export no_proxy=$BASH_IT_NO_PROXY
+	export NO_PROXY=$no_proxy
 	echo "Enabled alternate proxy environment variables"
 
-	npm-enable-proxy "${http_proxy:-}" "${https_proxy:-}"
+	npm-enable-proxy $http_proxy $https_proxy
 	ssh-enable-proxy
-	svn-enable-proxy "${http_proxy:-}"
+	svn-enable-proxy $http_proxy
 }
 
-function show-proxy() {
+show-proxy ()
+{
 	about 'Shows the proxy settings for Bash, Git, npm and SSH'
 	group 'proxy'
 
@@ -71,7 +75,8 @@ function show-proxy() {
 	ssh-show-proxy
 }
 
-function proxy-help() {
+proxy-help ()
+{
 	about 'Provides an overview of the bash-it proxy configuration'
 	group 'proxy'
 
@@ -92,7 +97,8 @@ EOF
 	bash-it-show-proxy
 }
 
-function bash-it-show-proxy() {
+bash-it-show-proxy ()
+{
 	about 'Shows the bash-it proxy settings'
 	group 'proxy'
 
@@ -104,25 +110,27 @@ function bash-it-show-proxy() {
 	env | grep -e "BASH_IT.*PROXY"
 }
 
-function npm-show-proxy() {
+npm-show-proxy ()
+{
 	about 'Shows the npm proxy settings'
 	group 'proxy'
 
-	if _command_exists npm; then
+	if $(command -v npm &> /dev/null) ; then
 		echo ""
 		echo "npm"
 		echo "==="
-		echo "npm HTTP  proxy: $(npm config get proxy)"
-		echo "npm HTTPS proxy: $(npm config get https-proxy)"
-		echo "npm proxy exceptions: $(npm config get noproxy)"
+		echo "npm HTTP  proxy: " `npm config get proxy`
+		echo "npm HTTPS proxy: " `npm config get https-proxy`
+		echo "npm proxy exceptions: " `npm config get noproxy`
 	fi
 }
 
-function npm-disable-proxy() {
+npm-disable-proxy ()
+{
 	about 'Disables npm proxy settings'
 	group 'proxy'
 
-	if _command_exists npm; then
+	if $(command -v npm &> /dev/null) ; then
 		npm config delete proxy
 		npm config delete https-proxy
 		npm config delete noproxy
@@ -130,104 +138,113 @@ function npm-disable-proxy() {
 	fi
 }
 
-function npm-enable-proxy() {
+npm-enable-proxy ()
+{
 	about 'Enables npm proxy settings'
 	group 'proxy'
 
-	local my_http_proxy="${1:-${BASH_IT_HTTP_PROXY:-}}"
-	local my_https_proxy="${2:-${BASH_IT_HTTPS_PROXY:-}}"
-	local my_no_proxy="${3:-${BASH_IT_NO_PROXY:-}}"
+	local my_http_proxy=${1:-$BASH_IT_HTTP_PROXY}
+	local my_https_proxy=${2:-$BASH_IT_HTTPS_PROXY}
+	local my_no_proxy=${3:-$BASH_IT_NO_PROXY}
 
-	if _command_exists npm; then
-		npm config set proxy "${my_http_proxy:?}" || return
-		npm config set https-proxy "${my_https_proxy:?}" || return
-		npm config set noproxy "${my_no_proxy:-}" || return
+	if $(command -v npm &> /dev/null) ; then
+		npm config set proxy $my_http_proxy
+		npm config set https-proxy $my_https_proxy
+		npm config set noproxy $my_no_proxy
 		echo "Enabled npm proxy settings"
 	fi
 }
 
-function git-global-show-proxy() {
+git-global-show-proxy ()
+{
 	about 'Shows global Git proxy settings'
 	group 'proxy'
 
-	if _command_exists git; then
+	if $(command -v git &> /dev/null) ; then
 		echo ""
 		echo "Git (Global Settings)"
 		echo "====================="
-		echo "Git (Global) HTTP  proxy: $(git config --global --get http.proxy)"
-		echo "Git (Global) HTTPS proxy: $(git config --global --get https.proxy)"
+		echo "Git (Global) HTTP  proxy: " `git config --global --get http.proxy`
+		echo "Git (Global) HTTPS proxy: " `git config --global --get https.proxy`
 	fi
 }
 
-function git-global-disable-proxy() {
+git-global-disable-proxy ()
+{
 	about 'Disables global Git proxy settings'
 	group 'proxy'
 
-	if _command_exists git; then
+	if $(command -v git &> /dev/null) ; then
 		git config --global --unset-all http.proxy
 		git config --global --unset-all https.proxy
 		echo "Disabled global Git proxy settings"
 	fi
 }
 
-function git-global-enable-proxy() {
+git-global-enable-proxy ()
+{
 	about 'Enables global Git proxy settings'
 	group 'proxy'
 
-	if _command_exists git; then
+	if $(command -v git &> /dev/null) ; then
 		git-global-disable-proxy
 
-		git config --global --add http.proxy "${BASH_IT_HTTP_PROXY:?}"
-		git config --global --add https.proxy "${BASH_IT_HTTPS_PROXY:?}"
+		git config --global --add http.proxy $BASH_IT_HTTP_PROXY
+		git config --global --add https.proxy $BASH_IT_HTTPS_PROXY
 		echo "Enabled global Git proxy settings"
 	fi
 }
 
-function git-show-proxy() {
+git-show-proxy ()
+{
 	about 'Shows current Git project proxy settings'
 	group 'proxy'
 
-	if _command_exists git; then
+	if $(command -v git &> /dev/null) ; then
 		echo "Git Project Proxy Settings"
 		echo "====================="
-		echo "Git HTTP  proxy: $(git config --get http.proxy)"
-		echo "Git HTTPS proxy: $(git config --get https.proxy)"
+		echo "Git HTTP  proxy: " `git config --get http.proxy`
+		echo "Git HTTPS proxy: " `git config --get https.proxy`
 	fi
 }
 
-function git-disable-proxy() {
+git-disable-proxy ()
+{
 	about 'Disables current Git project proxy settings'
 	group 'proxy'
 
-	if _command_exists git; then
+	if $(command -v git &> /dev/null) ; then
 		git config --unset-all http.proxy
 		git config --unset-all https.proxy
 		echo "Disabled Git project proxy settings"
 	fi
 }
 
-function git-enable-proxy() {
+git-enable-proxy ()
+{
 	about 'Enables current Git project proxy settings'
 	group 'proxy'
 
-	if _command_exists git; then
+	if $(command -v git &> /dev/null) ; then
 		git-disable-proxy
 
-		git config --add http.proxy "${BASH_IT_HTTP_PROXY:?}"
-		git config --add https.proxy "${BASH_IT_HTTPS_PROXY:?}"
+		git config --add http.proxy $BASH_IT_HTTP_PROXY
+		git config --add https.proxy $BASH_IT_HTTPS_PROXY
 		echo "Enabled Git project proxy settings"
 	fi
 }
 
-function svn-show-proxy() {
+
+svn-show-proxy ()
+{
 	about 'Shows SVN proxy settings'
 	group 'proxy'
 
-	if _command_exists svn && _command_exists python2; then
+	if $(command -v svn &> /dev/null) && $(command -v python2 &> /dev/null) ; then
 		echo ""
 		echo "SVN Proxy Settings"
 		echo "=================="
-		python2 - << END
+		python2 - <<END
 import ConfigParser, os
 config = ConfigParser.ConfigParser()
 config.read(os.path.expanduser('~/.subversion/servers'))
@@ -248,12 +265,13 @@ END
 	fi
 }
 
-function svn-disable-proxy() {
+svn-disable-proxy ()
+{
 	about 'Disables SVN proxy settings'
 	group 'proxy'
 
-	if _command_exists svn_command_exists python2; then
-		python2 - << END
+	if $(command -v svn &> /dev/null) && $(command -v python2 &> /dev/null) ; then
+		python2 - <<END
 import ConfigParser, os
 config = ConfigParser.ConfigParser()
 config.read(os.path.expanduser('~/.subversion/servers'))
@@ -276,14 +294,15 @@ END
 	fi
 }
 
-function svn-enable-proxy() {
+svn-enable-proxy ()
+{
 	about 'Enables SVN proxy settings'
 	group 'proxy'
 
-	if _command_exists svn _command_exists python2; then
-		local my_http_proxy="${1:-${BASH_IT_HTTP_PROXY:-}}"
+	if $(command -v svn &> /dev/null) && $(command -v python2 &> /dev/null) ; then
+		local my_http_proxy=${1:-$BASH_IT_HTTP_PROXY}
 
-		python2 - "${my_http_proxy:?}" "${BASH_IT_NO_PROXY:-}" << END
+		python2 - "$my_http_proxy" "$BASH_IT_NO_PROXY" <<END
 import ConfigParser, os, sys, urlparse
 pieces = urlparse.urlparse(sys.argv[1])
 host = pieces.hostname
@@ -312,11 +331,12 @@ END
 	fi
 }
 
-function ssh-show-proxy() {
+ssh-show-proxy ()
+{
 	about 'Shows SSH config proxy settings (from ~/.ssh/config)'
 	group 'proxy'
 
-	if [ -f ~/.ssh/config ]; then
+	if [ -f ~/.ssh/config ] ; then
 		echo ""
 		echo "SSH Config Enabled in ~/.ssh/config"
 		echo "==================================="
@@ -348,22 +368,25 @@ function ssh-show-proxy() {
 	fi
 }
 
-function ssh-disable-proxy() {
+ssh-disable-proxy ()
+{
 	about 'Disables SSH config proxy settings'
 	group 'proxy'
 
-	if [ -f ~/.ssh/config ]; then
-		sed -e's/^.*ProxyCommand/#	ProxyCommand/' "${BASH_IT_SED_I_PARAMETERS[@]}" ~/.ssh/config
+	if [ -f ~/.ssh/config ] ; then
+		sed -e's/^.*ProxyCommand/#	ProxyCommand/' "${BASH_IT_SED_I_PARAMETERS[@]}"  ~/.ssh/config
 		echo "Disabled SSH config proxy settings"
 	fi
 }
 
-function ssh-enable-proxy() {
+
+ssh-enable-proxy ()
+{
 	about 'Enables SSH config proxy settings'
 	group 'proxy'
 
-	if [ -f ~/.ssh/config ]; then
-		sed -e's/#	ProxyCommand/	ProxyCommand/' "${BASH_IT_SED_I_PARAMETERS[@]}" ~/.ssh/config
+	if [ -f ~/.ssh/config ] ; then
+		sed -e's/#	ProxyCommand/	ProxyCommand/' "${BASH_IT_SED_I_PARAMETERS[@]}"  ~/.ssh/config
 		echo "Enabled SSH config proxy settings"
 	fi
 }
diff --git a/plugins/available/pyenv.plugin.bash b/plugins/available/pyenv.plugin.bash
index 05d28478..9457f835 100644
--- a/plugins/available/pyenv.plugin.bash
+++ b/plugins/available/pyenv.plugin.bash
@@ -1,34 +1,13 @@
-# shellcheck shell=bash
 cite about-plugin
 about-plugin 'load pyenv, if you are using it'
 
-# https://github.com/pyenv/pyenv
+export PYENV_ROOT="$HOME/.pyenv"
+pathmunge "$PYENV_ROOT/bin"
 
-# Load after basher
-# BASH_IT_LOAD_PRIORITY: 260
+[[ `which pyenv 2>/dev/null` ]] && eval "$(pyenv init --path)"
+[[ `which pyenv 2>/dev/null` ]] && eval "$(pyenv init -)"
 
-# Don't modify the environment if we can't find the tool:
-# - Check if in $PATH already
-# - Check if installed manually to $PYENV_ROOT
-# - Check if installed manually to $HOME
-_command_exists pyenv \
-	|| [[ -n "$PYENV_ROOT" && -x "$PYENV_ROOT/bin/pyenv" ]] \
-	|| [[ -x "$HOME/.pyenv/bin/pyenv" ]] \
-	|| return 0
-
-# Set PYENV_ROOT, if not already set
-export PYENV_ROOT="${PYENV_ROOT:-$HOME/.pyenv}"
-
-# Add PYENV_ROOT/bin to PATH, if that's where it's installed
-if ! _command_exists pyenv && [[ -x "$PYENV_ROOT/bin/pyenv" ]]; then
-	pathmunge "$PYENV_ROOT/bin"
-fi
-
-# Initialize pyenv
-pathmunge "$PYENV_ROOT/shims"
-eval "$(pyenv init - bash)"
-
-# Load pyenv virtualenv if the virtualenv plugin is installed.
+#Load pyenv virtualenv if the virtualenv plugin is installed.
 if pyenv virtualenv-init - &> /dev/null; then
-	eval "$(pyenv virtualenv-init - bash)"
+  eval "$(pyenv virtualenv-init - bash)"
 fi
diff --git a/plugins/available/python.plugin.bash b/plugins/available/python.plugin.bash
index bd644e8b..77fa7dd6 100644
--- a/plugins/available/python.plugin.bash
+++ b/plugins/available/python.plugin.bash
@@ -1,32 +1,31 @@
-# shellcheck shell=bash
+cite about-plugin
 about-plugin 'alias "shttp" to SimpleHTTPServer'
 
-if _command_exists python3; then
-	alias shttp='python3 -m http.server'
-elif _command_exists python; then
-	alias shttp='python -m http.server'
+if [[ "$OSTYPE" == 'linux'* ]]
+then
+  alias shttp='python2 -m SimpleHTTPServer'
 else
-	_log_warning "Unable to load 'plugin/python' due to being unable to find a working 'python'"
-	return 1
+  alias shttp='python -m SimpleHTTPServer'
 fi
 
 function pyedit() {
-	about 'opens python module in your EDITOR'
-	param '1: python module to open'
-	example '$ pyedit requests'
-	group 'python'
+    about 'opens python module in your EDITOR'
+    param '1: python module to open'
+    example '$ pyedit requests'
+    group 'python'
 
-	xpyc="$(python -c "import os, sys; f = open(os.devnull, 'w'); sys.stderr = f; module = __import__('$1'); sys.stdout.write(module.__file__)")"
+    xpyc=`python -c "import os, sys; f = open(os.devnull, 'w'); sys.stderr = f; module = __import__('$1'); sys.stdout.write(module.__file__)"`
 
-	if [[ "$xpyc" == "" ]]; then
-		echo "Python module $1 not found"
-		return 1
-	elif [[ "$xpyc" == *__init__.py* ]]; then
-		xpydir="${xpyc%/*}"
-		echo "$EDITOR $xpydir"
-		${VISUAL:-${EDITOR:-${ALTERNATE_EDITOR:-nano}}} "$xpydir"
-	else
-		echo "$EDITOR ${xpyc%.*}.py"
-		${VISUAL:-${EDITOR:-${ALTERNATE_EDITOR:-nano}}} "${xpyc%.*}.py"
-	fi
+    if [[ "$xpyc" == "" ]]; then
+        echo "Python module $1 not found"
+        return -1
+
+    elif [[ $xpyc == *__init__.py* ]]; then
+        xpydir=`dirname $xpyc`;
+        echo "$EDITOR $xpydir";
+        $EDITOR "$xpydir";
+    else
+        echo "$EDITOR ${xpyc%.*}.py";
+        $EDITOR "${xpyc%.*}.py";
+    fi
 }
diff --git a/plugins/available/rakudobrew.plugin.bash b/plugins/available/rakudobrew.plugin.bash
new file mode 100644
index 00000000..98ff09da
--- /dev/null
+++ b/plugins/available/rakudobrew.plugin.bash
@@ -0,0 +1,9 @@
+# Load rakudobrew, if you are using it
+
+cite about-plugin
+about-plugin 'load rakudobrew, if you are using it'
+
+pathmunge "$HOME"/.rakudobrew/bin
+[ -x `which rakudobrew` ] && eval "$(rakudobrew init Bash)"
+
+#[ -d "$HOME"/.rakudobrew/plugins/ruby-build ] && pathmunge "$HOME"/.rakudobrew/plugins/ruby-build/bin
diff --git a/plugins/available/roo.plugin.bash b/plugins/available/roo.plugin.bash
new file mode 100644
index 00000000..00ea6638
--- /dev/null
+++ b/plugins/available/roo.plugin.bash
@@ -0,0 +1,9 @@
+cite about-plugin
+about-plugin 'load roo, if you are using it'
+
+# roo
+if [ -d "/opt/spring-roo" ]; then
+  export ROO_HOME="/opt/spring-roo"
+  export PATH="$PATH:$ROO_HOME/bin"
+fi
+
diff --git a/plugins/available/rustup.plugin.bash b/plugins/available/rustup.plugin.bash
new file mode 100644
index 00000000..0a32671d
--- /dev/null
+++ b/plugins/available/rustup.plugin.bash
@@ -0,0 +1,18 @@
+# plugin for rustup
+
+cite about-plugin
+about-plugin 'rustup plugin for rust'
+
+if [[ -e "${HOME}/.cargo/bin" ]] ; then
+
+  # load rustup bin dir into path if it exists
+  pathmunge "${HOME}/.cargo/bin"
+
+fi
+
+if [[ `which rustup` ]] ; then
+
+  # init rustup
+  eval "$(rustup completions bash)"
+
+fi
diff --git a/plugins/available/todo.plugin.bash b/plugins/available/todo.plugin.bash
index 6b495274..cf1479e2 100644
--- a/plugins/available/todo.plugin.bash
+++ b/plugins/available/todo.plugin.bash
@@ -1,6 +1,12 @@
-# shellcheck shell=bash
+#!/bin/bash
+cite about-plugin
 about-plugin 'Todo.txt integration'
 
 # you may override any of the exported variables below in your .bash_profile
-: "${TODOTXT_DEFAULT_ACTION:=ls}"
-export TODOTXT_DEFAULT_ACTION
+
+if [ -z "$TODOTXT_DEFAULT_ACTION" ]; then
+  # typing 't' by itself will list current todos
+  export TODOTXT_DEFAULT_ACTION=ls
+fi
+
+alias t='todo.sh'
diff --git a/plugins/available/xterm.plugin.bash b/plugins/available/xterm.plugin.bash
index 740460e4..b8747a25 100644
--- a/plugins/available/xterm.plugin.bash
+++ b/plugins/available/xterm.plugin.bash
@@ -30,11 +30,7 @@ precmd_xterm_title() {
 }
 
 preexec_xterm_title() {
-	local command_line="${BASH_COMMAND:-${1:-}}"
-	local directory_name short_command
-	directory_name="$(_short-dirname)"
-	short_command="$(_short-command "${command_line}")"
-	set_xterm_title "${short_command} {${directory_name}} (${SHORT_USER:-${USER}}@${SHORT_HOSTNAME:-${HOSTNAME}})"
+	set_xterm_title "$(_short-command "${1:-}") {$(_short-dirname)} (${SHORT_USER:-${USER}}@${SHORT_HOSTNAME:-${HOSTNAME}})"
 }
 
 case "${TERM:-dumb}" in
diff --git a/themes/.nvimlog b/themes/.nvimlog
new file mode 100644
index 00000000..e69de29b
diff --git a/themes/90210/90210.theme.bash b/themes/90210/90210.theme.bash
index 6b94427a..3db3f17b 100644
--- a/themes/90210/90210.theme.bash
+++ b/themes/90210/90210.theme.bash
@@ -1,21 +1,20 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_DIRTY=" ${red?}✗"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
+SCM_THEME_PROMPT_DIRTY=" ${red}✗"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓"
 SCM_THEME_PROMPT_PREFIX=" |"
-SCM_THEME_PROMPT_SUFFIX="${green?}|"
+SCM_THEME_PROMPT_SUFFIX="${green}|"
 
-GIT_THEME_PROMPT_DIRTY=" ${red?}✗"
-GIT_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
-GIT_THEME_PROMPT_PREFIX=" ${green?}|"
-GIT_THEME_PROMPT_SUFFIX="${green?}|"
+GIT_THEME_PROMPT_DIRTY=" ${red}✗"
+GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓"
+GIT_THEME_PROMPT_PREFIX=" ${green}|"
+GIT_THEME_PROMPT_SUFFIX="${green}|"
 
 # Nicely formatted terminal prompt
 function prompt_command() {
-	local scm_prompt_info
-	scm_prompt_info="$(scm_prompt_info)"
-	PS1="\n${bold_black?}[${blue?}\@${bold_black?}]-${bold_black?}[${green?}\u${yellow?}@${green?}\h${bold_black?}]-${bold_black?}[${purple?}\w${bold_black?}]-${scm_prompt_info?}\n${reset_color?}\$ "
+	PS1="\n${bold_black}[${blue}\@${bold_black}]-${bold_black}[${green}\u${yellow}@${green}\h${bold_black}]-${bold_black}[${purple}\w${bold_black}]-$(scm_prompt_info)\n${reset_color}\$ "
 }
 
 safe_append_prompt_command prompt_command
diff --git a/themes/atomic/atomic.theme.bash b/themes/atomic/atomic.theme.bash
index c59dbdc9..03dc9e95 100644
--- a/themes/atomic/atomic.theme.bash
+++ b/themes/atomic/atomic.theme.bash
@@ -1,5 +1,6 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
 # Atomic Bash Prompt for Bash-it
 # By lfelipe base on the theme brainy of MunifTanjim
@@ -28,48 +29,48 @@ Face="\342\230\273"
 ## Parsers ##
 #############
 
-function ____atomic_top_left_parse() {
-	local ifs_old="${IFS}"
-	local IFS="|"
+____atomic_top_left_parse() {
+	ifs_old="${IFS}"
+	IFS="|"
 	read -r -a args <<< "$@"
 	IFS="${ifs_old}"
-	if [[ -n "${args[3]:-}" ]]; then
-		_TOP_LEFT+="${args[2]?}${args[3]?}"
+	if [ -n "${args[3]}" ]; then
+		_TOP_LEFT+="${args[2]}${args[3]}"
 	fi
-	_TOP_LEFT+="${args[0]?}${args[1]:-}"
-	if [[ -n "${args[4]:-}" ]]; then
-		_TOP_LEFT+="${args[2]?}${args[4]?}"
+	_TOP_LEFT+="${args[0]}${args[1]}"
+	if [ -n "${args[4]}" ]; then
+		_TOP_LEFT+="${args[2]}${args[4]}"
 	fi
 	_TOP_LEFT+=""
 }
 
-function ____atomic_top_right_parse() {
-	local ifs_old="${IFS}"
-	local IFS="|"
+____atomic_top_right_parse() {
+	ifs_old="${IFS}"
+	IFS="|"
 	read -r -a args <<< "$@"
 	IFS="${ifs_old}"
 	_TOP_RIGHT+=" "
-	if [[ -n "${args[3]:-}" ]]; then
-		_TOP_RIGHT+="${args[2]?}${args[3]?}"
+	if [ -n "${args[3]}" ]; then
+		_TOP_RIGHT+="${args[2]}${args[3]}"
 	fi
-	_TOP_RIGHT+="${args[0]?}${args[1]:-}"
-	if [[ -n "${args[4]:-}" ]]; then
-		_TOP_RIGHT+="${args[2]?}${args[4]?}"
+	_TOP_RIGHT+="${args[0]}${args[1]}"
+	if [ -n "${args[4]}" ]; then
+		_TOP_RIGHT+="${args[2]}${args[4]}"
 	fi
 	__TOP_RIGHT_LEN=$((__TOP_RIGHT_LEN + ${#args[1]} + ${#args[3]} + ${#args[4]} + 1))
 	((__SEG_AT_RIGHT += 1))
 }
 
-function ____atomic_bottom_parse() {
-	local ifs_old="${IFS}"
-	local IFS="|"
+____atomic_bottom_parse() {
+	ifs_old="${IFS}"
+	IFS="|"
 	read -r -a args <<< "$@"
 	IFS="${ifs_old}"
-	_BOTTOM+="${args[0]?}${args[1]?${FUNCNAME[0]}}"
-	[[ ${#args[1]} -gt 0 ]] && _BOTTOM+=" "
+	_BOTTOM+="${args[0]}${args[1]}"
+	[ ${#args[1]} -gt 0 ] && _BOTTOM+=" "
 }
 
-function ____atomic_top() {
+____atomic_top() {
 	_TOP_LEFT=""
 	_TOP_RIGHT=""
 	__TOP_RIGHT_LEN=0
@@ -77,7 +78,7 @@ function ____atomic_top() {
 
 	for seg in ${___ATOMIC_TOP_LEFT}; do
 		info="$(___atomic_prompt_"${seg}")"
-		[[ -n "${info}" ]] && ____atomic_top_left_parse "${info}"
+		[ -n "${info}" ] && ____atomic_top_left_parse "${info}"
 	done
 
 	___cursor_right="\e[500C"
@@ -85,21 +86,21 @@ function ____atomic_top() {
 
 	for seg in ${___ATOMIC_TOP_RIGHT}; do
 		info="$(___atomic_prompt_"${seg}")"
-		[[ -n "${info}" ]] && ____atomic_top_right_parse "${info}"
+		[ -n "${info}" ] && ____atomic_top_right_parse "${info}"
 	done
 
-	[[ $__TOP_RIGHT_LEN -gt 0 ]] && __TOP_RIGHT_LEN=$((__TOP_RIGHT_LEN - 0))
+	[ $__TOP_RIGHT_LEN -gt 0 ] && __TOP_RIGHT_LEN=$((__TOP_RIGHT_LEN - 0))
 	___cursor_adjust="\e[${__TOP_RIGHT_LEN}D"
 	_TOP_LEFT+="${___cursor_adjust}"
 
 	printf "%s%s" "${_TOP_LEFT}" "${_TOP_RIGHT}"
 }
 
-function ____atomic_bottom() {
+____atomic_bottom() {
 	_BOTTOM=""
 	for seg in $___ATOMIC_BOTTOM; do
 		info="$(___atomic_prompt_"${seg}")"
-		[[ -n "${info}" ]] && ____atomic_bottom_parse "${info}"
+		[ -n "${info}" ] && ____atomic_bottom_parse "${info}"
 	done
 	printf "\n%s" "${_BOTTOM}"
 }
@@ -108,96 +109,95 @@ function ____atomic_bottom() {
 ## Segments ##
 ##############
 
-function ___atomic_prompt_user_info() {
-	local color="${white?}" box
-	local info="${IYellow}\u${IRed}@${IGreen}\h"
-	box="${normal?}${LineA?}\$([[ \$? != 0 ]] && echo \"${BIWhite?}[${IRed?}${SX?}${BIWhite?}]${normal?}${Line?}\")${Line?}${BIWhite?}[|${BIWhite?}]${normal?}${Line?}"
+___atomic_prompt_user_info() {
+	color=$white
+	box="${normal}${LineA}\$([[ \$? != 0 ]] && echo \"${BIWhite}[${IRed}${SX}${BIWhite}]${normal}${Line}\")${Line}${BIWhite}[|${BIWhite}]${normal}${Line}"
+	info="${IYellow}\u${IRed}@${IGreen}\h"
 
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${white?}" "${box}"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${white}" "${box}"
 }
 
-function ___atomic_prompt_dir() {
-	local color="${IRed?}"
-	local box="[|]${normal}"
-	local info="\w"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white?}" "${box}"
+___atomic_prompt_dir() {
+	color=${IRed}
+	box="[|]${normal}"
+	info="\w"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white}" "${box}"
 }
 
-function ___atomic_prompt_scm() {
-	[[ "${THEME_SHOW_SCM:-}" != "true" ]] && return
-	local color="${bold_green?}" box info
-	box="${Line?}[${IWhite?}$(scm_char)] "
+___atomic_prompt_scm() {
+	[ "${THEME_SHOW_SCM}" != "true" ] && return
+	color=$bold_green
+	box="${Line}[${IWhite}$(scm_char)] "
 	info="$(scm_prompt_info)"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white?}" "${box}"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white}" "${box}"
 }
 
-function ___atomic_prompt_python() {
-	[[ "${THEME_SHOW_PYTHON:-}" != "true" ]] && return
-	local color="${bold_yellow?}"
-	local box="[|]" info
+___atomic_prompt_python() {
+	[ "${THEME_SHOW_PYTHON}" != "true" ] && return
+	color=$bold_yellow
+	box="[|]"
 	info="$(python_version_prompt)"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_blue?}" "${box}"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_blue}" "${box}"
 }
 
-function ___atomic_prompt_ruby() {
-	[[ "${THEME_SHOW_RUBY:-}" != "true" ]] && return
-	local color="${bold_white?}"
-	local box="[|]" info
+___atomic_prompt_ruby() {
+	[ "${THEME_SHOW_RUBY}" != "true" ] && return
+	color=$bold_white
+	box="[|]"
 	info="rb-$(ruby_version_prompt)"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_red?}" "${box}"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_red}" "${box}"
 }
 
-function ___atomic_prompt_todo() {
-	[[ "${THEME_SHOW_TODO:-}" != "true" ||
-		-z "$(which todo.sh)" ]] && return
-	local color="${bold_white?}"
-	local box="[|]" info
+___atomic_prompt_todo() {
+	[ "${THEME_SHOW_TODO}" != "true" ] \
+		|| [ -z "$(which todo.sh)" ] && return
+	color=$bold_white
+	box="[|]"
 	info="t:$(todo.sh ls | grep -E "TODO: [0-9]+ of ([0-9]+)" | awk '{ print $4 }')"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_green?}" "${box}"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_green}" "${box}"
 }
 
-function ___atomic_prompt_clock() {
-	[[ "${THEME_SHOW_CLOCK:-}" != "true" ]] && return
-	local color="${THEME_CLOCK_COLOR:-}"
-	local box="[|]" info
+___atomic_prompt_clock() {
+	[ "${THEME_SHOW_CLOCK}" != "true" ] && return
+	color=$THEME_CLOCK_COLOR
+	box="[|]"
 	info="$(date +"${THEME_CLOCK_FORMAT}")"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white?}" "${box}"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white}" "${box}"
 }
 
-function ___atomic_prompt_battery() {
-	local batp box info
+___atomic_prompt_battery() {
 	! _command_exists battery_percentage \
-		|| [[ "${THEME_SHOW_BATTERY:-}" != "true" ]] \
-		|| [[ "$(battery_percentage)" = "no" ]] && return
+		|| [ "${THEME_SHOW_BATTERY}" != "true" ] \
+		|| [ "$(battery_percentage)" = "no" ] && return
 
 	batp=$(battery_percentage)
-	if [[ "$batp" -eq 50 || "$batp" -gt 50 ]]; then
-		color="${bold_green?}"
-	elif [[ "$batp" -lt 50 && "$batp" -gt 25 ]]; then
-		color="${bold_yellow?}"
-	elif [[ "$batp" -eq 25 || "$batp" -lt 25 ]]; then
-		color="${IRed?}"
+	if [ "$batp" -eq 50 ] || [ "$batp" -gt 50 ]; then
+		color=$bold_green
+	elif [ "$batp" -lt 50 ] && [ "$batp" -gt 25 ]; then
+		color=$bold_yellow
+	elif [ "$batp" -eq 25 ] || [ "$batp" -lt 25 ]; then
+		color=$IRed
 	fi
 	box="[|]"
 	ac_adapter_connected && info="+"
 	ac_adapter_disconnected && info="-"
 	info+=$batp
-	[[ "$batp" -eq 100 || "$batp" -gt 100 ]] && info="AC"
-	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white?}" "${box}"
+	[ "$batp" -eq 100 ] || [ "$batp" -gt 100 ] && info="AC"
+	printf "%s|%s|%s|%s" "${color}" "${info}" "${bold_white}" "${box}"
 }
 
-function ___atomic_prompt_exitcode() {
-	[[ "${THEME_SHOW_EXITCODE:-}" != "true" ]] && return
-	local color="${bold_purple?}"
-	[[ "${exitcode?}" -ne 0 ]] && printf "%s|%s" "${color}" "${exitcode}"
+___atomic_prompt_exitcode() {
+	[ "${THEME_SHOW_EXITCODE}" != "true" ] && return
+	color=$bold_purple
+	[ "$exitcode" -ne 0 ] && printf "%s|%s" "${color}" "${exitcode}"
 }
 
-function ___atomic_prompt_char() {
-	local color="${white?}"
-	local prompt_char="${__ATOMIC_PROMPT_CHAR_PS1?}"
-	if [[ "${THEME_SHOW_SUDO:-}" == "true" ]]; then
+___atomic_prompt_char() {
+	color=$white
+	prompt_char="${__ATOMIC_PROMPT_CHAR_PS1}"
+	if [ "${THEME_SHOW_SUDO}" == "true" ]; then
 		if sudo -vn 1> /dev/null 2>&1; then
-			prompt_char="${__ATOMIC_PROMPT_CHAR_PS1_SUDO?}"
+			prompt_char="${__ATOMIC_PROMPT_CHAR_PS1_SUDO}"
 		fi
 	fi
 	printf "%s|%s" "${color}" "${prompt_char}"
@@ -207,17 +207,19 @@ function ___atomic_prompt_char() {
 ## cli ##
 #########
 
-function __atomic_show() {
-	local _seg="${1?}"
+__atomic_show() {
+	typeset _seg=${1:-}
+	shift
 	export "THEME_SHOW_${_seg}"=true
 }
 
-function __atomic_hide() {
-	local _seg="${1?}"
+__atomic_hide() {
+	typeset _seg=${1:-}
+	shift
 	export "THEME_SHOW_${_seg}"=false
 }
 
-function _atomic_completion() {
+_atomic_completion() {
 	local cur _action actions segments
 	COMPREPLY=()
 	cur="${COMP_WORDS[COMP_CWORD]}"
@@ -237,26 +239,22 @@ function _atomic_completion() {
 	return 0
 }
 
-function atomic() {
-	local action="${1?}"
+atomic() {
+	typeset action=${1:-}
 	shift
-	local segs=("${@?}")
-	local func
-	case "${action}" in
+	typeset segs=${*:-}
+	typeset func
+	case $action in
 		show)
 			func=__atomic_show
 			;;
 		hide)
 			func=__atomic_hide
 			;;
-		*)
-			_log_error "${FUNCNAME[0]}: unknown action '${action}'"
-			return 1
-			;;
 	esac
-	for seg in "${segs[@]}"; do
-		seg="$(printf "%s" "${seg}" | tr '[:lower:]' '[:upper:]')"
-		"${func}" "${seg}"
+	for seg in ${segs}; do
+		seg=$(printf "%s" "${seg}" | tr '[:lower:]' '[:upper:]')
+		$func "${seg}"
 	done
 }
 
@@ -266,55 +264,55 @@ complete -F _atomic_completion atomic
 ## Variables ##
 ###############
 
-SCM_THEME_PROMPT_PREFIX=""
-SCM_THEME_PROMPT_SUFFIX=""
+export SCM_THEME_PROMPT_PREFIX=""
+export SCM_THEME_PROMPT_SUFFIX=""
 
-RBENV_THEME_PROMPT_PREFIX=""
-RBENV_THEME_PROMPT_SUFFIX=""
-RBFU_THEME_PROMPT_PREFIX=""
-RBFU_THEME_PROMPT_SUFFIX=""
-RVM_THEME_PROMPT_PREFIX=""
-RVM_THEME_PROMPT_SUFFIX=""
+export RBENV_THEME_PROMPT_PREFIX=""
+export RBENV_THEME_PROMPT_SUFFIX=""
+export RBFU_THEME_PROMPT_PREFIX=""
+export RBFU_THEME_PROMPT_SUFFIX=""
+export RVM_THEME_PROMPT_PREFIX=""
+export RVM_THEME_PROMPT_SUFFIX=""
 
-SCM_THEME_PROMPT_DIRTY=" ${bold_red}✗${normal}"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓${normal}"
+export SCM_THEME_PROMPT_DIRTY=" ${bold_red}✗${normal}"
+export SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓${normal}"
 
-: "${THEME_SHOW_SUDO:="true"}"
-: "${THEME_SHOW_SCM:="true"}"
-: "${THEME_SHOW_RUBY:="false"}"
-: "${THEME_SHOW_PYTHON:="false"}"
-: "${THEME_SHOW_CLOCK:="true"}"
-: "${THEME_SHOW_TODO:="false"}"
-: "${THEME_SHOW_BATTERY:="true"}"
-: "${THEME_SHOW_EXITCODE:="false"}"
+THEME_SHOW_SUDO=${THEME_SHOW_SUDO:-"true"}
+THEME_SHOW_SCM=${THEME_SHOW_SCM:-"true"}
+THEME_SHOW_RUBY=${THEME_SHOW_RUBY:-"false"}
+THEME_SHOW_PYTHON=${THEME_SHOW_PYTHON:-"false"}
+THEME_SHOW_CLOCK=${THEME_SHOW_CLOCK:-"true"}
+THEME_SHOW_TODO=${THEME_SHOW_TODO:-"false"}
+THEME_SHOW_BATTERY=${THEME_SHOW_BATTERY:-"true"}
+THEME_SHOW_EXITCODE=${THEME_SHOW_EXITCODE:-"false"}
 
-: "${THEME_CLOCK_COLOR:=${BICyan?}}"
-: "${THEME_CLOCK_FORMAT:="%a %b %d - %H:%M"}"
+THEME_CLOCK_COLOR=${THEME_CLOCK_COLOR:-"${BICyan}"}
+THEME_CLOCK_FORMAT=${THEME_CLOCK_FORMAT:-"%a %b %d - %H:%M"}
 
-__ATOMIC_PROMPT_CHAR_PS1=${THEME_PROMPT_CHAR_PS1:-"${normal?}${LineB?}${bold_white?}${Circle?}"}
-__ATOMIC_PROMPT_CHAR_PS2=${THEME_PROMPT_CHAR_PS2:-"${normal?}${LineB?}${bold_white?}${Circle?}"}
+__ATOMIC_PROMPT_CHAR_PS1=${THEME_PROMPT_CHAR_PS1:-"${normal}${LineB}${bold_white}${Circle}"}
+__ATOMIC_PROMPT_CHAR_PS2=${THEME_PROMPT_CHAR_PS2:-"${normal}${LineB}${bold_white}${Circle}"}
 
-__ATOMIC_PROMPT_CHAR_PS1_SUDO=${THEME_PROMPT_CHAR_PS1_SUDO:-"${normal?}${LineB?}${bold_red?}${Face?}"}
-__ATOMIC_PROMPT_CHAR_PS2_SUDO=${THEME_PROMPT_CHAR_PS2_SUDO:-"${normal?}${LineB?}${bold_red?}${Face?}"}
+__ATOMIC_PROMPT_CHAR_PS1_SUDO=${THEME_PROMPT_CHAR_PS1_SUDO:-"${normal}${LineB}${bold_red}${Face}"}
+__ATOMIC_PROMPT_CHAR_PS2_SUDO=${THEME_PROMPT_CHAR_PS2_SUDO:-"${normal}${LineB}${bold_red}${Face}"}
 
-: "${___ATOMIC_TOP_LEFT:="user_info dir scm"}"
-: "${___ATOMIC_TOP_RIGHT:="exitcode python ruby todo clock battery"}"
-: "${___ATOMIC_BOTTOM:="char"}"
+___ATOMIC_TOP_LEFT=${___ATOMIC_TOP_LEFT:-"user_info dir scm"}
+___ATOMIC_TOP_RIGHT=${___ATOMIC_TOP_RIGHT:-"exitcode python ruby todo clock battery"}
+___ATOMIC_BOTTOM=${___ATOMIC_BOTTOM:-"char"}
 
 ############
 ## Prompt ##
 ############
 
-function __atomic_ps1() {
-	printf "%s%s%s" "$(____atomic_top)" "$(____atomic_bottom)" "${normal?}"
+__atomic_ps1() {
+	printf "%s%s%s" "$(____atomic_top)" "$(____atomic_bottom)" "${normal}"
 }
 
-function __atomic_ps2() {
-	color="${bold_white?}"
-	printf "%s%s%s" "${color}" "${__ATOMIC_PROMPT_CHAR_PS2?}  " "${normal?}"
+__atomic_ps2() {
+	color=$bold_white
+	printf "%s%s%s" "${color}" "${__ATOMIC_PROMPT_CHAR_PS2}  " "${normal}"
 }
 
-function _atomic_prompt() {
+_atomic_prompt() {
 	exitcode="$?"
 
 	PS1="$(__atomic_ps1)"
diff --git a/themes/bakke/bakke.theme.bash b/themes/bakke/bakke.theme.bash
index a3670b07..d7bfbbe8 100644
--- a/themes/bakke/bakke.theme.bash
+++ b/themes/bakke/bakke.theme.bash
@@ -1,15 +1,16 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_DIRTY=" ${red?}✗"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
+SCM_THEME_PROMPT_DIRTY=" ${red}✗"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓"
 SCM_THEME_PROMPT_PREFIX=" |"
-SCM_THEME_PROMPT_SUFFIX="${green?}|"
+SCM_THEME_PROMPT_SUFFIX="${green}|"
 
-GIT_THEME_PROMPT_DIRTY=" ${red?}✗"
-GIT_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
-GIT_THEME_PROMPT_PREFIX=" ${green?}|"
-GIT_THEME_PROMPT_SUFFIX="${green?}|"
+GIT_THEME_PROMPT_DIRTY=" ${red}✗"
+GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓"
+GIT_THEME_PROMPT_PREFIX=" ${green}|"
+GIT_THEME_PROMPT_SUFFIX="${green}|"
 
 RVM_THEME_PROMPT_PREFIX="|"
 RVM_THEME_PROMPT_SUFFIX="|"
@@ -18,10 +19,7 @@ function prompt_command() {
 	#PS1="${bold_cyan}$(scm_char)${green}$(scm_prompt_info)${purple}$(ruby_version_prompt) ${yellow}\h ${reset_color}in ${green}\w ${reset_color}\n${green}→${reset_color} "
 	#PS1="\n${purple}\h: ${reset_color} ${green}\w\n${bold_cyan}$(scm_char)${green}$(scm_prompt_info) ${green}→${reset_color} "
 	#PS1="\n${cyan}\h: ${reset_color} ${yellow}\w\n${red}$(scm_char)${red}$(scm_prompt_info) ${green}→${reset_color} "
-	local virtualenv_prompt scm_prompt_info
-	virtualenv_prompt="$(virtualenv_prompt)"
-	scm_prompt_info="$(scm_prompt_info)"
-	PS1="\n${cyan?}\h:${virtualenv_prompt} ${reset_color?} ${yellow?}\w ${green?}${scm_prompt_info}\n${reset_color?}→ "
+	PS1="\n${cyan}\h:$(virtualenv_prompt) ${reset_color} ${yellow}\w ${green}$(scm_prompt_info)\n${reset_color}→ "
 }
 
 safe_append_prompt_command prompt_command
diff --git a/themes/barbuk/barbuk.theme.bash b/themes/barbuk/barbuk.theme.bash
index 6e6eb88a..b614d148 100644
--- a/themes/barbuk/barbuk.theme.bash
+++ b/themes/barbuk/barbuk.theme.bash
@@ -1,11 +1,8 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
-
-# Prompt defaut configuration
-BARBUK_PROMPT=${BARBUK_PROMPT:="git-uptream-remote-logo ssh path scm python_venv ruby node terraform cloud duration exit"}
+# shellcheck disable=SC2154 #TODO: fix these all.
 
 # Theme custom glyphs
-# SCM
 SCM_GIT_CHAR_GITLAB=${BARBUK_GITLAB_CHAR:='  '}
 SCM_GIT_CHAR_BITBUCKET=${BARBUK_BITBUCKET_CHAR:='  '}
 SCM_GIT_CHAR_GITHUB=${BARBUK_GITHUB_CHAR:='  '}
@@ -13,20 +10,13 @@ SCM_GIT_CHAR_DEFAULT=${BARBUK_GIT_DEFAULT_CHAR:='  '}
 SCM_GIT_CHAR_ICON_BRANCH=${BARBUK_GIT_BRANCH_ICON:=''}
 SCM_HG_CHAR=${BARBUK_HG_CHAR:='☿ '}
 SCM_SVN_CHAR=${BARBUK_SVN_CHAR:='⑆ '}
-# Exit code
 EXIT_CODE_ICON=${BARBUK_EXIT_CODE_ICON:=' '}
-# Programming and tools
 PYTHON_VENV_CHAR=${BARBUK_PYTHON_VENV_CHAR:=' '}
-RUBY_CHAR=${BARBUK_RUBY_CHAR:=' '}
-NODE_CHAR=${BARBUK_NODE_CHAR:=' '}
-TERRAFORM_CHAR=${BARBUK_TERRAFORM_CHAR:="❲t❳ "}
-# Cloud
-AWS_PROFILE_CHAR=${BARBUK_AWS_PROFILE_CHAR:=" aws "}
-SCALEWAY_PROFILE_CHAR=${BARBUK_SCALEWAY_PROFILE_CHAR:=" scw "}
-GCLOUD_CHAR=${BARBUK_GCLOUD_CHAR:=" google "}
+COMMAND_DURATION_ICON=${BARBUK_COMMAND_DURATION_ICON:-"$bold_blue  "}
 
 # Command duration
 COMMAND_DURATION_MIN_SECONDS=${COMMAND_DURATION_MIN_SECONDS:-1}
+COMMAND_DURATION_COLOR="$normal"
 
 # Ssh user and hostname display
 SSH_INFO=${BARBUK_SSH_INFO:=true}
@@ -34,32 +24,24 @@ HOST_INFO=${BARBUK_HOST_INFO:=long}
 
 # Bash-it default glyphs customization
 SCM_NONE_CHAR=
-SCM_THEME_PROMPT_DIRTY=" ${bold_red?}✗"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
+SCM_THEME_PROMPT_DIRTY=" ${bold_red}✗"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓"
 SCM_THEME_PROMPT_PREFIX="|"
-SCM_THEME_PROMPT_SUFFIX="${green?}| "
-SCM_GIT_BEHIND_CHAR="${bold_red?}↓${normal?}"
-SCM_GIT_AHEAD_CHAR="${bold_green?}↑${normal?}"
+SCM_THEME_PROMPT_SUFFIX="${green}| "
+SCM_GIT_BEHIND_CHAR="${bold_red}↓${normal}"
+SCM_GIT_AHEAD_CHAR="${bold_green}↑${normal}"
 SCM_GIT_UNTRACKED_CHAR="⌀"
-SCM_GIT_UNSTAGED_CHAR="${bold_yellow?}•${normal?}"
-SCM_GIT_STAGED_CHAR="${bold_green?}+${normal?}"
-GIT_THEME_PROMPT_DIRTY=" ${bold_red?}✗"
-GIT_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
-GIT_THEME_PROMPT_PREFIX="${cyan?}"
-GIT_THEME_PROMPT_SUFFIX="${cyan?}"
-SCM_THEME_BRANCH_TRACK_PREFIX="${normal?} ⤏  ${cyan?}"
+SCM_GIT_UNSTAGED_CHAR="${bold_yellow}•${normal}"
+SCM_GIT_STAGED_CHAR="${bold_green}+${normal}"
+GIT_THEME_PROMPT_DIRTY=" ${bold_red}✗"
+GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓"
+GIT_THEME_PROMPT_PREFIX="${cyan}"
+GIT_THEME_PROMPT_SUFFIX="${cyan}"
+SCM_THEME_BRANCH_TRACK_PREFIX="${normal} ⤏  ${cyan}"
 SCM_THEME_CURRENT_USER_PREFFIX='  '
 SCM_GIT_SHOW_CURRENT_USER=false
-NVM_THEME_PROMPT_PREFIX=''
-NVM_THEME_PROMPT_SUFFIX=''
-RVM_THEME_PROMPT_PREFIX=''
-RVM_THEME_PROMPT_SUFFIX=''
-RBENV_THEME_PROMPT_PREFIX=' '
-RBENV_THEME_PROMPT_SUFFIX=''
-RBFU_THEME_PROMPT_PREFIX=''
-RBFU_THEME_PROMPT_SUFFIX=''
-
-function __git-uptream-remote-logo_prompt() {
+
+function _git-uptream-remote-logo {
 	[[ "$(_git-upstream)" == "" ]] && SCM_GIT_CHAR="$SCM_GIT_CHAR_DEFAULT"
 
 	local remote remote_domain
@@ -75,72 +57,36 @@ function __git-uptream-remote-logo_prompt() {
 		bitbucket) SCM_GIT_CHAR="$SCM_GIT_CHAR_BITBUCKET" ;;
 		*) SCM_GIT_CHAR="$SCM_GIT_CHAR_DEFAULT" ;;
 	esac
-
-	echo "${purple?}$(scm_char)"
 }
 
-function git_prompt_info() {
+function git_prompt_info {
 	git_prompt_vars
-	echo -e "on $SCM_GIT_CHAR_ICON_BRANCH $SCM_PREFIX$SCM_BRANCH$SCM_STATE$SCM_GIT_AHEAD$SCM_GIT_BEHIND$SCM_GIT_STASH$SCM_SUFFIX "
+	echo -e " on $SCM_GIT_CHAR_ICON_BRANCH $SCM_PREFIX$SCM_BRANCH$SCM_STATE$SCM_GIT_AHEAD$SCM_GIT_BEHIND$SCM_GIT_STASH$SCM_SUFFIX"
 }
 
-function __exit_prompt() {
-	if [[ "$exit_code" -ne 0 ]]; then
-		echo "${purple?}${EXIT_CODE_ICON}${yellow?}${exit_code}${bold_orange?} "
+function _exit-code {
+	if [[ "$1" -ne 0 ]]; then
+		exit_code=" ${purple}${EXIT_CODE_ICON}${yellow}${exit_code}${bold_orange}"
 	else
-		echo "${bold_green}"
-	fi
-}
-
-function __aws_profile_prompt() {
-	if [[ -n "${AWS_PROFILE}" ]]; then
-		echo -n "${bold_purple?}${AWS_PROFILE_CHAR}${normal?}${AWS_PROFILE} "
-	fi
-}
-
-function __scaleway_profile_prompt() {
-	if [[ -n "${SCW_PROFILE}" ]]; then
-		echo -n "${bold_purple?}${SCALEWAY_PROFILE_CHAR}${normal?}${SCW_PROFILE} "
+		exit_code="${bold_green}"
 	fi
 }
 
-function __gcloud_prompt() {
-	local active_gcloud_account=""
+function _prompt {
+	local exit_code="$?" wrap_char=' ' dir_color=$green ssh_info='' python_venv='' host command_duration=
 
-	active_gcloud_account="$(active_gcloud_account_prompt)"
-	[[ -n "${active_gcloud_account}" ]] && echo "${bold_purple?}${GCLOUD_CHAR}${normal?}${active_gcloud_account} "
-}
+	command_duration=$(_command_duration)
 
-function __cloud_prompt() {
-	__aws_profile_prompt
-	__scaleway_profile_prompt
-	__gcloud_prompt
-}
+	_exit-code exit_code
+	_git-uptream-remote-logo
 
-function __terraform_prompt() {
-	local terraform_workspace=""
+	history -a
 
-	if [ -d .terraform ]; then
-		terraform_workspace="$(terraform_workspace_prompt)"
-		[[ -n "${terraform_workspace}" ]] && echo "${bold_purple?}${TERRAFORM_CHAR}${normal?}${terraform_workspace} "
+	# Detect root shell
+	if [ "$(whoami)" = root ]; then
+		dir_color=$red
 	fi
-}
-
-function __node_prompt() {
-	local node_version=""
-
-	node_version="$(node_version_prompt)"
-	[[ -n "${node_version}" ]] && echo "${bold_purple?}${NODE_CHAR}${normal?}${node_version} "
-}
 
-function __ruby_prompt() {
-	local ruby_version=""
-
-	ruby_version="$(ruby_version_prompt)"
-	[[ -n "${ruby_version}" ]] && echo "${bold_purple?}${RUBY_CHAR}${normal?}${ruby_version} "
-}
-
-function __ssh_prompt() {
 	# Detect ssh
 	if [[ -n "${SSH_CONNECTION}" ]] && [ "$SSH_INFO" = true ]; then
 		if [ "$HOST_INFO" = long ]; then
@@ -148,56 +94,19 @@ function __ssh_prompt() {
 		else
 			host="\h"
 		fi
-		echo "${bold_blue?}\u${bold_orange?}@${cyan?}$host ${bold_orange?}in "
+		ssh_info="${bold_blue}\u${bold_orange}@${cyan}$host ${bold_orange}in"
 	fi
-}
 
-function __python_venv_prompt() {
 	# Detect python venv
 	if [[ -n "${CONDA_DEFAULT_ENV}" ]]; then
-		echo "${bold_purple?}$PYTHON_VENV_CHAR${normal?}${CONDA_DEFAULT_ENV} "
+		python_venv="$PYTHON_VENV_CHAR${CONDA_DEFAULT_ENV} "
 	elif [[ -n "${VIRTUAL_ENV}" ]]; then
-		echo "${bold_purple?}$PYTHON_VENV_CHAR${normal?}$(basename "${VIRTUAL_ENV}") "
-	fi
-}
-
-function __path_prompt() {
-	local dir_color=${green?}
-	# Detect root shell
-	if [ "$(whoami)" = root ]; then
-		dir_color=${red?}
-	fi
-
-	echo "${dir_color}\w${normal} "
-}
-
-function __scm_prompt() {
-	scm_prompt_info
-}
-
-function __duration_prompt() {
-	[[ -n "$command_duration" ]] && echo "${command_duration} "
-}
-
-function __prompt-command() {
-	exit_code="$?"
-	command_duration=$(_command_duration)
-	local wrap_char
-
-	# Generate prompt
-	PS1="\n "
-	for segment in $BARBUK_PROMPT; do
-		local info
-		info="$(__"${segment}"_prompt)"
-		[[ -n "${info}" ]] && PS1+="${info}"
-	done
-
-	# Cut prompt when it's too long
-	if [[ ${#PS1} -gt $((COLUMNS * 2)) ]]; then
-		wrap_char="\n"
+		python_venv="$PYTHON_VENV_CHAR$(basename "${VIRTUAL_ENV}") "
 	fi
 
+	PS1="\\n${ssh_info} ${purple}$(scm_char)${python_venv}${dir_color}\\w${normal}$(scm_prompt_info)${command_duration}${exit_code}"
+	[[ ${#PS1} -gt $((COLUMNS * 2)) ]] && wrap_char="\\n"
 	PS1="${PS1}${wrap_char}❯${normal} "
 }
 
-safe_append_prompt_command __prompt-command
+safe_append_prompt_command _prompt
diff --git a/themes/base.theme.bash b/themes/base.theme.bash
index 92a56e5e..f9f5190d 100644
--- a/themes/base.theme.bash
+++ b/themes/base.theme.bash
@@ -1,20 +1,16 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
 
-# Colors for listing files, using default color scheme.
-# To customize color scheme by theme, check out https://geoff.greer.fm/lscolors/
-export CLICOLOR LSCOLORS LS_COLORS
-
 CLOCK_CHAR_THEME_PROMPT_PREFIX=''
 CLOCK_CHAR_THEME_PROMPT_SUFFIX=''
 CLOCK_THEME_PROMPT_PREFIX=''
 CLOCK_THEME_PROMPT_SUFFIX=''
 
-THEME_PROMPT_HOST='\h'
+THEME_PROMPT_HOST='\H'
 
 SCM=
 
-: "${SCM_CHECK:=true}"
+SCM_CHECK=${SCM_CHECK:=true}
 
 SCM_THEME_PROMPT_DIRTY=' ✗'
 SCM_THEME_PROMPT_CLEAN=' ✓'
@@ -30,19 +26,17 @@ SCM_THEME_CURRENT_USER_SUFFIX=''
 SCM_THEME_CHAR_PREFIX=''
 SCM_THEME_CHAR_SUFFIX=''
 
-# Define this here so it can be used by all of the themes
-: "${THEME_CHECK_SUDO:=false}"
-: "${THEME_BATTERY_PERCENTAGE_CHECK:=true}"
+THEME_BATTERY_PERCENTAGE_CHECK=${THEME_BATTERY_PERCENTAGE_CHECK:=true}
 
-: "${SCM_GIT_SHOW_DETAILS:=true}"
-: "${SCM_GIT_SHOW_REMOTE_INFO:=auto}"
-: "${SCM_GIT_IGNORE_UNTRACKED:=false}"
-: "${SCM_GIT_SHOW_CURRENT_USER:=false}"
-: "${SCM_GIT_SHOW_MINIMAL_INFO:=false}"
-: "${SCM_GIT_SHOW_STASH_INFO:=true}"
-: "${SCM_GIT_SHOW_COMMIT_COUNT:=true}"
-: "${SCM_GIT_USE_GITSTATUS:=false}"
-: "${SCM_GIT_GITSTATUS_RAN:=false}"
+SCM_GIT_SHOW_DETAILS=${SCM_GIT_SHOW_DETAILS:=true}
+SCM_GIT_SHOW_REMOTE_INFO=${SCM_GIT_SHOW_REMOTE_INFO:=auto}
+SCM_GIT_IGNORE_UNTRACKED=${SCM_GIT_IGNORE_UNTRACKED:=false}
+SCM_GIT_SHOW_CURRENT_USER=${SCM_GIT_SHOW_CURRENT_USER:=false}
+SCM_GIT_SHOW_MINIMAL_INFO=${SCM_GIT_SHOW_MINIMAL_INFO:=false}
+SCM_GIT_SHOW_STASH_INFO=${SCM_GIT_SHOW_STASH_INFO:=true}
+SCM_GIT_SHOW_COMMIT_COUNT=${SCM_GIT_SHOW_COMMIT_COUNT:=true}
+SCM_GIT_USE_GITSTATUS=${SCM_GIT_USE_GITSTATUS:=false}
+SCM_GIT_GITSTATUS_RAN=${SCM_GIT_GITSTATUS_RAN:=false}
 
 SCM_GIT='git'
 SCM_GIT_CHAR='±'
@@ -77,9 +71,9 @@ NVM_THEME_PROMPT_SUFFIX='|'
 RVM_THEME_PROMPT_PREFIX=' |'
 RVM_THEME_PROMPT_SUFFIX='|'
 
-: "${THEME_SHOW_RUBY_PROMPT:=true}"
+THEME_SHOW_RUBY_PROMPT=${THEME_SHOW_RUBY_PROMPT:=true}
 
-: "${THEME_SHOW_USER_HOST:=false}"
+THEME_SHOW_USER_HOST=${THEME_SHOW_USER_HOST:=false}
 USER_HOST_THEME_PROMPT_PREFIX=''
 USER_HOST_THEME_PROMPT_SUFFIX=''
 
@@ -92,160 +86,154 @@ RBENV_THEME_PROMPT_SUFFIX='|'
 RBFU_THEME_PROMPT_PREFIX=' |'
 RBFU_THEME_PROMPT_SUFFIX='|'
 
-: "${GIT_EXE:=${SCM_GIT?}}"
-: "${HG_EXE:=${SCM_HG?}}"
-: "${SVN_EXE:=${SCM_SVN?}}"
-: "${P4_EXE:=${SCM_P4?}}"
+: "${GIT_EXE:=$SCM_GIT}"
+: "${P4_EXE:=$SCM_P4}"
+: "${HG_EXE:=$SCM_HG}"
+: "${SVN_EXE:=$SCM_SVN}"
 
 function _bash_it_appearance_scm_init() {
-	GIT_EXE="$(type -P "${SCM_GIT:-git}" || true)"
-	HG_EXE="$(type -P "${SCM_HG:-hg}" || true)"
-	SVN_EXE="$(type -P "${SCM_SVN:-svn}" || true)"
-	P4_EXE="$(type -P "${SCM_P4:-p4}" || true)"
+	GIT_EXE="$(type -P $SCM_GIT || true)"
+	P4_EXE="$(type -P $SCM_P4 || true)"
+	HG_EXE="$(type -P $SCM_HG || true)"
+	SVN_EXE="$(type -P $SCM_SVN || true)"
 
 	# Check for broken SVN exe that is caused by some versions of Xcode.
 	# See https://github.com/Bash-it/bash-it/issues/1612 for more details.
-	if [[ -x "${SVN_EXE-}" && -x "${SVN_EXE%/svn}/xcrun" ]]; then
-		if ! "${SVN_EXE}" --version > /dev/null 2>&1; then
+	if [[ -x "$SVN_EXE" && -x "${SVN_EXE%/*}/xcrun" ]]; then
+		if ! "$SVN_EXE" --version > /dev/null 2>&1; then
 			# Unset the SVN exe variable so that SVN commands are avoided.
 			SVN_EXE=""
 		fi
 	fi
-	return 0
-}
-_bash_it_library_finalize_hook+=('_bash_it_appearance_scm_init')
-
-function scm() {
-	if [[ "${SCM_CHECK:-true}" == "false" ]]; then
-		SCM="${SCM_NONE-NONE}"
-	elif [[ -x "${GIT_EXE-}" ]] && _bash-it-find-in-ancestor '.git' > /dev/null; then
-		SCM="${SCM_GIT?}"
-	elif [[ -x "${HG_EXE-}" ]] && _bash-it-find-in-ancestor '.hg' > /dev/null; then
-		SCM="${SCM_HG?}"
-	elif [[ -x "${SVN_EXE-}" ]] && _bash-it-find-in-ancestor '.svn' > /dev/null; then
-		SCM="${SCM_SVN?}"
-	elif [[ -x "${P4_EXE-}" && -n "$(p4 set P4CLIENT 2> /dev/null)" ]]; then
-		SCM="${SCM_P4?}"
+}
+_bash_it_appearance_scm_init
+
+function scm {
+	if [[ "$SCM_CHECK" = false ]]; then
+		SCM=$SCM_NONE
+	elif [[ -f .git/HEAD ]] && [[ -x "$GIT_EXE" ]]; then
+		SCM=$SCM_GIT
+	elif [[ -d .hg ]] && [[ -x "$HG_EXE" ]]; then
+		SCM=$SCM_HG
+	elif [[ -d .svn ]] && [[ -x "$SVN_EXE" ]]; then
+		SCM=$SCM_SVN
+	elif [[ -x "$GIT_EXE" ]] && [[ -n "$(git rev-parse --is-inside-work-tree 2> /dev/null)" ]]; then
+		SCM=$SCM_GIT
+	elif [[ -x "$HG_EXE" ]] && [[ -n "$(hg root 2> /dev/null)" ]]; then
+		SCM=$SCM_HG
+	elif [[ -x "$SVN_EXE" ]] && [[ -n "$(svn info --show-item wc-root 2> /dev/null)" ]]; then
+		SCM=$SCM_SVN
+	elif [[ -x "$P4_EXE" ]] && [[ -n "$(p4 set P4CLIENT 2> /dev/null)" ]]; then
+		SCM=$SCM_P4
 	else
-		SCM="${SCM_NONE-NONE}"
+		SCM=$SCM_NONE
 	fi
 }
 
-function scm_prompt() {
-	local format="${SCM_PROMPT_FORMAT-"[%s%s]"}"
-	local scm_char scm_prompt_info
-	scm_char="$(scm_char)"
-	scm_prompt_info="$(scm_prompt_info)"
+scm_prompt() {
+	local CHAR
+	CHAR="$(scm_char)"
+	local format=${SCM_PROMPT_FORMAT:-'[%s%s]'}
 
-	if [[ "${scm_char}" != "${SCM_NONE_CHAR:-}" ]]; then
+	if [[ "${CHAR}" != "$SCM_NONE_CHAR" ]]; then
 		# shellcheck disable=2059
-		printf "${format}" "${scm_char}" "${scm_prompt_info}"
+		printf "$format\n" "$CHAR" "$(scm_prompt_info)"
 	fi
 }
 
-function scm_prompt_char() {
-	if [[ -z "${SCM:-}" ]]; then
-		scm
+function scm_prompt_char {
+	if [[ -z $SCM ]]; then scm; fi
+	if [[ $SCM == "$SCM_GIT" ]]; then
+		SCM_CHAR=$SCM_GIT_CHAR
+	elif [[ $SCM == "$SCM_P4" ]]; then
+		SCM_CHAR=$SCM_P4_CHAR
+	elif [[ $SCM == "$SCM_HG" ]]; then
+		SCM_CHAR=$SCM_HG_CHAR
+	elif [[ $SCM == "$SCM_SVN" ]]; then
+		SCM_CHAR=$SCM_SVN_CHAR
+	else
+		SCM_CHAR=$SCM_NONE_CHAR
 	fi
-
-	case ${SCM?} in
-		"${SCM_GIT?}")
-			SCM_CHAR="${SCM_GIT_CHAR?}"
-			;;
-		"${SCM_HG?}")
-			SCM_CHAR="${SCM_HG_CHAR?}"
-			;;
-		"${SCM_SVN?}")
-			SCM_CHAR="${SCM_SVN_CHAR?}"
-			;;
-		"${SCM_P4?}")
-			SCM_CHAR="${SCM_P4_CHAR?}"
-			;;
-		*)
-			SCM_CHAR="${SCM_NONE_CHAR:-}"
-			;;
-	esac
 }
 
-function scm_prompt_vars() {
+function scm_prompt_vars {
 	scm
 	scm_prompt_char
 	SCM_DIRTY=0
 	SCM_STATE=''
-
-	local prompt_vars="${SCM}_prompt_vars"
-	_is_function "${prompt_vars}" && "${prompt_vars}"
+	[[ $SCM == "$SCM_GIT" ]] && git_prompt_vars && return
+	[[ $SCM == "$SCM_P4" ]] && p4_prompt_vars && return
+	[[ $SCM == "$SCM_HG" ]] && hg_prompt_vars && return
+	[[ $SCM == "$SCM_SVN" ]] && svn_prompt_vars && return
 }
 
-function scm_prompt_info() {
+function scm_prompt_info {
 	scm
 	scm_prompt_char
 	scm_prompt_info_common
 }
 
-function scm_prompt_char_info() {
+function scm_prompt_char_info {
 	scm_prompt_char
-	echo -ne "${SCM_THEME_CHAR_PREFIX-}${SCM_CHAR?}${SCM_THEME_CHAR_SUFFIX-}"
+	echo -ne "${SCM_THEME_CHAR_PREFIX}${SCM_CHAR}${SCM_THEME_CHAR_SUFFIX}"
 	scm_prompt_info_common
 }
 
-function scm_prompt_info_common() {
-	local prompt_info
+function scm_prompt_info_common {
 	SCM_DIRTY=0
 	SCM_STATE=''
 
-	case ${SCM?} in
-		"${SCM_GIT?}")
-			if [[ ${SCM_GIT_SHOW_MINIMAL_INFO:-false} == "true" ]]; then
-				# user requests minimal git status information
-				prompt_info="${SCM}_prompt_minimal_info"
-			else
-				# more detailed git status
-				prompt_info="${SCM}_prompt_info"
-			fi
-			;;
-		*)
-			# TODO: consider adding minimal status information for hg and svn
-			prompt_info="${SCM}_prompt_info"
-			;;
-	esac
-	_is_function "${prompt_info}" && "${prompt_info}"
+	if [[ ${SCM} == "${SCM_GIT}" ]]; then
+		if [[ ${SCM_GIT_SHOW_MINIMAL_INFO} == true ]]; then
+			# user requests minimal git status information
+			git_prompt_minimal_info
+		else
+			# more detailed git status
+			git_prompt_info
+		fi
+		return
+	fi
+
+	# TODO: consider adding minimal status information for hg and svn
+	{ [[ ${SCM} == "${SCM_P4}" ]] && p4_prompt_info && return; } || true
+	{ [[ ${SCM} == "${SCM_HG}" ]] && hg_prompt_info && return; } || true
+	{ [[ ${SCM} == "${SCM_SVN}" ]] && svn_prompt_info && return; } || true
 }
 
-function terraform_workspace_prompt() {
+function terraform_workspace_prompt {
 	if _command_exists terraform; then
-		if [[ -d .terraform ]]; then
-			terraform workspace show 2> /dev/null
+		if [ -d .terraform ]; then
+			echo -e "$(terraform workspace show 2> /dev/null)"
 		fi
 	fi
 }
 
-function active_gcloud_account_prompt() {
+function active_gcloud_account_prompt {
 	if _command_exists gcloud; then
-		gcloud config list account --format "value(core.account)" 2> /dev/null
+		echo -e "$(gcloud config list account --format "value(core.account)" 2> /dev/null)"
 	fi
 }
 
-function git_prompt_minimal_info() {
-	SCM_STATE="${SCM_THEME_PROMPT_CLEAN?}"
+function git_prompt_minimal_info {
+	SCM_STATE=${SCM_THEME_PROMPT_CLEAN}
 
 	_git-hide-status && return
 
-	SCM_BRANCH="${SCM_THEME_BRANCH_PREFIX-}\$(_git-friendly-ref)"
+	SCM_BRANCH="${SCM_THEME_BRANCH_PREFIX}\$(_git-friendly-ref)"
 
 	if [[ -n "$(_git-status | tail -n1)" ]]; then
 		SCM_DIRTY=1
-		SCM_STATE="${SCM_THEME_PROMPT_DIRTY?}"
+		SCM_STATE=${SCM_THEME_PROMPT_DIRTY}
 	fi
 
 	# Output the git prompt
-	SCM_PREFIX="${SCM_THEME_PROMPT_PREFIX-}"
-	SCM_SUFFIX="${SCM_THEME_PROMPT_SUFFIX-}"
-	echo -ne "${SCM_PREFIX}${SCM_BRANCH}${SCM_STATE}${SCM_SUFFIX}"
+	SCM_PREFIX=${SCM_THEME_PROMPT_PREFIX}
+	SCM_SUFFIX=${SCM_THEME_PROMPT_SUFFIX}
+	echo -e "${SCM_PREFIX}${SCM_BRANCH}${SCM_STATE}${SCM_SUFFIX}"
 }
 
-function git_prompt_vars() {
-	if [[ "${SCM_GIT_USE_GITSTATUS:-false}" != "false" ]] && _command_exists gitstatus_query && gitstatus_query && [[ "${VCS_STATUS_RESULT:-}" == "ok-sync" ]]; then
+function git_prompt_vars {
+	if ${SCM_GIT_USE_GITSTATUS} && _command_exists gitstatus_query && gitstatus_query && [[ "${VCS_STATUS_RESULT}" == "ok-sync" ]]; then
 		# we can use faster gitstatus
 		# use this variable in githelpers and below to choose gitstatus output
 		SCM_GIT_GITSTATUS_RAN=true
@@ -261,174 +249,190 @@ function git_prompt_vars() {
 
 		local detached_prefix
 		if _git-tag &> /dev/null; then
-			detached_prefix="${SCM_THEME_TAG_PREFIX}"
+			detached_prefix=${SCM_THEME_TAG_PREFIX}
 		else
-			detached_prefix="${SCM_THEME_DETACHED_PREFIX}"
+			detached_prefix=${SCM_THEME_DETACHED_PREFIX}
 		fi
 		SCM_BRANCH="${detached_prefix}\$(_git-friendly-ref)"
 	fi
 
-	if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-		commits_behind="${VCS_STATUS_COMMITS_BEHIND?}"
-		commits_ahead="${VCS_STATUS_COMMITS_AHEAD?}"
+	if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+		commits_behind=${VCS_STATUS_COMMITS_BEHIND}
+		commits_ahead=${VCS_STATUS_COMMITS_AHEAD}
 	else
 		IFS=$'\t' read -r commits_behind commits_ahead <<< "$(_git-upstream-behind-ahead)"
 	fi
 	if [[ "${commits_ahead}" -gt 0 ]]; then
 		SCM_BRANCH+="${SCM_GIT_AHEAD_BEHIND_PREFIX_CHAR}${SCM_GIT_AHEAD_CHAR}"
-		[[ "${SCM_GIT_SHOW_COMMIT_COUNT}" == "true" ]] && SCM_BRANCH+="${commits_ahead}"
+		[[ "${SCM_GIT_SHOW_COMMIT_COUNT}" = "true" ]] && SCM_BRANCH+="${commits_ahead}"
 	fi
 	if [[ "${commits_behind}" -gt 0 ]]; then
 		SCM_BRANCH+="${SCM_GIT_AHEAD_BEHIND_PREFIX_CHAR}${SCM_GIT_BEHIND_CHAR}"
-		[[ "${SCM_GIT_SHOW_COMMIT_COUNT}" == "true" ]] && SCM_BRANCH+="${commits_behind}"
+		[[ "${SCM_GIT_SHOW_COMMIT_COUNT}" = "true" ]] && SCM_BRANCH+="${commits_behind}"
 	fi
 
-	if [[ "${SCM_GIT_SHOW_STASH_INFO}" == "true" ]]; then
+	if [[ "${SCM_GIT_SHOW_STASH_INFO}" = "true" ]]; then
 		local stash_count
 		if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
-			stash_count="${VCS_STATUS_STASHES?}"
+			stash_count=${VCS_STATUS_STASHES}
 		else
 			stash_count="$(git stash list 2> /dev/null | wc -l | tr -d ' ')"
 		fi
 		[[ "${stash_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_GIT_STASH_CHAR_PREFIX}${stash_count}${SCM_GIT_STASH_CHAR_SUFFIX}"
 	fi
 
-	SCM_STATE="${GIT_THEME_PROMPT_CLEAN:-${SCM_THEME_PROMPT_CLEAN:-}}"
+	SCM_STATE=${GIT_THEME_PROMPT_CLEAN:-$SCM_THEME_PROMPT_CLEAN}
 	if ! _git-hide-status; then
-		if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-			untracked_count="${VCS_STATUS_NUM_UNTRACKED?}"
-			unstaged_count="${VCS_STATUS_NUM_UNSTAGED?}"
-			staged_count="${VCS_STATUS_NUM_STAGED?}"
+		if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+			untracked_count=${VCS_STATUS_NUM_UNTRACKED}
+			unstaged_count=${VCS_STATUS_NUM_UNSTAGED}
+			staged_count=${VCS_STATUS_NUM_STAGED}
 		else
-			IFS=$'\t' read -r untracked_count unstaged_count staged_count < <(_git-status-counts)
+			IFS=$'\t' read -r untracked_count unstaged_count staged_count <<< "$(_git-status-counts)"
 		fi
 		if [[ "${untracked_count}" -gt 0 || "${unstaged_count}" -gt 0 || "${staged_count}" -gt 0 ]]; then
 			SCM_DIRTY=1
-			if [[ "${SCM_GIT_SHOW_DETAILS}" == "true" ]]; then
+			if [[ "${SCM_GIT_SHOW_DETAILS}" = "true" ]]; then
 				[[ "${staged_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_GIT_STAGED_CHAR}${staged_count}" && SCM_DIRTY=3
 				[[ "${unstaged_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_GIT_UNSTAGED_CHAR}${unstaged_count}" && SCM_DIRTY=2
 				[[ "${untracked_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_GIT_UNTRACKED_CHAR}${untracked_count}" && SCM_DIRTY=1
 			fi
-			SCM_STATE="${GIT_THEME_PROMPT_DIRTY:-${SCM_THEME_PROMPT_DIRTY?}}"
+			SCM_STATE=${GIT_THEME_PROMPT_DIRTY:-$SCM_THEME_PROMPT_DIRTY}
 		fi
 	fi
 
 	# no if for gitstatus here, user extraction is not supported by it
 	[[ "${SCM_GIT_SHOW_CURRENT_USER}" == "true" ]] && SCM_BRANCH+="$(git_user_info)"
 
-	SCM_PREFIX="${GIT_THEME_PROMPT_PREFIX:-${SCM_THEME_PROMPT_PREFIX-}}"
-	SCM_SUFFIX="${GIT_THEME_PROMPT_SUFFIX:-${SCM_THEME_PROMPT_SUFFIX-}}"
+	SCM_PREFIX=${GIT_THEME_PROMPT_PREFIX:-$SCM_THEME_PROMPT_PREFIX}
+	SCM_SUFFIX=${GIT_THEME_PROMPT_SUFFIX:-$SCM_THEME_PROMPT_SUFFIX}
 
-	SCM_CHANGE=$(_git-short-sha 2> /dev/null || true)
+	SCM_CHANGE=$(_git-short-sha 2> /dev/null || echo "")
 }
 
-function p4_prompt_vars() {
-	local opened_count non_default_changes default_count \
-		add_file_count edit_file_count delete_file_count
-
+function p4_prompt_vars {
 	IFS=$'\t' read -r \
 		opened_count non_default_changes default_count \
 		add_file_count edit_file_count delete_file_count \
-		< <(_p4-opened-counts)
+		<<< "$(_p4-opened-counts)"
 	if [[ "${opened_count}" -gt 0 ]]; then
 		SCM_DIRTY=1
-		SCM_STATE="${SCM_THEME_PROMPT_DIRTY?}"
-		[[ "${opened_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_P4_OPENED_CHAR?}${opened_count}"
-		[[ "${non_default_changes}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_P4_CHANGES_CHAR?}${non_default_changes}"
-		[[ "${default_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_P4_DEFAULT_CHAR?}${default_count}"
+		SCM_STATE=${SCM_THEME_PROMPT_DIRTY}
+		[[ "${opened_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_P4_OPENED_CHAR}${opened_count}"
+		[[ "${non_default_changes}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_P4_CHANGES_CHAR}${non_default_changes}"
+		[[ "${default_count}" -gt 0 ]] && SCM_BRANCH+=" ${SCM_P4_DEFAULT_CHAR}${default_count}"
 	else
 		SCM_DIRTY=0
-		SCM_STATE="${SCM_THEME_PROMPT_CLEAN?}"
+		SCM_STATE=${SCM_THEME_PROMPT_DIRTY}
 	fi
 
-	SCM_PREFIX="${P4_THEME_PROMPT_PREFIX:-${SCM_THEME_PROMPT_PREFIX-}}"
-	SCM_SUFFIX="${P4_THEME_PROMPT_SUFFIX:-${SCM_THEME_PROMPT_SUFFIX-}}"
+	SCM_PREFIX=${P4_THEME_PROMPT_PREFIX:-$SCM_THEME_PROMPT_PREFIX}
+	SCM_SUFFIX=${P4_THEME_PROMPT_SUFFIX:-$SCM_THEME_PROMPT_SUFFIX}
 }
 
-function svn_prompt_vars() {
-	if [[ -n "$(svn status | head -c1 2> /dev/null)" ]]; then
+function svn_prompt_vars {
+	if [[ -n $(svn status | head -c1 2> /dev/null) ]]; then
 		SCM_DIRTY=1
-		SCM_STATE="${SVN_THEME_PROMPT_DIRTY:-${SCM_THEME_PROMPT_DIRTY?}}"
+		SCM_STATE=${SVN_THEME_PROMPT_DIRTY:-$SCM_THEME_PROMPT_DIRTY}
 	else
 		SCM_DIRTY=0
-		SCM_STATE="${SVN_THEME_PROMPT_CLEAN:-${SCM_THEME_PROMPT_CLEAN?}}"
-	fi
-	SCM_PREFIX="${SVN_THEME_PROMPT_PREFIX:-${SCM_THEME_PROMPT_PREFIX-}}"
-	SCM_SUFFIX="${SVN_THEME_PROMPT_SUFFIX:-${SCM_THEME_PROMPT_SUFFIX-}}"
-	SCM_BRANCH="$(svn info --show-item=url 2> /dev/null | awk -F/ '{ for (i=0; i<=NF; i++) { if ($i == "branches" || $i == "tags" ) { print $(i+1); break }; if ($i == "trunk") { print $i; break } } }')" || return
-	SCM_CHANGE="$(svn info --show-item=revision 2> /dev/null)"
+		SCM_STATE=${SVN_THEME_PROMPT_CLEAN:-$SCM_THEME_PROMPT_CLEAN}
+	fi
+	SCM_PREFIX=${SVN_THEME_PROMPT_PREFIX:-$SCM_THEME_PROMPT_PREFIX}
+	SCM_SUFFIX=${SVN_THEME_PROMPT_SUFFIX:-$SCM_THEME_PROMPT_SUFFIX}
+	SCM_BRANCH=$(svn info --show-item=url 2> /dev/null | awk -F/ '{ for (i=0; i<=NF; i++) { if ($i == "branches" || $i == "tags" ) { print $(i+1); break }; if ($i == "trunk") { print $i; break } } }') || return
+	SCM_CHANGE=$(svn info --show-item=revision 2> /dev/null)
+}
+
+# this functions returns absolute location of .hg directory if one exists
+# It starts in the current directory and moves its way up until it hits /.
+# If we get to / then no Mercurial repository was found.
+# Example:
+# - lets say we cd into ~/Projects/Foo/Bar
+# - .hg is located in ~/Projects/Foo/.hg
+# - get_hg_root starts at ~/Projects/Foo/Bar and sees that there is no .hg directory, so then it goes into ~/Projects/Foo
+function get_hg_root {
+	local CURRENT_DIR="${PWD}"
+
+	while [[ "${CURRENT_DIR:-/}" != "/" ]]; do
+		if [[ -d "$CURRENT_DIR/.hg" ]]; then
+			echo "$CURRENT_DIR/.hg"
+			return
+		fi
+
+		CURRENT_DIR="${CURRENT_DIR%/*}"
+	done
 }
 
-function hg_prompt_vars() {
-	local hg_root bookmark
+function hg_prompt_vars {
 	if [[ -n $(hg status 2> /dev/null) ]]; then
 		SCM_DIRTY=1
-		SCM_STATE="${HG_THEME_PROMPT_DIRTY:-${SCM_THEME_PROMPT_DIRTY?}}"
+		SCM_STATE=${HG_THEME_PROMPT_DIRTY:-$SCM_THEME_PROMPT_DIRTY}
 	else
 		SCM_DIRTY=0
-		SCM_STATE="${HG_THEME_PROMPT_CLEAN:-${SCM_THEME_PROMPT_CLEAN?}}"
+		SCM_STATE=${HG_THEME_PROMPT_CLEAN:-$SCM_THEME_PROMPT_CLEAN}
 	fi
-	SCM_PREFIX="${HG_THEME_PROMPT_PREFIX:-${SCM_THEME_PROMPT_PREFIX-}}"
-	SCM_SUFFIX="${HG_THEME_PROMPT_SUFFIX:-${SCM_THEME_PROMPT_SUFFIX-}}"
+	SCM_PREFIX=${HG_THEME_PROMPT_PREFIX:-$SCM_THEME_PROMPT_PREFIX}
+	SCM_SUFFIX=${HG_THEME_PROMPT_SUFFIX:-$SCM_THEME_PROMPT_SUFFIX}
 
-	hg_root="$(_bash-it-find-in-ancestor ".hg")/.hg"
+	HG_ROOT=$(get_hg_root)
 
-	if [[ -f "$hg_root/branch" ]]; then
+	if [ -f "$HG_ROOT/branch" ]; then
 		# Mercurial holds it's current branch in .hg/branch file
-		SCM_BRANCH=$(< "${hg_root}/branch")
-		bookmark="${hg_root}/bookmarks.current"
-		[[ -f "${bookmark}" ]] && SCM_BRANCH+=:$(< "${bookmark}")
+		SCM_BRANCH=$(< "${HG_ROOT}/branch")
+		local bookmark=${HG_ROOT}/bookmarks.current
+		[[ -f ${bookmark} ]] && SCM_BRANCH+=:$(< "${bookmark}")
 	else
 		SCM_BRANCH=$(hg summary 2> /dev/null | grep branch: | awk '{print $2}')
 	fi
 
-	if [[ -f "$hg_root/dirstate" ]]; then
+	if [ -f "$HG_ROOT/dirstate" ]; then
 		# Mercurial holds various information about the working directory in .hg/dirstate file. More on http://mercurial.selenic.com/wiki/DirState
-		SCM_CHANGE=$(hexdump -vn 10 -e '1/1 "%02x"' "$hg_root/dirstate" | cut -c-12)
+		SCM_CHANGE=$(hexdump -vn 10 -e '1/1 "%02x"' "$HG_ROOT/dirstate" | cut -c-12)
 	else
 		SCM_CHANGE=$(hg summary 2> /dev/null | grep parent: | awk '{print $2}')
 	fi
 }
 
-function nvm_version_prompt() {
+function nvm_version_prompt {
 	local node
 	if _is_function nvm; then
 		node=$(nvm current 2> /dev/null)
 		[[ "${node}" == "system" ]] && return
-		echo -ne "${NVM_THEME_PROMPT_PREFIX-}${node}${NVM_THEME_PROMPT_SUFFIX-}"
+		echo -e "${NVM_THEME_PROMPT_PREFIX}${node}${NVM_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
-function node_version_prompt() {
-	nvm_version_prompt
+function node_version_prompt {
+	echo -e "$(nvm_version_prompt)"
 }
 
-function rvm_version_prompt() {
-	if _command_exists rvm; then
-		rvm="$(rvm-prompt)" || return
-		if [[ -n "$rvm" ]]; then
-			echo -ne "${RVM_THEME_PROMPT_PREFIX-}${rvm}${RVM_THEME_PROMPT_SUFFIX-}"
+function rvm_version_prompt {
+	if which rvm &> /dev/null; then
+		rvm=$(rvm-prompt) || return
+		if [ -n "$rvm" ]; then
+			echo -e "$RVM_THEME_PROMPT_PREFIX$rvm$RVM_THEME_PROMPT_SUFFIX"
 		fi
 	fi
 }
 
-function rbenv_version_prompt() {
-	if _command_exists rbenv; then
+function rbenv_version_prompt {
+	if which rbenv &> /dev/null; then
 		rbenv=$(rbenv version-name) || return
 		rbenv commands | grep -q gemset && gemset=$(rbenv gemset active 2> /dev/null) && rbenv="$rbenv@${gemset%% *}"
-		if [[ "$rbenv" != "system" ]]; then
-			echo -ne "${RBENV_THEME_PROMPT_PREFIX-}${rbenv}${RBENV_THEME_PROMPT_SUFFIX-}"
+		if [ "$rbenv" != "system" ]; then
+			echo -e "$RBENV_THEME_PROMPT_PREFIX$rbenv$RBENV_THEME_PROMPT_SUFFIX"
 		fi
 	fi
 }
 
-function rbfu_version_prompt() {
-	if [[ -n "${RBFU_RUBY_VERSION:-}" ]]; then
-		echo -ne "${RBFU_THEME_PROMPT_PREFIX-}${RBFU_RUBY_VERSION}${RBFU_THEME_PROMPT_SUFFIX-}"
+function rbfu_version_prompt {
+	if [[ $RBFU_RUBY_VERSION ]]; then
+		echo -e "${RBFU_THEME_PROMPT_PREFIX}${RBFU_RUBY_VERSION}${RBFU_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
-function chruby_version_prompt() {
+function chruby_version_prompt {
 	if _is_function chruby; then
 		if _is_function chruby_auto; then
 			chruby_auto
@@ -439,147 +443,183 @@ function chruby_version_prompt() {
 		if ! chruby | grep -q '\*'; then
 			ruby_version="${ruby_version} (system)"
 		fi
-		echo -ne "${CHRUBY_THEME_PROMPT_PREFIX-}${ruby_version}${CHRUBY_THEME_PROMPT_SUFFIX-}"
+		echo -e "${CHRUBY_THEME_PROMPT_PREFIX}${ruby_version}${CHRUBY_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
-function ruby_version_prompt() {
-	if [[ "${THEME_SHOW_RUBY_PROMPT:-}" == "true" ]]; then
-		rbfu_version_prompt
-		rbenv_version_prompt
-		rvm_version_prompt
-		chruby_version_prompt
+function ruby_version_prompt {
+	if [[ "${THEME_SHOW_RUBY_PROMPT}" = "true" ]]; then
+		echo -e "$(rbfu_version_prompt)$(rbenv_version_prompt)$(rvm_version_prompt)$(chruby_version_prompt)"
 	fi
 }
 
-function k8s_context_prompt() {
-	kubectl config current-context 2> /dev/null
+function k8s_context_prompt {
+	echo -e "$(kubectl config current-context 2> /dev/null)"
 }
 
-function k8s_namespace_prompt() {
-	kubectl config view --minify --output 'jsonpath={..namespace}' 2> /dev/null
+function k8s_namespace_prompt {
+	echo -e "$(kubectl config view --minify --output 'jsonpath={..namespace}' 2> /dev/null)"
 }
 
-function virtualenv_prompt() {
-	local virtualenv
-	if [[ -n "${VIRTUAL_ENV:-}" ]]; then
-		virtualenv="${VIRTUAL_ENV##*/}"
-		echo -ne "${VIRTUALENV_THEME_PROMPT_PREFIX-}${virtualenv}${VIRTUALENV_THEME_PROMPT_SUFFIX-}"
+function virtualenv_prompt {
+	if [[ -n "$VIRTUAL_ENV" ]]; then
+		virtualenv=$(basename "$VIRTUAL_ENV")
+		echo -e "$VIRTUALENV_THEME_PROMPT_PREFIX$virtualenv$VIRTUALENV_THEME_PROMPT_SUFFIX"
 	fi
 }
 
-function condaenv_prompt() {
-	if [[ -n "${CONDA_DEFAULT_ENV:-}" ]]; then
-		echo -ne "${CONDAENV_THEME_PROMPT_PREFIX-}${CONDA_DEFAULT_ENV}${CONDAENV_THEME_PROMPT_SUFFIX-}"
+function condaenv_prompt {
+	if [[ $CONDA_DEFAULT_ENV ]]; then
+		echo -e "${CONDAENV_THEME_PROMPT_PREFIX}${CONDA_DEFAULT_ENV}${CONDAENV_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
-function py_interp_prompt() {
-	local py_version
-	py_version="$(python --version 2>&1 | awk 'NR==1{print "py-"$2;}')" || return
-	echo -ne "${PYTHON_THEME_PROMPT_PREFIX-}${py_version}${PYTHON_THEME_PROMPT_SUFFIX-}"
+function py_interp_prompt {
+	py_version=$(python --version 2>&1 | awk 'NR==1{print "py-"$2;}') || return
+	echo -e "${PYTHON_THEME_PROMPT_PREFIX}${py_version}${PYTHON_THEME_PROMPT_SUFFIX}"
 }
 
-function python_version_prompt() {
-	virtualenv_prompt
-	condaenv_prompt
-	py_interp_prompt
+function python_version_prompt {
+	echo -e "$(virtualenv_prompt)$(condaenv_prompt)$(py_interp_prompt)"
 }
 
-function git_user_info() {
-	local current_user
+function git_user_info {
 	# support two or more initials, set by 'git pair' plugin
-	current_user="$(git config user.initials | sed 's% %+%')"
+	SCM_CURRENT_USER=$(git config user.initials | sed 's% %+%')
 	# if `user.initials` weren't set, attempt to extract initials from `user.name`
-	[[ -z "${current_user}" ]] && current_user=$(printf "%s" "$(for word in $(git config user.name | PERLIO=:utf8 perl -pe '$_=lc'); do printf "%s" "${word:0:1}"; done)")
-	[[ -n "${current_user}" ]] && printf "%s" "${SCM_THEME_CURRENT_USER_PREFFIX-}${current_user}${SCM_THEME_CURRENT_USER_SUFFIX-}"
+	[[ -z "${SCM_CURRENT_USER}" ]] && SCM_CURRENT_USER=$(printf "%s" "$(for word in $(git config user.name | PERLIO=:utf8 perl -pe '$_=lc'); do printf "%s" "${word:0:1}"; done)")
+	[[ -n "${SCM_CURRENT_USER}" ]] && printf "%s" "$SCM_THEME_CURRENT_USER_PREFFIX$SCM_CURRENT_USER$SCM_THEME_CURRENT_USER_SUFFIX"
 }
 
-function clock_char() {
-	local clock_char clock_char_color show_clock_char
-	clock_char="${THEME_CLOCK_CHAR:-⌚}"
-	clock_char_color="${THEME_CLOCK_CHAR_COLOR:-${normal:-}}"
-	show_clock_char="${THEME_SHOW_CLOCK_CHAR:-"true"}"
+function clock_char {
+	CLOCK_CHAR=${THEME_CLOCK_CHAR:-"⌚"}
+	CLOCK_CHAR_COLOR=${THEME_CLOCK_CHAR_COLOR:-"$normal"}
+	SHOW_CLOCK_CHAR=${THEME_SHOW_CLOCK_CHAR:-"true"}
 
-	if [[ "${show_clock_char}" == "true" ]]; then
-		echo -ne "${clock_char_color}${CLOCK_CHAR_THEME_PROMPT_PREFIX-}${clock_char}${CLOCK_CHAR_THEME_PROMPT_SUFFIX-}"
+	if [[ "${SHOW_CLOCK_CHAR}" = "true" ]]; then
+		echo -e "${CLOCK_CHAR_COLOR}${CLOCK_CHAR_THEME_PROMPT_PREFIX}${CLOCK_CHAR}${CLOCK_CHAR_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
-function clock_prompt() {
-	local clock_color="${THEME_CLOCK_COLOR:-${normal?}}"
-	local clock_format="${THEME_CLOCK_FORMAT:-"%H:%M:%S"}"
-	local show_clock="${THEME_SHOW_CLOCK:-${THEME_CLOCK_CHECK:-true}}"
-	local clock_string="\D{${clock_format}}"
+function clock_prompt {
+	CLOCK_COLOR=${THEME_CLOCK_COLOR:-"$normal"}
+	CLOCK_FORMAT=${THEME_CLOCK_FORMAT:-"%H:%M:%S"}
+	[ -z "$THEME_SHOW_CLOCK" ] && THEME_SHOW_CLOCK=${THEME_CLOCK_CHECK:-"true"}
+	SHOW_CLOCK=$THEME_SHOW_CLOCK
 
-	if [[ "${show_clock}" == "true" ]]; then
-		echo -ne "${clock_color}${CLOCK_THEME_PROMPT_PREFIX-}${clock_string}${CLOCK_THEME_PROMPT_SUFFIX-}"
+	if [[ "${SHOW_CLOCK}" = "true" ]]; then
+		CLOCK_STRING=$(date +"${CLOCK_FORMAT}")
+		echo -e "${CLOCK_COLOR}${CLOCK_THEME_PROMPT_PREFIX}${CLOCK_STRING}${CLOCK_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
-function user_host_prompt() {
-	if [[ "${THEME_SHOW_USER_HOST:-false}" == "true" ]]; then
-		echo -ne "${USER_HOST_THEME_PROMPT_PREFIX-}\u@${THEME_PROMPT_HOST:-\h}${USER_HOST_THEME_PROMPT_SUFFIX-}"
+function user_host_prompt {
+	if [[ "${THEME_SHOW_USER_HOST}" = "true" ]]; then
+		echo -e "${USER_HOST_THEME_PROMPT_PREFIX}\u@\h${USER_HOST_THEME_PROMPT_SUFFIX}"
 	fi
 }
 
 # backwards-compatibility
-function git_prompt_info() {
+function git_prompt_info {
 	_git-hide-status && return
 	git_prompt_vars
-	echo -ne "${SCM_PREFIX?}${SCM_BRANCH?}${SCM_STATE?}${SCM_SUFFIX?}"
+	echo -e "${SCM_PREFIX}${SCM_BRANCH}${SCM_STATE}${SCM_SUFFIX}"
 }
 
 function p4_prompt_info() {
 	p4_prompt_vars
-	echo -ne "${SCM_PREFIX?}${SCM_BRANCH?}:${SCM_CHANGE?}${SCM_STATE?}${SCM_SUFFIX?}"
+	echo -e "${SCM_PREFIX}${SCM_BRANCH}:${SCM_CHANGE}${SCM_STATE}${SCM_SUFFIX}"
 }
 
-function svn_prompt_info() {
+function svn_prompt_info {
 	svn_prompt_vars
-	echo -ne "${SCM_PREFIX?}${SCM_BRANCH?}${SCM_STATE?}${SCM_SUFFIX?}"
+	echo -e "${SCM_PREFIX}${SCM_BRANCH}${SCM_STATE}${SCM_SUFFIX}"
 }
 
 function hg_prompt_info() {
 	hg_prompt_vars
-	echo -ne "${SCM_PREFIX?}${SCM_BRANCH?}:${SCM_CHANGE#*:}${SCM_STATE?}${SCM_SUFFIX?}"
+	echo -e "${SCM_PREFIX}${SCM_BRANCH}:${SCM_CHANGE#*:}${SCM_STATE}${SCM_SUFFIX}"
 }
 
-function scm_char() {
+function scm_char {
 	scm_prompt_char
-	echo -ne "${SCM_THEME_CHAR_PREFIX?}${SCM_CHAR?}${SCM_THEME_CHAR_SUFFIX?}"
+	echo -e "${SCM_THEME_CHAR_PREFIX}${SCM_CHAR}${SCM_THEME_CHAR_SUFFIX}"
 }
 
-function prompt_char() {
+function prompt_char {
 	scm_char
 }
 
-function battery_char() {
-	# The battery_char function depends on the presence of the battery_percentage function.
-	if [[ "${THEME_BATTERY_PERCENTAGE_CHECK}" == true ]] && _command_exists battery_percentage; then
-		echo -ne "${bold_red?}$(battery_percentage)%"
-	else
-		false
+function battery_char {
+	if [[ "${THEME_BATTERY_PERCENTAGE_CHECK}" = true ]]; then
+		echo -e "${bold_red:-}$(battery_percentage)%"
 	fi
 }
 
 if ! _command_exists battery_charge; then
 	# if user has installed battery plugin, skip this...
 	function battery_charge() {
-		: # no op
+		# no op
+		echo -n
 	}
 fi
 
-function aws_profile() {
-	if [[ -n "${AWS_DEFAULT_PROFILE:-}" ]]; then
-		echo -ne "${AWS_DEFAULT_PROFILE}"
+# The battery_char function depends on the presence of the battery_percentage function.
+# If battery_percentage is not defined, then define battery_char as a no-op.
+if ! _command_exists battery_percentage; then
+	function battery_char() {
+		# no op
+		echo -n
+	}
+fi
+
+function aws_profile {
+	if [[ $AWS_DEFAULT_PROFILE ]]; then
+		echo -e "${AWS_DEFAULT_PROFILE}"
+	else
+		echo -e "default"
+	fi
+}
+
+function __check_precmd_conflict() {
+	local f
+	for f in "${precmd_functions[@]}"; do
+		if [[ "${f}" == "${1}" ]]; then
+			return 0
+		fi
+	done
+	return 1
+}
+
+function safe_append_prompt_command {
+	local prompt_re
+
+	if [ "${__bp_imported:-missing}" == "defined" ]; then
+		# We are using bash-preexec
+		if ! __check_precmd_conflict "${1}"; then
+			precmd_functions+=("${1}")
+		fi
 	else
-		echo -ne "default"
+		# Set OS dependent exact match regular expression
+		if [[ ${OSTYPE} == darwin* ]]; then
+			# macOS
+			prompt_re="[[:<:]]${1}[[:>:]]"
+		else
+			# Linux, FreeBSD, etc.
+			prompt_re="\<${1}\>"
+		fi
+
+		if [[ ${PROMPT_COMMAND[*]:-} =~ ${prompt_re} ]]; then
+			return
+		elif [[ -z ${PROMPT_COMMAND} ]]; then
+			PROMPT_COMMAND="${1}"
+		else
+			PROMPT_COMMAND="${1};${PROMPT_COMMAND}"
+		fi
 	fi
 }
 
 function _save-and-reload-history() {
-	local autosave="${1:-${HISTORY_AUTOSAVE:-0}}"
-	[[ ${autosave} -eq 1 ]] && local HISTCONTROL="${HISTCONTROL:-}${HISTCONTROL:+:}autoshare"
-	_bash-it-history-auto-save && _bash-it-history-auto-load
+	local autosave=${1:-0}
+	[[ $autosave -eq 1 ]] && history -a && history -c && history -r
 }
diff --git a/themes/bira/bira.theme.bash b/themes/bira/bira.theme.bash
index f30d8d5d..7db03000 100644
--- a/themes/bira/bira.theme.bash
+++ b/themes/bira/bira.theme.bash
@@ -1,26 +1,24 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_PREFIX=" ${yellow?}‹"
-SCM_THEME_PROMPT_SUFFIX="›${reset_color?}"
+SCM_THEME_PROMPT_PREFIX=" ${yellow}‹"
+SCM_THEME_PROMPT_SUFFIX="›${reset_color}"
 
-VIRTUALENV_THEME_PROMPT_PREFIX=" ${cyan?}‹"
-VIRTUALENV_THEME_PROMPT_SUFFIX="›${reset_color?}"
+VIRTUALENV_THEME_PROMPT_PREFIX=" ${cyan}‹"
+VIRTUALENV_THEME_PROMPT_SUFFIX="›${reset_color}"
 
 bold="\[\e[1m\]"
 
-if [[ ${UID} -eq 0 ]]; then
-	user_host="${bold_red?}\u@\h${normal?}${reset_color?}"
+if [ ${UID} -eq 0 ]; then
+	user_host="${bold_red}\u@\h${normal}${reset_color}"
 else
-	user_host="${bold_green?}\u@\h${normal?}${reset_color?}"
+	user_host="${bold_green}\u@\h${normal}${reset_color}"
 fi
 
 function prompt_command() {
-	local current_dir=" ${bold_blue?}\w${normal?}${reset_color?}"
-	local virtualenv_prompt scm_prompt_info
-	virtualenv_prompt="$(virtualenv_prompt)"
-	scm_prompt_info="$(scm_prompt_info)"
-	PS1="╭─${user_host?}${current_dir}${virtualenv_prompt}${scm_prompt_info}\n╰─${bold?}\\$ ${normal?}"
+	local current_dir=" ${bold_blue}\w${normal}${reset_color}"
+	PS1="╭─${user_host}${current_dir}$(virtualenv_prompt)$(scm_prompt_info)\n╰─${bold}\\$ ${normal}"
 }
 
 safe_append_prompt_command prompt_command
diff --git a/themes/bobby-python/bobby-python.theme.bash b/themes/bobby-python/bobby-python.theme.bash
index 5a46b258..ebb3eab0 100644
--- a/themes/bobby-python/bobby-python.theme.bash
+++ b/themes/bobby-python/bobby-python.theme.bash
@@ -1,26 +1,27 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_DIRTY=" ${red?}✗"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
+SCM_THEME_PROMPT_DIRTY=" ${red}✗"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓"
 SCM_THEME_PROMPT_PREFIX=" |"
-SCM_THEME_PROMPT_SUFFIX="${green?}|"
+SCM_THEME_PROMPT_SUFFIX="${green}|"
 
-GIT_THEME_PROMPT_DIRTY=" ${red?}✗"
-GIT_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
-GIT_THEME_PROMPT_PREFIX=" ${green?}|"
-GIT_THEME_PROMPT_SUFFIX="${green?}|"
+GIT_THEME_PROMPT_DIRTY=" ${red}✗"
+GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓"
+GIT_THEME_PROMPT_PREFIX=" ${green}|"
+GIT_THEME_PROMPT_SUFFIX="${green}|"
 
 CONDAENV_THEME_PROMPT_SUFFIX="|"
 
 function prompt_command() {
-	PS1="\n${yellow?}$(python_version_prompt) " # Name of virtual env followed by python version
-	PS1+="${purple?}\h "
-	PS1+="${reset_color?}in "
-	PS1+="${green?}\w\n"
-	PS1+="${bold_cyan?}$(scm_char)"
-	PS1+="${green?}$(scm_prompt_info) "
-	PS1+="${green?}→${reset_color?} "
+	PS1="\n${yellow}$(python_version_prompt) " # Name of virtual env followed by python version
+	PS1+="${purple}\h "
+	PS1+="${reset_color}in "
+	PS1+="${green}\w\n"
+	PS1+="${bold_cyan}$(scm_char)"
+	PS1+="${green}$(scm_prompt_info) "
+	PS1+="${green}→${reset_color} "
 }
 
 safe_append_prompt_command prompt_command
diff --git a/themes/bobby/bobby.theme.bash b/themes/bobby/bobby.theme.bash
index 08f54c41..98d2cd8d 100644
--- a/themes/bobby/bobby.theme.bash
+++ b/themes/bobby/bobby.theme.bash
@@ -1,40 +1,41 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_DIRTY=" ${red?}✗"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
-SCM_THEME_PROMPT_PREFIX=" ${green?}|"
-SCM_THEME_PROMPT_SUFFIX="${green?}|"
+SCM_THEME_PROMPT_DIRTY=" ${red}✗"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓"
+SCM_THEME_PROMPT_PREFIX=" ${green}|"
+SCM_THEME_PROMPT_SUFFIX="${green}|"
 
-GIT_THEME_PROMPT_DIRTY=" ${red?}✗"
-GIT_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
-GIT_THEME_PROMPT_PREFIX=" ${green?}|"
-GIT_THEME_PROMPT_SUFFIX="${green?}|"
+GIT_THEME_PROMPT_DIRTY=" ${red}✗"
+GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓"
+GIT_THEME_PROMPT_PREFIX=" ${green}|"
+GIT_THEME_PROMPT_SUFFIX="${green}|"
 
 RVM_THEME_PROMPT_PREFIX="|"
 RVM_THEME_PROMPT_SUFFIX="|"
 
-function __bobby_clock() {
+__bobby_clock() {
 	printf '%s' "$(clock_prompt) "
 
-	if [[ "${THEME_SHOW_CLOCK_CHAR:-}" == "true" ]]; then
+	if [ "${THEME_SHOW_CLOCK_CHAR}" == "true" ]; then
 		printf '%s' "$(clock_char) "
 	fi
 }
 
 function prompt_command() {
 	PS1="\n$(battery_char) $(__bobby_clock)"
-	PS1+="${yellow?}$(ruby_version_prompt) "
-	PS1+="${purple?}\h "
-	PS1+="${reset_color?}in "
-	PS1+="${green?}\w\n"
-	PS1+="${bold_cyan?}$(scm_prompt_char_info) "
-	PS1+="${green?}→${reset_color?} "
+	PS1+="${yellow}$(ruby_version_prompt) "
+	PS1+="${purple}\h "
+	PS1+="${reset_color}in "
+	PS1+="${green}\w\n"
+	PS1+="${bold_cyan}$(scm_prompt_char_info) "
+	PS1+="${green}→${reset_color} "
 }
 
-: "${THEME_SHOW_CLOCK_CHAR:="true"}"
-: "${THEME_CLOCK_CHAR_COLOR:=${red?}}"
-: "${THEME_CLOCK_COLOR:=${bold_cyan?}}"
-: "${THEME_CLOCK_FORMAT:="%Y-%m-%d %H:%M:%S"}"
+THEME_SHOW_CLOCK_CHAR=${THEME_SHOW_CLOCK_CHAR:-"true"}
+THEME_CLOCK_CHAR_COLOR=${THEME_CLOCK_CHAR_COLOR:-"$red"}
+THEME_CLOCK_COLOR=${THEME_CLOCK_COLOR:-"$bold_cyan"}
+THEME_CLOCK_FORMAT=${THEME_CLOCK_FORMAT:-"%Y-%m-%d %H:%M:%S"}
 
 safe_append_prompt_command prompt_command
diff --git a/themes/brunton/brunton.theme.bash b/themes/brunton/brunton.theme.bash
index 04dcbb3e..166fcc84 100644
--- a/themes/brunton/brunton.theme.bash
+++ b/themes/brunton/brunton.theme.bash
@@ -1,31 +1,28 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
 SCM_THEME_PROMPT_PREFIX=""
 SCM_THEME_PROMPT_SUFFIX=""
 
-SCM_THEME_PROMPT_DIRTY=" ${bold_red?}✗${normal?}"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓${normal?}"
-SCM_GIT_CHAR="${bold_green?}±${normal?}"
-SCM_SVN_CHAR="${bold_cyan?}⑆${normal?}"
-SCM_HG_CHAR="${bold_red?}☿${normal?}"
+SCM_THEME_PROMPT_DIRTY=" ${bold_red}✗${normal}"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓${normal}"
+SCM_GIT_CHAR="${bold_green}±${normal}"
+SCM_SVN_CHAR="${bold_cyan}⑆${normal}"
+SCM_HG_CHAR="${bold_red}☿${normal}"
 
-function is_vim_shell() {
-	if [[ -n "${VIMRUNTIME:-}" ]]; then
-		echo "[${cyan?}vim shell${normal?}]"
+is_vim_shell() {
+	if [ -n "$VIMRUNTIME" ]; then
+		echo "[${cyan}vim shell${normal}]"
 	fi
 }
 
-function prompt() {
-	local SCM_PROMPT_FORMAT=' %s (%s)' clock_prompt battery_charge scm_prompt is_vim_shell
-	clock_prompt="$(clock_prompt)"
-	battery_charge="$(battery_charge)"
-	scm_prompt="$(scm_prompt)"
-	is_vim_shell="$(is_vim_shell)"
-	PS1="${white?}${background_blue?} \u${normal?}${background_blue?}@${red?}${background_blue?}\h ${clock_prompt} ${reset_color?}${normal?} ${battery_charge}\n${bold_black?}${background_white?} \w ${normal?}${scm_prompt}${is_vim_shell}\n${white?}>${normal?} "
+prompt() {
+	SCM_PROMPT_FORMAT=' %s (%s)'
+	PS1="${white}${background_blue} \u${normal}${background_blue}@${red}${background_blue}\h $(clock_prompt) ${reset_color}${normal} $(battery_charge)\n${bold_black}${background_white} \w ${normal}$(scm_prompt)$(is_vim_shell)\n${white}>${normal} "
 }
 
-: "${THEME_CLOCK_COLOR:=${blue?}${background_white?}}"
-: "${THEME_CLOCK_FORMAT:=" %H:%M:%S"}"
+THEME_CLOCK_COLOR=${THEME_CLOCK_COLOR:-"$blue$background_white"}
+THEME_CLOCK_FORMAT=${THEME_CLOCK_FORMAT:-" %H:%M:%S"}
 
 safe_append_prompt_command prompt
diff --git a/themes/candy/candy.theme.bash b/themes/candy/candy.theme.bash
index 69633bd9..7753e934 100644
--- a/themes/candy/candy.theme.bash
+++ b/themes/candy/candy.theme.bash
@@ -1,14 +1,12 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
 function prompt_command() {
-	local clock_prompt scm_prompt_info
-	clock_prompt="$(clock_prompt)"
-	scm_prompt_info="$(scm_prompt_info)"
-	PS1="${green?}\u@\h ${clock_prompt} ${reset_color?}${white?}\w${reset_color?}${scm_prompt_info}${blue?} →${bold_blue?} ${reset_color?} ${normal?}"
+	PS1="${green}\u@\h $(clock_prompt) ${reset_color}${white}\w${reset_color}$(scm_prompt_info)${blue} →${bold_blue} ${reset_color} ${normal}"
 }
 
-: "${THEME_CLOCK_COLOR:=${blue?}}"
-: "${THEME_CLOCK_FORMAT:="%I:%M:%S"}"
+THEME_CLOCK_COLOR=${THEME_CLOCK_COLOR:-"$blue"}
+THEME_CLOCK_FORMAT=${THEME_CLOCK_FORMAT:-"%I:%M:%S"}
 
 safe_append_prompt_command prompt_command
diff --git a/themes/codeword/codeword.theme.bash b/themes/codeword/codeword.theme.bash
index d52403c1..beab6a4a 100644
--- a/themes/codeword/codeword.theme.bash
+++ b/themes/codeword/codeword.theme.bash
@@ -1,23 +1,23 @@
 # shellcheck shell=bash
 
-SCM_THEME_PROMPT_PREFIX="${SCM_THEME_PROMPT_SUFFIX:-}"
-SCM_THEME_PROMPT_DIRTY="${bold_red?} ✗${normal?}"
-SCM_THEME_PROMPT_CLEAN="${bold_green?} ✓${normal?}"
-SCM_GIT_CHAR="${green?}±${normal?}"
+SCM_THEME_PROMPT_PREFIX=${SCM_THEME_PROMPT_SUFFIX}
+SCM_THEME_PROMPT_DIRTY="${bold_red} ✗${normal}"
+SCM_THEME_PROMPT_CLEAN="${bold_green} ✓${normal}"
+SCM_GIT_CHAR="${green}±${normal}"
 
-function mark_prompt() {
-    echo "${green?}\$${normal?}"
+mark_prompt() {
+    echo "${green}\$${normal}"
 }
 
-function user_host_path_prompt() {
-    ps_user="${green?}\u${normal?}";
-    ps_host="${blue?}\H${normal?}";
-    ps_path="${yellow?}\w${normal?}";
-    echo "${ps_user?}@${ps_host?}:${ps_path?}"
+user_host_path_prompt() {
+    ps_user="${green}\u${normal}";
+    ps_host="${blue}\H${normal}";
+    ps_path="${yellow}\w${normal}";
+    echo "$ps_user@$ps_host:$ps_path"
 }
 
-function prompt() {
-  local SCM_PROMPT_FORMAT=' [%s%s]'
+prompt() {
+  SCM_PROMPT_FORMAT=' [%s%s]'
   PS1="$(user_host_path_prompt)$(virtualenv_prompt)$(scm_prompt) $(mark_prompt) "
 }
 
diff --git a/themes/colors.theme.bash b/themes/colors.theme.bash
new file mode 100644
index 00000000..d5044d05
--- /dev/null
+++ b/themes/colors.theme.bash
@@ -0,0 +1,272 @@
+# shellcheck shell=bash
+# shellcheck disable=SC2005
+# shellcheck disable=SC2034
+
+function __ {
+  echo "$@"
+}
+
+function __make_ansi {
+  next=$1; shift
+  echo "\[\e[$(__$next $@)m\]"
+}
+
+function __make_echo {
+  next=$1; shift
+  echo "\033[$(__$next $@)m"
+}
+
+
+function __reset {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "0${out:+;${out}}"
+}
+
+function __bold {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "${out:+${out};}1"
+}
+
+function __faint {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "${out:+${out};}2"
+}
+
+function __italic {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "${out:+${out};}3"
+}
+
+function __underline {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "${out:+${out};}4"
+}
+
+function __negative {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "${out:+${out};}7"
+}
+
+function __crossed {
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "${out:+${out};}8"
+}
+
+
+function __color_normal_fg {
+  echo "3$1"
+}
+
+function __color_normal_bg {
+  echo "4$1"
+}
+
+function __color_bright_fg {
+  echo "9$1"
+}
+
+function __color_bright_bg {
+  echo "10$1"
+}
+
+
+function __color_black   {
+  echo "0"
+}
+
+function __color_red   {
+  echo "1"
+}
+
+function __color_green   {
+  echo "2"
+}
+
+function __color_yellow  {
+  echo "3"
+}
+
+function __color_blue  {
+  echo "4"
+}
+
+function __color_magenta {
+  echo "5"
+}
+
+function __color_cyan  {
+  echo "6"
+}
+
+function __color_white   {
+  echo "7"
+}
+
+function __color_rgb {
+  r=$1 && g=$2 && b=$3
+  [[ $r == $g && $g == $b ]] && echo $(( $r / 11 + 232 )) && return # gray range above 232
+  echo "8;5;$(( ($r * 36  + $b * 6 + $g) / 51 + 16 ))"
+}
+
+function __color {
+  color=$1; shift
+  case "$1" in
+    fg|bg) side="$1"; shift ;;
+    *) side=fg;;
+  esac
+  case "$1" in
+    normal|bright) mode="$1"; shift;;
+    *) mode=normal;;
+  esac
+  [[ $color == "rgb" ]] && rgb="$1 $2 $3"; shift 3
+
+  next=$1; shift
+  out="$(__$next $@)"
+  echo "$(__color_${mode}_${side} $(__color_${color} $rgb))${out:+;${out}}"
+}
+
+
+function __black   {
+  echo "$(__color black $@)"
+}
+
+function __red   {
+  echo "$(__color red $@)"
+}
+
+function __green   {
+  echo "$(__color green $@)"
+}
+
+function __yellow  {
+  echo "$(__color yellow $@)"
+}
+
+function __blue  {
+  echo "$(__color blue $@)"
+}
+
+function __magenta {
+  echo "$(__color magenta $@)"
+}
+
+function __cyan  {
+  echo "$(__color cyan $@)"
+}
+
+function __white   {
+  echo "$(__color white $@)"
+}
+
+function __rgb {
+  echo "$(__color rgb $@)"
+}
+
+
+function __color_parse {
+  next=$1; shift
+  echo "$(__$next $@)"
+}
+
+function color {
+  echo "$(__color_parse make_ansi $@)"
+}
+
+function echo_color {
+  echo "$(__color_parse make_echo $@)"
+}
+
+
+black="\[\e[0;30m\]"
+red="\[\e[0;31m\]"
+green="\[\e[0;32m\]"
+yellow="\[\e[0;33m\]"
+blue="\[\e[0;34m\]"
+purple="\[\e[0;35m\]"
+cyan="\[\e[0;36m\]"
+white="\[\e[0;37m\]"
+orange="\[\e[0;91m\]"
+
+bold_black="\[\e[30;1m\]"
+bold_red="\[\e[31;1m\]"
+bold_green="\[\e[32;1m\]"
+bold_yellow="\[\e[33;1m\]"
+bold_blue="\[\e[34;1m\]"
+bold_purple="\[\e[35;1m\]"
+bold_cyan="\[\e[36;1m\]"
+bold_white="\[\e[37;1m\]"
+bold_orange="\[\e[91;1m\]"
+
+underline_black="\[\e[30;4m\]"
+underline_red="\[\e[31;4m\]"
+underline_green="\[\e[32;4m\]"
+underline_yellow="\[\e[33;4m\]"
+underline_blue="\[\e[34;4m\]"
+underline_purple="\[\e[35;4m\]"
+underline_cyan="\[\e[36;4m\]"
+underline_white="\[\e[37;4m\]"
+underline_orange="\[\e[91;4m\]"
+
+background_black="\[\e[40m\]"
+background_red="\[\e[41m\]"
+background_green="\[\e[42m\]"
+background_yellow="\[\e[43m\]"
+background_blue="\[\e[44m\]"
+background_purple="\[\e[45m\]"
+background_cyan="\[\e[46m\]"
+background_white="\[\e[47;1m\]"
+background_orange="\[\e[101m\]"
+
+normal="\[\e[0m\]"
+reset_color="\[\e[39m\]"
+
+# These colors are meant to be used with `echo -e`
+echo_black="\033[0;30m"
+echo_red="\033[0;31m"
+echo_green="\033[0;32m"
+echo_yellow="\033[0;33m"
+echo_blue="\033[0;34m"
+echo_purple="\033[0;35m"
+echo_cyan="\033[0;36m"
+echo_white="\033[0;37;1m"
+echo_orange="\033[0;91m"
+
+echo_bold_black="\033[30;1m"
+echo_bold_red="\033[31;1m"
+echo_bold_green="\033[32;1m"
+echo_bold_yellow="\033[33;1m"
+echo_bold_blue="\033[34;1m"
+echo_bold_purple="\033[35;1m"
+echo_bold_cyan="\033[36;1m"
+echo_bold_white="\033[37;1m"
+echo_bold_orange="\033[91;1m"
+
+echo_underline_black="\033[30;4m"
+echo_underline_red="\033[31;4m"
+echo_underline_green="\033[32;4m"
+echo_underline_yellow="\033[33;4m"
+echo_underline_blue="\033[34;4m"
+echo_underline_purple="\033[35;4m"
+echo_underline_cyan="\033[36;4m"
+echo_underline_white="\033[37;4m"
+echo_underline_orange="\033[91;4m"
+
+echo_background_black="\033[40m"
+echo_background_red="\033[41m"
+echo_background_green="\033[42m"
+echo_background_yellow="\033[43m"
+echo_background_blue="\033[44m"
+echo_background_purple="\033[45m"
+echo_background_cyan="\033[46m"
+echo_background_white="\033[47;1m"
+echo_background_orange="\033[101m"
+
+echo_normal="\033[0m"
+echo_reset_color="\033[39m"
diff --git a/themes/command_duration.theme.bash b/themes/command_duration.theme.bash
new file mode 100644
index 00000000..cf91785c
--- /dev/null
+++ b/themes/command_duration.theme.bash
@@ -0,0 +1,69 @@
+# shellcheck shell=bash
+
+if [ -z "$BASH_IT_COMMAND_DURATION" ] || [ "$BASH_IT_COMMAND_DURATION" != true ]; then
+	_command_duration() {
+		echo -n
+	}
+	return
+fi
+
+# Define tmp dir and file
+COMMAND_DURATION_TMPDIR="${TMPDIR:-/tmp}"
+COMMAND_DURATION_FILE="${COMMAND_DURATION_FILE:-$COMMAND_DURATION_TMPDIR/bashit_theme_execution_$BASHPID}"
+
+COMMAND_DURATION_ICON=${COMMAND_DURATION_ICON:-'  '}
+COMMAND_DURATION_MIN_SECONDS=${COMMAND_DURATION_MIN_SECONDS:-'1'}
+
+trap _command_duration_delete_temp_file EXIT HUP INT TERM
+
+_command_duration_delete_temp_file() {
+	if [[ -f "$COMMAND_DURATION_FILE" ]]; then
+		rm -f "$COMMAND_DURATION_FILE"
+	fi
+}
+
+_command_duration_pre_exec() {
+	date +%s.%1N > "$COMMAND_DURATION_FILE"
+}
+
+_command_duration() {
+	local command_duration command_start current_time
+	local minutes seconds deciseconds
+	local command_start_sseconds current_time_seconds command_start_deciseconds current_time_deciseconds
+	current_time=$(date +%s.%1N)
+
+	if [[ -f "$COMMAND_DURATION_FILE" ]]; then
+		command_start=$(< "$COMMAND_DURATION_FILE")
+		command_start_sseconds=${command_start%.*}
+		current_time_seconds=${current_time%.*}
+
+		command_start_deciseconds=$((10#${command_start#*.}))
+		current_time_deciseconds=$((10#${current_time#*.}))
+
+		# seconds
+		command_duration=$((current_time_seconds - command_start_sseconds))
+
+		if ((current_time_deciseconds >= command_start_deciseconds)); then
+			deciseconds=$(((current_time_deciseconds - command_start_deciseconds)))
+		else
+			((command_duration -= 1))
+			deciseconds=$((10 - ((command_start_deciseconds - current_time_deciseconds))))
+		fi
+		command rm "$COMMAND_DURATION_FILE"
+	else
+		command_duration=0
+	fi
+
+	if ((command_duration > 0)); then
+		minutes=$((command_duration / 60))
+		seconds=$((command_duration % 60))
+	fi
+
+	if ((minutes > 0)); then
+		printf "%s%s%dm %ds" "$COMMAND_DURATION_ICON" "$COMMAND_DURATION_COLOR" "$minutes" "$seconds"
+	elif ((seconds >= COMMAND_DURATION_MIN_SECONDS)); then
+		printf "%s%s%d.%01ds" "$COMMAND_DURATION_ICON" "$COMMAND_DURATION_COLOR" "$seconds" "$deciseconds"
+	fi
+}
+
+preexec_functions+=(_command_duration_pre_exec)
diff --git a/themes/doubletime_multiline/doubletime_multiline.theme.bash b/themes/doubletime_multiline/doubletime_multiline.theme.bash
index f2dfe43a..18213571 100644
--- a/themes/doubletime_multiline/doubletime_multiline.theme.bash
+++ b/themes/doubletime_multiline/doubletime_multiline.theme.bash
@@ -8,7 +8,7 @@ function prompt_setter() {
   PS1="
 $(clock_prompt) $(scm_char) [$THEME_PROMPT_HOST_COLOR\u@${THEME_PROMPT_HOST}$reset_color] $(virtualenv_prompt)$(ruby_version_prompt)
 \w
-$(scm_prompt)$reset_color $ "
+$(doubletime_scm_prompt)$reset_color $ "
   PS2='> '
   PS4='+ '
 }
diff --git a/themes/doubletime_multiline_pyonly/doubletime_multiline_pyonly.theme.bash b/themes/doubletime_multiline_pyonly/doubletime_multiline_pyonly.theme.bash
index 0fe0eff4..9bc4c334 100644
--- a/themes/doubletime_multiline_pyonly/doubletime_multiline_pyonly.theme.bash
+++ b/themes/doubletime_multiline_pyonly/doubletime_multiline_pyonly.theme.bash
@@ -8,7 +8,7 @@ function prompt_setter() {
   PS1="
 $(clock_prompt) $(scm_char) [$THEME_PROMPT_HOST_COLOR\u@${THEME_PROMPT_HOST}$reset_color] $(virtualenv_prompt)
 \w
-$(scm_prompt)$reset_color $ "
+$(doubletime_scm_prompt)$reset_color $ "
   PS2='> '
   PS4='+ '
 }
diff --git a/themes/easy/easy.theme.bash b/themes/easy/easy.theme.bash
index 3cb171d7..7e2e3389 100644
--- a/themes/easy/easy.theme.bash
+++ b/themes/easy/easy.theme.bash
@@ -1,22 +1,21 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_PREFIX="${bold_green?}[ ${normal?}"
-SCM_THEME_PROMPT_SUFFIX="${bold_green?} ] "
-SCM_THEME_PROMPT_DIRTY=" ${red?}✗"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓"
+SCM_THEME_PROMPT_PREFIX="${bold_green}[ ${normal}"
+SCM_THEME_PROMPT_SUFFIX="${bold_green} ] "
+SCM_THEME_PROMPT_DIRTY=" ${red}✗"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓"
 
-function prompt_command() {
-	local scm_prompt_info
-	if [ "${USER:-${LOGNAME?}}" = root ]; then
-		cursor_color="${bold_red?}"
-		user_color="${green?}"
+prompt_command() {
+	if [ "$(whoami)" = root ]; then
+		cursor_color="${bold_red}"
+		user_color="${green}"
 	else
-		cursor_color="${bold_green?}"
-		user_color="${white?}"
+		cursor_color="${bold_green}"
+		user_color="${white}"
 	fi
-	scm_prompt_info="$(scm_prompt_info)"
-	PS1="${user_color}\u${normal?}@${white?}\h ${bold_black?}\w\n${reset_color?}${scm_prompt_info}${cursor_color}❯ ${normal?}"
+	PS1="${user_color}\u${normal}@${white}\h ${bold_black}\w\n${reset_color}$(scm_prompt_info)${cursor_color}❯ ${normal}"
 }
 
 safe_append_prompt_command prompt_command
diff --git a/themes/essential/essential.theme.bash b/themes/essential/essential.theme.bash
index 05e84314..ae988733 100644
--- a/themes/essential/essential.theme.bash
+++ b/themes/essential/essential.theme.bash
@@ -1,93 +1,96 @@
-# shellcheck shell=bash
+#!/usr/bin/env bash
+
+# https://github.com/koalaman/shellcheck/wiki/Sc2154
+# shellcheck disable=SC2154
 
 function _user-prompt() {
-	local -r user='\u'
-
-	if [[ "${EUID}" -eq 0 ]]; then
-		# Privileged users:
-		local -r user_color="${bold_red?}"
-	else
-		# Standard users:
-		local -r user_color="${bold_green?}"
-	fi
-
-	# Print the current user's name (colored according to their current EUID):
-	printf '%b%s%b' "${user_color}" "${user}" "${normal?}"
+  local -r user='\\u'
+
+  if [[ "${EUID}" -eq 0 ]]; then
+    # Privileged users:
+    local -r user_color="${bold_red}"
+  else
+    # Standard users:
+    local -r user_color="${bold_green}"
+  fi
+
+  # Print the current user's name (colored according to their current EUID):
+  echo -e "${user_color}${user}${normal}"
 }
 
 function _host-prompt() {
-	local -r host='\h'
-
-	# Check whether or not $SSH_TTY is set:
-	if [[ -z "${SSH_TTY:-}" ]]; then
-		# For local hosts, set the host's prompt color to blue:
-		local -r host_color="${bold_blue?}"
-	else
-		# For remote hosts, set the host's prompt color to red:
-		local -r host_color="${bold_red?}"
-	fi
-
-	# Print the current hostname (colored according to $SSH_TTY's status):
-	printf '%b%s%b' "${host_color}" "${host}" "${normal?}"
+  local -r host='\\h'
+
+  # Check whether or not $SSH_TTY is set:
+  if [[ -z "${SSH_TTY}" ]]; then
+    # For local hosts, set the host's prompt color to blue:
+    local -r host_color="${bold_blue}"
+  else
+    # For remote hosts, set the host's prompt color to red:
+    local -r host_color="${bold_red}"
+  fi
+
+  # Print the current hostname (colored according to $SSH_TTY's status):
+  echo -e "${host_color}${host}${normal}"
 }
 
 function _user-at-host-prompt() {
-	# Concatenate the user and host prompts into: user@host:
-	_user-prompt
-	printf '%b@' "${bold_white?}"
-	_host-prompt
+  # Concatenate the user and host prompts into: user@host:
+  echo -e "$(_user-prompt)${bold_white}@$(_host-prompt)"
 }
 
 function _exit-status-prompt() {
-	local -r prompt_string="${1}"
-	local -r exit_status="${2}"
-
-	# Check the exit status of the last command captured by $exit_status:
-	if [[ "${exit_status}" -eq 0 ]]; then
-		# For commands that return an exit status of zero, set the exit status's
-		# notifier to green:
-		local -r exit_status_color="${bold_green?}"
-	else
-		# For commands that return a non-zero exit status, set the exit status's
-		# notifier to red:
-		local -r exit_status_color="${bold_red?}"
-	fi
-
-	if [[ "${prompt_string}" -eq 1 ]]; then
-		# $PS1:
-		printf '%b +%b' "${exit_status_color}" "${normal?} "
-	elif [[ "${prompt_string}" -eq 2 ]]; then
-		# $PS2:
-		printf '%b |%b' "${exit_status_color}" "${normal?} "
-	else
-		# Default:
-		printf '%b ?%b' "${exit_status_color}" "${normal?} "
-	fi
+  local -r prompt_string="${1}"
+  local -r exit_status="${2}"
+
+  # Check the exit status of the last command captured by $exit_status:
+  if [[ "${exit_status}" -eq 0 ]]; then
+    # For commands that return an exit status of zero, set the exit status's
+    # notifier to green:
+    local -r exit_status_color="${bold_green}"
+  else
+    # For commands that return a non-zero exit status, set the exit status's
+    # notifier to red:
+    local -r exit_status_color="${bold_red}"
+  fi
+
+  echo -ne "${exit_status_color}"
+  if [[ "${prompt_string}" -eq 1 ]]; then
+    # $PS1:
+    echo -e " +${normal} "
+  elif [[ "${prompt_string}" -eq 2 ]]; then
+    # $PS2:
+    echo -e " |${normal} "
+  else
+    # Default:
+    echo -e " ?${normal} "
+  fi
 }
 
 function _ps1() {
-	local -r time='\t'
-	local -r pwd='\w'
+  local -r time='\\t'
 
-	printf '%b%s ' "${bold_white?}" "${time}"
-	_user-at-host-prompt
-	printf '%b:%b%s\n' "${bold_white?}" "${normal?}" "${pwd}"
-	_exit-status-prompt 1 "${exit_status}"
+  echo -ne "${bold_white}${time} "
+  echo -ne "$(_user-at-host-prompt)"
+  echo -e "${bold_white}:${normal}${PWD}"
+  echo -e "$(_exit-status-prompt 1 "${exit_status}")"
 }
 
 function _ps2() {
-	_exit-status-prompt 2 "${exit_status}"
+  echo -e "$(_exit-status-prompt 2 "${exit_status}")"
 }
 
 function prompt_command() {
-	# Capture the exit status of the last command:
-	local -r exit_status="${?}"
+  # Capture the exit status of the last command:
+  local -r exit_status="${?}"
 
-	# Build the $PS1 prompt:
-	PS1="$(_ps1)"
+  # Build the $PS1 prompt:
+  PS1="$(_ps1)"
 
-	# Build the $PS2 prompt:
-	PS2="$(_ps2)"
+  # Build the $PS2 prompt:
+  PS2="$(_ps2)"
 }
 
 safe_append_prompt_command prompt_command
+
+# vim: sw=2 ts=2 et:
diff --git a/themes/githelpers.theme.bash b/themes/githelpers.theme.bash
index 719effec..ba089392 100644
--- a/themes/githelpers.theme.bash
+++ b/themes/githelpers.theme.bash
@@ -1,106 +1,99 @@
-# shellcheck shell=bash
+#!/usr/bin/env bash
 
-function _git-symbolic-ref() {
-	git symbolic-ref -q HEAD 2> /dev/null
+function _git-symbolic-ref {
+ git symbolic-ref -q HEAD 2> /dev/null
 }
 
 # When on a branch, this is often the same as _git-commit-description,
 # but this can be different when two branches are pointing to the
 # same commit. _git-branch is used to explicitly choose the checked-out
 # branch.
-function _git-branch() {
-	if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-		if [[ -n "${VCS_STATUS_LOCAL_BRANCH:-}" ]]; then
-			echo "${VCS_STATUS_LOCAL_BRANCH}"
-		else
-			return 1
-		fi
-	else
-		git symbolic-ref -q --short HEAD 2> /dev/null || return 1
-	fi
+function _git-branch {
+  if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+    test -n "${VCS_STATUS_LOCAL_BRANCH}" && echo "${VCS_STATUS_LOCAL_BRANCH}" || return 1
+  else
+    git symbolic-ref -q --short HEAD 2> /dev/null || return 1
+  fi
 }
 
-function _git-tag() {
-	if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-		if [[ -n "${VCS_STATUS_TAG:-}" ]]; then
-			echo "${VCS_STATUS_TAG}"
-		fi
-	else
-		git describe --tags --exact-match 2> /dev/null
-	fi
+function _git-tag {
+  if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+    test -n "${VCS_STATUS_TAG}" && echo "${VCS_STATUS_TAG}"
+  else
+    git describe --tags --exact-match 2> /dev/null
+  fi
 }
 
-function _git-commit-description() {
-	git describe --contains --all 2> /dev/null
+function _git-commit-description {
+  git describe --contains --all 2> /dev/null
 }
 
-function _git-short-sha() {
-	if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-		echo "${VCS_STATUS_COMMIT:0:7}"
-	else
-		git rev-parse --short HEAD
-	fi
+function _git-short-sha {
+  if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+    echo ${VCS_STATUS_COMMIT:0:7}
+  else
+    git rev-parse --short HEAD
+  fi
 }
 
 # Try the checked-out branch first to avoid collision with branches pointing to the same ref.
-function _git-friendly-ref() {
-	if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-		_git-branch || _git-tag || _git-short-sha # there is no tag based describe output in gitstatus
-	else
-		_git-branch || _git-tag || _git-commit-description || _git-short-sha
-	fi
+function _git-friendly-ref {
+  if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+    _git-branch || _git-tag || _git-short-sha # there is no tag based describe output in gitstatus
+  else
+    _git-branch || _git-tag || _git-commit-description || _git-short-sha
+  fi
 }
 
-function _git-num-remotes() {
-	git remote | wc -l
+function _git-num-remotes {
+  git remote | wc -l
 }
 
-function _git-upstream() {
-	local ref
-	ref="$(_git-symbolic-ref)" || return 1
-	git for-each-ref --format="%(upstream:short)" "${ref}"
+function _git-upstream {
+  local ref
+  ref="$(_git-symbolic-ref)" || return 1
+  git for-each-ref --format="%(upstream:short)" "${ref}"
 }
 
-function _git-upstream-remote() {
-	local upstream branch
-	upstream="$(_git-upstream)" || return 1
+function _git-upstream-remote {
+  local upstream
+  upstream="$(_git-upstream)" || return 1
 
-	branch="$(_git-upstream-branch)" || return 1
-	echo "${upstream%"/${branch}"}"
+  local branch
+  branch="$(_git-upstream-branch)" || return 1
+  echo "${upstream%"/${branch}"}"
 }
 
-function _git-upstream-branch() {
-	local ref
-	ref="$(_git-symbolic-ref)" || return 1
+function _git-upstream-branch {
+  local ref
+  ref="$(_git-symbolic-ref)" || return 1
 
-	# git versions < 2.13.0 do not support "strip" for upstream format
-	# regex replacement gives the wrong result for any remotes with slashes in the name,
-	# so only use when the strip format fails.
-	git for-each-ref --format="%(upstream:strip=3)" "${ref}" 2> /dev/null || git for-each-ref --format="%(upstream)" "${ref}" | sed -e "s/.*\/.*\/.*\///"
+  # git versions < 2.13.0 do not support "strip" for upstream format
+  # regex replacement gives the wrong result for any remotes with slashes in the name,
+  # so only use when the strip format fails.
+  git for-each-ref --format="%(upstream:strip=3)" "${ref}" 2> /dev/null || git for-each-ref --format="%(upstream)" "${ref}" | sed -e "s/.*\/.*\/.*\///"
 }
 
-function _git-upstream-behind-ahead() {
-	git rev-list --left-right --count "$(_git-upstream)...HEAD" 2> /dev/null
+function _git-upstream-behind-ahead {
+  git rev-list --left-right --count "$(_git-upstream)...HEAD" 2> /dev/null
 }
 
-function _git-upstream-branch-gone() {
-	[[ "$(git status -s -b | sed -e 's/.* //')" == "[gone]" ]]
+function _git-upstream-branch-gone {
+  [[ "$(git status -s -b | sed -e 's/.* //')" == "[gone]" ]]
 }
 
-function _git-hide-status() {
-	[[ "$(git config --get bash-it.hide-status)" == "1" ]]
+function _git-hide-status {
+  [[ "$(git config --get bash-it.hide-status)" == "1" ]]
 }
 
-function _git-status() {
-	local git_status_flags=
-	if [[ "${SCM_GIT_IGNORE_UNTRACKED:-}" == "true" ]]; then
-		git_status_flags='-uno'
-	fi
-	git status --porcelain "${git_status_flags:---}" 2> /dev/null
+function _git-status {
+  local git_status_flags=
+  [[ "${SCM_GIT_IGNORE_UNTRACKED}" = "true" ]] && git_status_flags='-uno' || true
+  git status --porcelain ${git_status_flags} 2> /dev/null
 }
 
-function _git-status-counts() {
-	_git-status | awk '
+function _git-status-counts {
+  _git-status | awk '
   BEGIN {
     untracked=0;
     unstaged=0;
@@ -123,51 +116,85 @@ function _git-status-counts() {
   }'
 }
 
-function _git-remote-info() {
-	local same_branch_name="" branch_prefix
-	# prompt handling only, reimplement because patching the routine below gets ugly
-	if [[ "${SCM_GIT_GITSTATUS_RAN:-}" == "true" ]]; then
-		[[ "${VCS_STATUS_REMOTE_NAME?}" == "" ]] && return
-		[[ "${VCS_STATUS_LOCAL_BRANCH?}" == "${VCS_STATUS_REMOTE_BRANCH?}" ]] && same_branch_name=true
-		# no multiple remote support in gitstatusd
-		if [[ "${SCM_GIT_SHOW_REMOTE_INFO:-}" == "true" || "${SCM_GIT_SHOW_REMOTE_INFO:-}" == "auto" ]]; then
-			if [[ ${same_branch_name:-} != "true" ]]; then
-				remote_info="${VCS_STATUS_REMOTE_NAME?}/${VCS_STATUS_REMOTE_BRANCH?}"
-			else
-				remote_info="${VCS_STATUS_REMOTE_NAME?}"
-			fi
-		elif [[ ${same_branch_name:-} != "true" ]]; then
-			remote_info="${VCS_STATUS_REMOTE_BRANCH?}"
-		fi
-		if [[ -n "${remote_info:-}" ]]; then
-			# no support for gone remote branches in gitstatusd
-			branch_prefix="${SCM_THEME_BRANCH_TRACK_PREFIX:-}"
-			echo "${branch_prefix}${remote_info:-}"
-		fi
-	else
-		[[ "$(_git-upstream)" == "" ]] && return
-
-		[[ "$(_git-branch)" == "$(_git-upstream-branch)" ]] && same_branch_name=true
-		if [[ ("${SCM_GIT_SHOW_REMOTE_INFO}" == "auto" && "$(_git-num-remotes)" -ge 2) ||
-		"${SCM_GIT_SHOW_REMOTE_INFO}" == "true" ]]; then
-			if [[ ${same_branch_name:-} != "true" ]]; then
-				# shellcheck disable=SC2016
-				remote_info='$(_git-upstream)'
-			else
-				remote_info="$(_git-upstream-remote)"
-			fi
-		elif [[ ${same_branch_name:-} != "true" ]]; then
-			# shellcheck disable=SC2016
-			remote_info='$(_git-upstream-branch)'
-		fi
-		if [[ -n "${remote_info:-}" ]]; then
-			local branch_prefix
-			if _git-upstream-branch-gone; then
-				branch_prefix="${SCM_THEME_BRANCH_GONE_PREFIX:-}"
-			else
-				branch_prefix="${SCM_THEME_BRANCH_TRACK_PREFIX:-}"
-			fi
-			echo "${branch_prefix}${remote_info:-}"
-		fi
-	fi
+function _git-remote-info {
+
+  # prompt handling only, reimplement because patching the routine below gets ugly
+  if [[ "${SCM_GIT_GITSTATUS_RAN}" == "true" ]]; then
+    [[ "${VCS_STATUS_REMOTE_NAME}" == "" ]] && return
+    [[ "${VCS_STATUS_LOCAL_BRANCH}" == "${VCS_STATUS_REMOTE_BRANCH}" ]] && local same_branch_name=true
+    local same_branch_name=
+    [[ "${VCS_STATUS_LOCAL_BRANCH}" == "${VCS_STATUS_REMOTE_BRANCH}" ]] && same_branch_name=true
+    # no multiple remote support in gitstatusd
+    if [[ "${SCM_GIT_SHOW_REMOTE_INFO}" = "true" || "${SCM_GIT_SHOW_REMOTE_INFO}" = "auto" ]]; then
+      if [[ "${same_branch_name}" != "true" ]]; then
+        remote_info="${VCS_STATUS_REMOTE_NAME}/${VCS_STATUS_REMOTE_BRANCH}"
+      else
+        remote_info="${VCS_STATUS_REMOTE_NAME}"
+      fi
+    elif [[ ${same_branch_name} != "true" ]]; then
+      remote_info="${VCS_STATUS_REMOTE_BRANCH}"
+    fi
+    if [[ -n "${remote_info}" ]];then
+      # no support for gone remote branches in gitstatusd
+      local branch_prefix="${SCM_THEME_BRANCH_TRACK_PREFIX}"
+      echo "${branch_prefix}${remote_info}"
+    fi
+  else
+    [[ "$(_git-upstream)" == "" ]] && return
+
+    [[ "$(_git-branch)" == "$(_git-upstream-branch)" ]] && local same_branch_name=true
+    local same_branch_name=
+    [[ "$(_git-branch)" == "$(_git-upstream-branch)" ]] && same_branch_name=true
+    if [[ ("${SCM_GIT_SHOW_REMOTE_INFO}" = "auto" && "$(_git-num-remotes)" -ge 2) ||
+           "${SCM_GIT_SHOW_REMOTE_INFO}" = "true" ]]; then
+      if [[ "${same_branch_name}" != "true" ]]; then
+        remote_info="\$(_git-upstream)"
+      else
+        remote_info="$(_git-upstream-remote)"
+      fi
+    elif [[ ${same_branch_name} != "true" ]]; then
+      remote_info="\$(_git-upstream-branch)"
+    fi
+    if [[ -n "${remote_info}" ]];then
+      local branch_prefix
+      if _git-upstream-branch-gone; then
+        branch_prefix="${SCM_THEME_BRANCH_GONE_PREFIX}"
+      else
+        branch_prefix="${SCM_THEME_BRANCH_TRACK_PREFIX}"
+      fi
+      echo "${branch_prefix}${remote_info}"
+    fi
+  fi
+}
+
+# Unused by bash-it, present for API compatibility
+function git_status_summary {
+  awk '
+  BEGIN {
+    untracked=0;
+    unstaged=0;
+    staged=0;
+  }
+  {
+    if (!after_first && $0 ~ /^##.+/) {
+      print $0
+      seen_header = 1
+    } else if ($0 ~ /^\?\? .+/) {
+      untracked += 1
+    } else {
+      if ($0 ~ /^.[^ ] .+/) {
+        unstaged += 1
+      }
+      if ($0 ~ /^[^ ]. .+/) {
+        staged += 1
+      }
+    }
+    after_first = 1
+  }
+  END {
+    if (!seen_header) {
+      print
+    }
+    print untracked "\t" unstaged "\t" staged
+  }'
 }
diff --git a/themes/gitline/powerline.base.bash b/themes/gitline/powerline.base.bash
index 7f6f3130..4f6b17b0 100644
--- a/themes/gitline/powerline.base.bash
+++ b/themes/gitline/powerline.base.bash
@@ -1,3 +1,5 @@
+# Sudo check after every command
+THEME_CHECK_SUDO=${THEME_CHECK_SUDO:=true}
 
 #To set color for foreground and background
 function set_color {
diff --git a/themes/norbu/norbu.theme.bash b/themes/norbu/norbu.theme.bash
index def58d81..184c13c9 100644
--- a/themes/norbu/norbu.theme.bash
+++ b/themes/norbu/norbu.theme.bash
@@ -1,23 +1,21 @@
-# shellcheck shell=bash
-# shellcheck disable=SC2034 # Expected behavior for themes.
+#!/usr/bin/env bash
 
-function set_prompt_symbol() {
-	if [[ $1 -eq 0 ]]; then
-		prompt_symbol=">_"
-	else
-		prompt_symbol="${orange?}>_${normal?}"
-	fi
+function set_prompt_symbol () {
+    if test $1 -eq 0 ; then
+	PROMPT_SYMBOL=">_"
+    else
+	PROMPT_SYMBOL="${orange}>_${normal}"
+    fi
 }
-
 function prompt_command() {
-	local ret_val="$?" prompt_symbol scm_prompt_info
-	if [[ -n "${VIRTUAL_ENV:-}" ]]; then
-		PYTHON_VIRTUALENV="${bold_yellow?}[${VIRTUAL_ENV##*/}]"
-	fi
+    set_prompt_symbol $?
+    if test -z "$VIRTUAL_ENV" ; then
+	PYTHON_VIRTUALENV=""
+    else
+	PYTHON_VIRTUALENV="${bold_yellow}[`basename \"$VIRTUAL_ENV\"`]"
+    fi
 
-	scm_prompt_info="$(scm_prompt_info)"
-	set_prompt_symbol "${ret_val}"
-	PS1="${bold_orange?}${PYTHON_VIRTUALENV:-}${reset_color?}${bold_green?}[\w]${bold_blue?}[${scm_prompt_info}]${normal?} \n${prompt_symbol} "
+    PS1="${bold_orange}${PYTHON_VIRTUALENV}${reset_color}${bold_green}[\w]${bold_blue}\[$(scm_prompt_info)\]${normal} \n${PROMPT_SYMBOL} "
 }
 
 # scm themeing
diff --git a/themes/p4helpers.theme.bash b/themes/p4helpers.theme.bash
index 30b520cc..27a777ac 100644
--- a/themes/p4helpers.theme.bash
+++ b/themes/p4helpers.theme.bash
@@ -1,18 +1,18 @@
-# shellcheck shell=bash
+#!/usr/bin/env bash
 
 function _p4-opened {
-	timeout 2.0s p4 opened -s 2> /dev/null
+  timeout 2.0s p4 opened -s 2> /dev/null
 }
 
 function _p4-opened-counts {
-	# Return the following counts seperated by tabs:
-	#  - count of opened files
-	#  - count of pending changesets (other than defaults)
-	#  - count of files in the default changeset
-	#  - count of opened files in add mode
-	#  - count of opened files in edit mode
-	#  - count of opened files in delete mode
-	_p4-opened | awk '
+  # Return the following counts seperated by tabs:
+  #  - count of opened files
+  #  - count of pending changesets (other than defaults)
+  #  - count of files in the default changeset
+  #  - count of opened files in add mode
+  #  - count of opened files in edit mode
+  #  - count of opened files in delete mode
+  _p4-opened | awk '
   BEGIN {
     opened=0;
     type_array["edit"]=0;
diff --git a/themes/pete/pete.theme.bash b/themes/pete/pete.theme.bash
index e55ad6eb..d29553f8 100644
--- a/themes/pete/pete.theme.bash
+++ b/themes/pete/pete.theme.bash
@@ -1,16 +1,11 @@
 # shellcheck shell=bash
-# shellcheck disable=SC2034 # Expected behavior for themes.
 
-function prompt_setter() {
-	local clock_prompt scm_char scm_prompt_info ruby_version_prompt
-	clock_prompt="$(clock_prompt)"
-	scm_char="$(scm_char)"
-	scm_prompt_info="$(scm_prompt_info)"
-	ruby_version_prompt="$(ruby_version_prompt)"
-	_save-and-reload-history 1 # Save history
-	PS1="(${clock_prompt}) ${scm_char} [${blue?}\u${reset_color?}@${green?}\H${reset_color?}] ${yellow?}\w${reset_color?}${scm_prompt_info}${ruby_version_prompt} ${reset_color?} "
-	PS2='> '
-	PS4='+ '
+prompt_setter() {
+  # Save history
+  _save-and-reload-history 1
+  PS1="($(clock_prompt)) $(scm_char) [$blue\u$reset_color@$green\H$reset_color] $yellow\w${reset_color}$(scm_prompt_info)$(ruby_version_prompt) $reset_color "
+  PS2='> '
+  PS4='+ '
 }
 
 safe_append_prompt_command prompt_setter
diff --git a/themes/powerline-plain/powerline-plain.base.bash b/themes/powerline-plain/powerline-plain.base.bash
index ce91ef89..03a857f1 100644
--- a/themes/powerline-plain/powerline-plain.base.bash
+++ b/themes/powerline-plain/powerline-plain.base.bash
@@ -52,7 +52,7 @@ function __powerline_prompt_command {
     LEFT_PROMPT+=" "
   fi
 
-  PS1="${LEFT_PROMPT}${PROMPT_AFTER}"
+  PS1="${LEFT_PROMPT}${PROMPT_AFTER}\n\$ "
 
   ## cleanup ##
   unset LAST_SEGMENT_COLOR \
diff --git a/themes/powerline-plain/powerline-plain.theme.bash b/themes/powerline-plain/powerline-plain.theme.bash
index 6ff68e8f..36369633 100644
--- a/themes/powerline-plain/powerline-plain.theme.bash
+++ b/themes/powerline-plain/powerline-plain.theme.bash
@@ -2,7 +2,10 @@
 
 . "$BASH_IT/themes/powerline-plain/powerline-plain.base.bash"
 
-USER_INFO_SSH_CHAR=${POWERLINE_USER_INFO_SSH_CHAR:="⌁ "}
+# • 🐍 Python
+# • 💻 Twitch
+# • 🔊 Soundeffects
+USER_INFO_SSH_CHAR=${POWERLINE_USER_INFO_SSH_CHAR:="💻 "}
 USER_INFO_THEME_PROMPT_COLOR=${POWERLINE_USER_INFO_COLOR:=32}
 USER_INFO_THEME_PROMPT_COLOR_SUDO=${POWERLINE_USER_INFO_COLOR_SUDO:=202}
 
@@ -14,13 +17,13 @@ POWERLINE_COMPACT_AFTER_LAST_SEGMENT=${POWERLINE_COMPACT_AFTER_LAST_SEGMENT:=${P
 POWERLINE_COMPACT_PROMPT=${POWERLINE_COMPACT_PROMPT:=${POWERLINE_COMPACT}}
 POWERLINE_PROMPT_AFTER=${POWERLINE_PROMPT_AFTER:-""}
 
-PYTHON_VENV_CHAR=${POWERLINE_PYTHON_VENV_CHAR:="ⓔ "}
-CONDA_PYTHON_VENV_CHAR=${POWERLINE_CONDA_PYTHON_VENV_CHAR:="ⓔ "}
+PYTHON_VENV_CHAR=${POWERLINE_PYTHON_VENV_CHAR:="🐍 "}
+CONDA_PYTHON_VENV_CHAR=${POWERLINE_CONDA_PYTHON_VENV_CHAR:="🐍 "}
 PYTHON_VENV_THEME_PROMPT_COLOR=${POWERLINE_PYTHON_VENV_COLOR:=35}
 
 SCM_NONE_CHAR=""
-SCM_GIT_CHAR=${POWERLINE_SCM_GIT_CHAR:="⎇  "}
-SCM_HG_CHAR=${POWERLINE_SCM_HG_CHAR:="☿ "}
+SCM_GIT_CHAR=${POWERLINE_SCM_GIT_CHAR:=" "}
+SCM_HG_CHAR=${POWERLINE_SCM_HG_CHAR:=" "}
 SCM_THEME_PROMPT_CLEAN=""
 SCM_THEME_PROMPT_DIRTY=""
 SCM_THEME_PROMPT_CLEAN_COLOR=${POWERLINE_SCM_CLEAN_COLOR:=25}
@@ -47,9 +50,6 @@ TERRAFORM_CHAR=${POWERLINE_TERRAFORM_CHAR:="❲t❳ "}
 KUBERNETES_CONTEXT_THEME_CHAR=${POWERLINE_KUBERNETES_CONTEXT_CHAR:="⎈ "}
 KUBERNETES_CONTEXT_THEME_PROMPT_COLOR=${POWERLINE_KUBERNETES_CONTEXT_COLOR:=26}
 
-KUBERNETES_NAMESPACE_THEME_CHAR=${POWERLINE_KUBERNETES_NAMESPACE_CHAR:="⎈ "}
-KUBERNETES_NAMESPACE_THEME_PROMPT_COLOR=${POWERLINE_KUBERNETES_NAMESPACE_COLOR:=60}
-
 AWS_PROFILE_CHAR=${POWERLINE_AWS_PROFILE_CHAR:="❲aws❳ "}
 AWS_PROFILE_PROMPT_COLOR=${POWERLINE_AWS_PROFILE_COLOR:=208}
 
@@ -89,6 +89,7 @@ COMMAND_NUMBER_THEME_PROMPT_CHAR=${POWERLINE_COMMAND_NUMBER_CHAR:="#"}
 GCLOUD_THEME_PROMPT_COLOR=${POWERLINE_GCLOUD_COLOR:=161}
 GCLOUD_CHAR=${POWERLINE_GCLOUD_CHAR:="❲G❳ "}
 
-POWERLINE_PROMPT=${POWERLINE_PROMPT:="user_info scm python_venv ruby node cwd"}
+#POWERLINE_PROMPT=${POWERLINE_PROMPT:="user_info scm python_venv ruby node cwd"}
+POWERLINE_PROMPT=${POWERLINE_PROMPT:="user_info scm python_venv ruby cwd"}
 
 safe_append_prompt_command __powerline_prompt_command
diff --git a/themes/powerline/powerline.base.bash b/themes/powerline/powerline.base.bash
index 84469e87..7da15cfd 100644
--- a/themes/powerline/powerline.base.bash
+++ b/themes/powerline/powerline.base.bash
@@ -1,12 +1,16 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
+
+# Define this here so it can be used by all of the Powerline themes
+THEME_CHECK_SUDO=${THEME_CHECK_SUDO:=true}
 
 function set_color() {
-	local fg='' bg=''
-	if [[ "${1:-}" != "-" ]]; then
+	set +u
+	if [[ "${1}" != "-" ]]; then
 		fg="38;5;${1}"
 	fi
-	if [[ "${2:-}" != "-" ]]; then
+	if [[ "${2}" != "-" ]]; then
 		bg="48;5;${2}"
 		[[ -n "${fg}" ]] && bg=";${bg}"
 	fi
@@ -95,13 +99,14 @@ function __powerline_k8s_namespace_prompt() {
 }
 
 function __powerline_python_venv_prompt() {
+	set +u
 	local python_venv=""
 
-	if [[ -n "${CONDA_DEFAULT_ENV:-}" ]]; then
+	if [[ -n "${CONDA_DEFAULT_ENV}" ]]; then
 		python_venv="${CONDA_DEFAULT_ENV}"
 		PYTHON_VENV_CHAR=${CONDA_PYTHON_VENV_CHAR}
-	elif [[ -n "${VIRTUAL_ENV:-}" ]]; then
-		python_venv="${VIRTUAL_ENV##*/}"
+	elif [[ -n "${VIRTUAL_ENV}" ]]; then
+		python_venv=$(basename "${VIRTUAL_ENV}")
 	fi
 
 	[[ -n "${python_venv}" ]] && echo "${PYTHON_VENV_CHAR}${python_venv}|${PYTHON_VENV_THEME_PROMPT_COLOR}"
@@ -132,7 +137,7 @@ function __powerline_scm_prompt() {
 		elif [[ "${SCM_SVN_CHAR}" == "${SCM_CHAR}" ]]; then
 			scm_prompt+="${SCM_CHAR}${SCM_BRANCH}${SCM_STATE}"
 		fi
-		echo "${scm_prompt?}|${color}"
+		echo "$(eval "echo ${scm_prompt}")${scm}|${color}"
 	fi
 }
 
@@ -238,12 +243,12 @@ function __powerline_left_segment() {
 		# Since the previous segment wasn't the last segment, add padding, if needed
 		#
 		if [[ "${POWERLINE_COMPACT_BEFORE_SEPARATOR}" -eq 0 ]]; then
-			LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}") ${normal?}"
+			LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}") ${normal}"
 		fi
 		if [[ "${LAST_SEGMENT_COLOR}" -eq "${params[1]}" ]]; then
-			LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}")${POWERLINE_LEFT_SEPARATOR_SOFT}${normal?}"
+			LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}")${POWERLINE_LEFT_SEPARATOR_SOFT}${normal}"
 		else
-			LEFT_PROMPT+="$(set_color "${LAST_SEGMENT_COLOR}" "${params[1]}")${POWERLINE_LEFT_SEPARATOR}${normal?}"
+			LEFT_PROMPT+="$(set_color "${LAST_SEGMENT_COLOR}" "${params[1]}")${POWERLINE_LEFT_SEPARATOR}${normal}"
 		fi
 	fi
 
@@ -253,7 +258,7 @@ function __powerline_left_segment() {
 }
 
 function __powerline_left_last_segment_padding() {
-	LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}") ${normal?}"
+	LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}") ${normal}"
 }
 
 function __powerline_last_status_prompt() {
@@ -280,9 +285,9 @@ function __powerline_prompt_command() {
 		[[ -n "${info}" ]] && __powerline_left_segment "${info}"
 	done
 
-	[[ "${last_status}" -ne 0 ]] && __powerline_left_segment "$(__powerline_last_status_prompt "${last_status}")"
+	[[ "${last_status}" -ne 0 ]] && __powerline_left_segment "$(__powerline_last_status_prompt ${last_status})"
 
-	if [[ -n "${LEFT_PROMPT}" ]] && [[ "${POWERLINE_COMPACT_AFTER_LAST_SEGMENT:-}" -eq 0 ]]; then
+	if [[ -n "${LEFT_PROMPT}" ]] && [[ "${POWERLINE_COMPACT_AFTER_LAST_SEGMENT}" -eq 0 ]]; then
 		__powerline_left_last_segment_padding
 	fi
 
@@ -291,11 +296,11 @@ function __powerline_prompt_command() {
 	prompt_color="$(set_color "${LAST_SEGMENT_COLOR}" -)"
 	if [[ -n "${LEFT_PROMPT}" ]] && [[ -n "${POWERLINE_LEFT_LAST_SEGMENT_PROMPT_CHAR}" ]]; then
 		LEFT_PROMPT+="$(set_color - "${LAST_SEGMENT_COLOR}")${POWERLINE_LEFT_LAST_SEGMENT_PROMPT_CHAR}"
-		prompt_color="${normal?}"
+		prompt_color="${normal}"
 	fi
-	[[ -n "${LEFT_PROMPT}" ]] && LEFT_PROMPT+="${prompt_color}${separator_char}${normal?}"
+	[[ -n "${LEFT_PROMPT}" ]] && LEFT_PROMPT+="${prompt_color}${separator_char}${normal}"
 
-	if [[ "${POWERLINE_COMPACT_PROMPT:-}" -eq 0 ]]; then
+	if [[ "${POWERLINE_COMPACT_PROMPT}" -eq 0 ]]; then
 		LEFT_PROMPT+=" "
 	fi
 
diff --git a/themes/pure/pure.theme.bash b/themes/pure/pure.theme.bash
index 4dd59e02..99476f4a 100644
--- a/themes/pure/pure.theme.bash
+++ b/themes/pure/pure.theme.bash
@@ -1,37 +1,41 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
 # scm theming
 SCM_THEME_PROMPT_PREFIX="|"
 SCM_THEME_PROMPT_SUFFIX=""
 
-SCM_THEME_PROMPT_DIRTY=" ${bold_red?}✗${normal?}"
-SCM_THEME_PROMPT_CLEAN=" ${green?}✓${normal?}"
-SCM_GIT_CHAR="${green?}±${normal?}"
-SCM_SVN_CHAR="${bold_cyan?}⑆${normal?}"
-SCM_HG_CHAR="${bold_red?}☿${normal?}"
+SCM_THEME_PROMPT_DIRTY=" ${bold_red}✗${normal}"
+SCM_THEME_PROMPT_CLEAN=" ${green}✓${normal}"
+SCM_GIT_CHAR="${green}±${normal}"
+SCM_SVN_CHAR="${bold_cyan}⑆${normal}"
+SCM_HG_CHAR="${bold_red}☿${normal}"
 
 VIRTUALENV_THEME_PROMPT_PREFIX="("
 VIRTUALENV_THEME_PROMPT_SUFFIX=")"
 
-function pure_prompt() {
-	local ps_host="${bold_blue?}\h${normal?}"
-	local ps_user="${green?}\u${normal?}"
-	local ps_user_mark="${green?} \$ ${normal?}"
-	local ps_root="${red?}\u${red?}"
-	local ps_root_mark="${red?} \$ ${normal?}"
-	local ps_path="${yellow?}\w${normal?}"
-	local virtualenv_prompt scm_prompt
-	virtualenv_prompt="$(virtualenv_prompt)"
-	scm_prompt="$(scm_prompt)"
+### TODO: openSUSE has already colors enabled, check if those differs from stock
+# LS colors, made with http://geoff.greer.fm/lscolors/
+# export LSCOLORS="Gxfxcxdxbxegedabagacad"
+# export LS_COLORS='no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.wmv=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:'
+
+pure_prompt() {
+	ps_host="${bold_blue}\h${normal}"
+	ps_user="${green}\u${normal}"
+	ps_user_mark="${green} $ ${normal}"
+	ps_root="${red}\u${red}"
+	ps_root_mark="${red} # ${normal}"
+	ps_path="${yellow}\w${normal}"
 	# make it work
-	case "${EUID:-$UID}" in
+	case $(id -u) in
 		0)
-			ps_user_mark="${ps_root_mark}"
-			ps_user="${ps_root}"
+			PS1="$(virtualenv_prompt)$ps_root@$ps_host$(scm_prompt):$ps_path$ps_root_mark"
+			;;
+		*)
+			PS1="$(virtualenv_prompt)$ps_user@$ps_host$(scm_prompt):$ps_path$ps_user_mark"
 			;;
 	esac
-	PS1="${virtualenv_prompt}${ps_user}@${ps_host}${scm_prompt}:${ps_path}${ps_user_mark}"
 }
 
 safe_append_prompt_command pure_prompt
diff --git a/themes/purity/purity.theme.bash b/themes/purity/purity.theme.bash
index 0fc6c4cf..22a3fbfb 100644
--- a/themes/purity/purity.theme.bash
+++ b/themes/purity/purity.theme.bash
@@ -1,44 +1,36 @@
 # shellcheck shell=bash
 # shellcheck disable=SC2034 # Expected behavior for themes.
+# shellcheck disable=SC2154 #TODO: fix these all.
 
-SCM_THEME_PROMPT_DIRTY=" ${bold_red?}⊘${normal?}"
-SCM_THEME_PROMPT_CLEAN=" ${bold_green?}✓${normal?}"
-SCM_THEME_PROMPT_PREFIX="${reset_color?}( "
-SCM_THEME_PROMPT_SUFFIX=" ${reset_color?})"
+SCM_THEME_PROMPT_DIRTY=" ${bold_red}⊘${normal}"
+SCM_THEME_PROMPT_CLEAN=" ${bold_green}✓${normal}"
+SCM_THEME_PROMPT_PREFIX="${reset_color}( "
+SCM_THEME_PROMPT_SUFFIX=" ${reset_color})"
 
-GIT_THEME_PROMPT_DIRTY=" ${bold_red?}⊘${normal?}"
-GIT_THEME_PROMPT_CLEAN=" ${bold_green?}✓${normal?}"
-GIT_THEME_PROMPT_PREFIX="${reset_color?}( "
-GIT_THEME_PROMPT_SUFFIX=" ${reset_color?})"
+GIT_THEME_PROMPT_DIRTY=" ${bold_red}⊘${normal}"
+GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓${normal}"
+GIT_THEME_PROMPT_PREFIX="${reset_color}( "
+GIT_THEME_PROMPT_SUFFIX=" ${reset_color})"
 
-STATUS_THEME_PROMPT_BAD="${bold_red?}❯${reset_color?}${normal?} "
-STATUS_THEME_PROMPT_OK="${bold_green?}❯${reset_color?}${normal?} "
-: "${PURITY_THEME_PROMPT_COLOR:=$blue}"
+STATUS_THEME_PROMPT_BAD="${bold_red}❯${reset_color}${normal} "
+STATUS_THEME_PROMPT_OK="${bold_green}❯${reset_color}${normal} "
+PURITY_THEME_PROMPT_COLOR="${PURITY_THEME_PROMPT_COLOR:=$blue}"
 
-function venv_prompt() {
+venv_prompt() {
 	python_venv=""
 	# Detect python venv
-	if [[ -n "${CONDA_DEFAULT_ENV:-}" ]]; then
-		python_venv="(${PYTHON_VENV_CHAR}${CONDA_DEFAULT_ENV}) "
+	if [[ -n "${CONDA_DEFAULT_ENV}" ]]; then
+		python_venv="($PYTHON_VENV_CHAR${CONDA_DEFAULT_ENV}) "
 	elif [[ -n "${VIRTUAL_ENV}" ]]; then
-		python_venv="(${PYTHON_VENV_CHAR}${VIRTUAL_ENV##*/}) "
+		python_venv="($PYTHON_VENV_CHAR$(basename "${VIRTUAL_ENV}")) "
 	fi
 	[[ -n "${python_venv}" ]] && echo "${python_venv}"
 }
 
 function prompt_command() {
-	local retval="$?" ret_status python_venv scm_prompt_info venv_prompt
-	case "${retval}" in
-		0)
-			ret_status="$STATUS_THEME_PROMPT_OK"
-			;;
-		*)
-			ret_status="$STATUS_THEME_PROMPT_BAD"
-			;;
-	esac
-	scm_prompt_info="$(scm_prompt_info)"
-	venv_prompt="$(venv_prompt)"
-	PS1="\n${PURITY_THEME_PROMPT_COLOR}\w ${scm_prompt_info}\n${ret_status}${venv_prompt}"
+	local retval=$? ret_status
+	ret_status="$([ $retval -eq 0 ] && echo -e "$STATUS_THEME_PROMPT_OK" || echo -e "$STATUS_THEME_PROMPT_BAD")"
+	PS1="\n${PURITY_THEME_PROMPT_COLOR}\w $(scm_prompt_info)\n${ret_status}$(venv_prompt)"
 }
 
 safe_append_prompt_command prompt_command
-- 
2.37.0

